{"version":3,"file":"main.js","mappings":"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","names":["BEHAVIOR","smooth","auto","FormationInfoRoutingModule","RouterModule","FormationInfoModule","CommonModule","SharedModule","StartComponent","constructor","orientationService","appRout","route","this","ngOnInit","initUser","i0","i1","i2","selectors","decls","vars","consts","template","rf","ctx","MyFilterPipe","transform","items","filter","item","groupe","indexOf","degree_r8","_r10","$implicit","ctx_r9","setDegree","nom_cat","degree_r11","_r13","ctx_r12","degree_r14","_r16","ctx_r15","degree_r17","_r19","ctx_r18","degree_r20","_r22","ctx_r21","degree_r23","_r25","ctx_r24","degree_r26","_r28","ctx_r27","pure","DegreeComponent","topNewsService","titleService","cap","bac","bts","licence","master","doctor","autre","setTitle","cyti","snapshot","queryParams","field","getDegreeCyti","getDegreeField","subscribe","data","degreeView","capLenght","x","length","btsLenght","liLenght","masLenght","docLenght","autLenght","undefined","ngAfterViewInit","scrollTo","degree","navigate","setNiveau","degreeCyti","i3","i4","DegreeComponent_mat_spinner_4_Template","DegreeComponent_ng_container_8_Template","DegreeComponent_ng_container_11_Template","DegreeComponent_ng_container_14_Template","DegreeComponent_ng_container_17_Template","DegreeComponent_ng_container_20_Template","DegreeComponent_ng_container_23_Template","DegreeComponent_ng_container_26_Template","loading$","DomFilterPipe","branche_dom","branche","field_r16","_r18","ctx_r17","setfiled","nom_dom","field_r19","_r21","ctx_r20","field_r22","_r24","ctx_r23","field_r25","_r27","ctx_r26","field_r28","_r30","ctx_r29","field_r31","_r33","ctx_r32","field_r34","_r36","ctx_r35","field_r37","_r39","ctx_r38","field_r40","_r42","ctx_r41","field_r43","_r45","ctx_r44","field_r46","_r48","ctx_r47","field_r49","_r51","ctx_r50","field_r52","_r54","ctx_r53","field_r55","_r57","ctx_r56","field_r58","_r60","ctx_r59","FieldComponent","agri","art","beaute","commerce","droit","finance","public","tourisme","animation","informatique","ingenierie","langue","marketing","sante","sport","userDomaineDegree","userDomainecyti","domaine$","getDomaineFromServer","pipe","tap","agriLenght","artLenght","beaLenght","comLenght","droLenght","finLenght","pubLenght","tourLenght","animLenght","infoLenght","ingLenght","langLenght","markLenght","santLenght","sporLenght","getPartDomaine","cyti_r2","_r4","ctx_r3","setCyti","ville_cam","FieldComponent_mat_spinner_4_Template","FieldComponent_ng_container_8_Template","FieldComponent_ng_container_12_Template","FieldComponent_ng_container_16_Template","FieldComponent_ng_container_20_Template","FieldComponent_ng_container_24_Template","FieldComponent_ng_container_28_Template","FieldComponent_ng_container_32_Template","FieldComponent_ng_container_36_Template","FieldComponent_ng_container_40_Template","FieldComponent_ng_container_44_Template","FieldComponent_ng_container_48_Template","FieldComponent_ng_container_52_Template","FieldComponent_ng_container_56_Template","FieldComponent_ng_container_60_Template","FieldComponent_ng_container_64_Template","CityComponent","cyties$","getPartCyties","getAllCyties","inputs","CityComponent_mat_spinner_4_Template","CityComponent_button_8_Template","StatutsComponent","SelectStatuts","statut","saveStatut","classe_r1","_r3","ctx_r2","setClasse","ClasseComponent","classe","saveClasse","niveau_r1","ClasseComponent_button_6_Template","EtudiantComponent","niveau","EtudiantComponent_button_6_Template","DernierDiplomeComponent","DernierDiplomeComponent_button_6_Template","ContactComponent","formBuilder","i","push","label","value","newContact","group","nom","Validators","prenom","born","pays","email","phone","FormControl","onSubmitForm","saveContact","$event","selectedItem","_c0","invalid","schooli_r1","ResultatsComponent","school$","getSerchResult","ResultatsComponent_app_pub_interest_item_2_Template","routes","path","component","OrientationRoutingModule","OrientationModule","OrientationService","imports","NgxMatIntlTelInputComponent","http","_loading$","BehaviorSubject","initialUser","id","city","name","surname","level","statuts","bornDate","country","tel","_domaine$","asObservable","setLoadingStatus","loading","next","get","environment","userDegree","userDomaine","userBranche","url","HttpParams","append","params","domaineDegree","take","fields","domaineCyti","dom","deg","degreeField","contact","saveClient","console","log","UserInfo","post","diplome","domaine","factory","ɵfac","TOKEN_KEY","USER_KEY","tokenStorageService","platformId","signOut","window","sessionStorage","clear","saveToken","token","removeItem","setItem","getToken","elt","isPlatformBrowser","getItem","saveUser","user","JSON","stringify","getUser","parse","blade","PLATFORM_ID","providedIn","TopNewsService","getAllTopNews","element","behavior","document","getElementById","scrollIntoView","block","inline","countFormation","ctx_r0","school","_c1","ctx_r1","date_debut_f","cout_f","ctx_r4","ctx_r5","ctx_r6","ctx_r7","descriptif_dip","descriptif_f","ctx_r8","descriptif_e","PubInterestItemComponent","showDialog","visible","showOnePage","sendNumber","visibleCall","onSubmitPhone","form","PubInterestItemComponent_p_tag_7_Template","PubInterestItemComponent_p_tag_8_Template","PubInterestItemComponent_p_tag_9_Template","PubInterestItemComponent_ng_template_10_Template","PubInterestItemComponent_p_tag_18_Template","PubInterestItemComponent_p_tag_19_Template","PubInterestItemComponent_p_tag_20_Template","PubInterestItemComponent_ng_container_27_Template","PubInterestItemComponent_ng_container_28_Template","nom_e","_r9","userPhone","_c2","nom_dip","logo_e","_c3","_c4","UnderBuildingComponent","MaterialModule","MatToolbarModule","MatCardModule","MatListModule","MatButtonModule","MatIconModule","MatFormFieldModule","MatInputModule","MatMenuModule","MatSidenavModule","MatProgressSpinnerModule","PrimengModule","CarouselModule","DataViewModule","ButtonModule","AccordionModule","TableModule","EditorModule","DropdownModule","RadioButtonModule","CardModule","TagModule","TabViewModule","DialogModule","ImageModule","FieldsetModule","DividerModule","ProgressBarModule","OrganizationChartModule","OverlayModule","InputTextModule","FlexLayoutModule","ReactiveFormsModule","FormsModule","production","apiUrl","AUTH_API","httpOptions","headers","HttpHeaders","AuthService","login","credentials","username","password","register","LoginComponent_form_3_div_13_div_1_Template","LoginComponent_form_3_div_13_div_2_Template","_r5","errors","required","minlength","errorMessage","_r11","_r2","ctx_r10","valid","onSubmit","LoginComponent_form_3_div_7_Template","ctx_r13","LoginComponent_form_3_div_13_Template","LoginComponent_form_3_div_18_Template","submitted","isLoginFailed","roles","LoginComponent","auth","tokenStorage","isLoggedIn","accessToken","reloadPage","err","error","message","location","reload","LoginComponent_form_3_Template","LoginComponent_div_4_Template","HeaderHeroComponent","TopVideoSlideComponent","topNews_r4","news_link","title","description","imageUrl","TopNewsSlideComponent_div_0_ng_template_2_Template","TopNewsSlideComponent_div_0_ng_template_3_Template","data_r1","responsiveOptions","TopNewsSlideComponent","breakpoint","numVisible","numScroll","myTopNews$","TopNewsSlideComponent_div_0_Template","SomeDegreeService","getSomeDegree","bts_r4","_r6","showThisDegree","CatalogPanelComponent_div_5_ng_template_2_Template","myBts_r2","item_r9","CatalogPanelComponent_div_8_ng_template_2_Template","items_r7","CatalogPanelComponent","someDegree","someBts$","someLicence$","CatalogPanelComponent_div_5_Template","CatalogPanelComponent_div_8_Template","LandingPageComponent","service","el","meta","counti","speed","addTags","content","map","count","cont","updateCounto","target","counta","inc","setTimeout","school_r2","OnepageComponent","schoolName","schoolData$","res","OnepageComponent_div_0_Template","OnepageComponent_div_2_Template","AboutComponent","API_URL","UserService","getPublicContent","responseType","getUserBoard","getModeratorBoard","getAdminBoard","postEts","etsForm","onSubmitCateg","categorie","categ","_r7","newEts","ReferencerComponent","approut","userService","code","stape1","stape2","stape3","etablissement","ville","comment","navigateByUrl","diplome_r1","ReferencerComponent_p_card_2_Template","ReferencerComponent_p_card_3_Template","ReferencerComponent_p_card_4_Template","DiplomesComponent","diplomeName","diplomeData$","DiplomesComponent_div_0_Template","loadChildren","Promise","resolve","then","__webpack_require__","bind","m","e","AdminModule","InformationsModule","redirectTo","AppRoutingModule","useHash","initialNavigation","HeaderComponent","sidenavToggle","EventEmitter","onToggleSidenav","emit","outputs","_r0","_r1","FooterComponent","SidenavListComponent","sidenavClose","onSidenavClose","LoaderService","setLoading","getLoading","SpinnerComponent","loader","logout","SpinnerComponent_div_0_Template","AppComponent","showAdminBoard","showModeratorBoard","global","protocol","href","replace","includes","_r8","close","toggle","AppComponent_li_9_Template","AppComponent_li_10_Template","AppComponent_li_11_Template","AppComponent_ul_12_Template","AppComponent_ul_13_Template","CoreModule","TopVideoSchoolModule","NgbCarouselModule","TopNewsModule","LandingPageModule","AuthInterceptor","intercept","req","authReq","clone","set","handle","httpInterceptorProviders","provide","HTTP_INTERCEPTORS","useClass","multi","AppModule","bootstrap","LOCALE_ID","useValue","LocationStrategy","HashLocationStrategy","provideClientHydration","BrowserModule","appId","BrowserAnimationsModule","NgbModule","HttpClientModule","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","catch"],"sourceRoot":"webpack:///","sources":["./src/app/core/model/Behavior.ts","./src/app/formation-info/formation-info-routing.module.ts","./src/app/formation-info/formation-info.module.ts","./src/app/orientation/components/start/start.component.ts","./src/app/orientation/components/start/start.component.html","./src/app/shared/pipes/myfilter.pipe.ts","./src/app/orientation/components/degree/degree.component.html","./src/app/orientation/components/degree/degree.component.ts","./src/app/shared/pipes/domFilter.pipe.ts","./src/app/orientation/components/field/field.component.html","./src/app/orientation/components/field/field.component.ts","./src/app/orientation/components/city/city.component.html","./src/app/orientation/components/city/city.component.ts","./src/app/orientation/components/statuts/statuts.component.ts","./src/app/orientation/components/classe/classe.component.html","./src/app/orientation/components/statuts/statuts.component.html","./src/app/orientation/components/classe/classe.component.ts","./src/app/orientation/components/etudiant/etudiant.component.html","./src/app/orientation/components/etudiant/etudiant.component.ts","./src/app/orientation/components/dernier-diplome/dernier-diplome.component.html","./src/app/orientation/components/dernier-diplome/dernier-diplome.component.ts","./src/app/orientation/components/contact/contact.component.ts","./src/app/orientation/components/contact/contact.component.html","./src/app/orientation/components/resultats/resultats.component.html","./src/app/orientation/components/resultats/resultats.component.ts","./src/app/orientation/orientation-routing.module.ts","./src/app/orientation/orientation.module.ts","./src/app/orientation/services/orientation.service.ts","./src/app/services/token-storage.service.ts","./src/app/services/top-news.service.ts","./src/app/shared/components/pub-interest-item/pub-interest-item.component.html","./src/app/shared/components/pub-interest-item/pub-interest-item.component.ts","./src/app/shared/components/under-building/under-building.component.ts","./src/app/shared/components/under-building/under-building.component.html","./src/app/shared/material.module.ts","./src/app/shared/primeng.modules.ts","./src/app/shared/shared.module.ts","./src/environments/environment.ts","./src/app/services/auth.service.ts","./src/app/login/login.component.html","./src/app/login/login.component.ts","./src/app/formation-info/components/header-hero/header-hero.component.ts","./src/app/formation-info/components/header-hero/header-hero.component.html","./src/app/top-video-school/components/top-video-slide/top-video-slide.component.ts","./src/app/top-video-school/components/top-video-slide/top-video-slide.component.html","./src/app/top-news/components/top-news-slide/top-news-slide.component.html","./src/app/top-news/components/top-news-slide/top-news-slide.component.ts","./src/app/services/some-degree.service.ts","./src/app/landing-page/components/catalog-panel/catalog-panel.component.html","./src/app/landing-page/components/catalog-panel/catalog-panel.component.ts","./src/app/landing-page/components/landing-page/landing-page.component.ts","./src/app/landing-page/components/landing-page/landing-page.component.html","./src/app/etablissement/components/onepage/onepage.component.html","./src/app/etablissement/components/onepage/onepage.component.ts","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/app/services/user.service.ts","./src/app/referencer/referencer.component.html","./src/app/referencer/referencer.component.ts","./src/app/diplomes/diplomes.component.html","./src/app/diplomes/diplomes.component.ts","./src/app/app-routing.module.ts","./src/app/core/components/header/header.component.ts","./src/app/core/components/header/header.component.html","./src/app/core/components/footer/footer.component.ts","./src/app/core/components/footer/footer.component.html","./src/app/core/components/sidenav-list/sidenav-list.component.ts","./src/app/core/components/sidenav-list/sidenav-list.component.html","./src/app/services/loader.service.ts","./src/app/spinner/spinner.component.html","./src/app/spinner/spinner.component.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/core/core.module.ts","./src/app/top-video-school/top-video-school.module.ts","./src/app/top-news/top-news.module.ts","./src/app/landing-page/landing-page.module.ts","./src/app/interceptors/auth.interceptor.ts","./src/app/app.module.ts","./src/main.ts"],"sourcesContent":["export enum BEHAVIOR {\r\n    smooth = 'smooth',\r\n    auto = 'auto'\r\n}","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\nconst routes: Routes = [\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class FormationInfoRoutingModule {}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormationInfoRoutingModule } from './formation-info-routing.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { HeaderHeroComponent } from './components/header-hero/header-hero.component';\n\n\n\n@NgModule({\n  declarations: [\n    HeaderHeroComponent\n  ],\n  imports: [\n    CommonModule,\n    FormationInfoRoutingModule,\n    SharedModule\n  ],\n  exports: [\n   // HomeComponent,\n    HeaderHeroComponent\n  ]\n})\nexport class FormationInfoModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { OrientationService } from '../../services/orientation.service';\n\n@Component({\n  selector: 'app-start',\n  templateUrl: './start.component.html',\n  styleUrls: ['./start.component.scss']\n})\nexport class StartComponent implements OnInit {\n\n  \n  constructor (private orientationService :OrientationService,\n    private appRout : Router,\n    private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.orientationService.initUser();\n  }\n\n\n\n}\n","<section class=\"player\" fxFlex fxLayout=\"column\">\n    <div class=\"title\">Et pour vous, on commence par quoi ? </div>\n    <div class=\"player-forms\" >\n      <a routerLink=\"/orientation/start/degree\"><button mat-raised-button >Trouver ma <br /> future  formation</button></a> \n      <!-- <a routerLink=\"/orientation/start/field\"><button mat-raised-button >Choisir un domaine</button></a> \n      <a routerLink=\"/orientation/start/city\"><button mat-raised-button >Choisir une ville</button></a> -->\n    </div>\n</section>\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { degree } from 'src/app/core/model/degree-model';\r\n\r\n@Pipe({\r\n    name: 'myfilter',\r\n    pure: false\r\n})\r\nexport class MyFilterPipe implements PipeTransform {\r\n    transform(items: degree[] | null, filter: {groupe:string}): degree[] {\r\n        if (items ) {\r\n            return items.filter(item => item.groupe.indexOf(filter.groupe) !== -1);\r\n        }else {\r\n            return [];\r\n        }\r\n        \r\n\r\n        // filter items array, items which match and return true will be\r\n        // kept, false will be filtered out\r\n    }\r\n}","<div class=\"cardBar\">\n    <p-progressBar [showValue]=\"false\" [value]=\"20\"></p-progressBar>\n</div>\n<h1>Quel diplôme souhaitez-vous préparer ?</h1>\n<mat-spinner *ngIf=\"loading$ | async\"></mat-spinner>\n<p-accordion [activeIndex]=\"-1\">\n    <p-accordionTab header=\"CAP ou équivalent\" [selected]=\"true\" class=\"wrapper\" [disabled]=\"capLenght === 0\">\n        <ng-container *ngFor=\"let degree of degreeView | myfilter:cap\" >       \n            <button pButton pRipple type=\"button\"\n                    label={{degree.nom_cat}} \n                    (click)=\"setDegree(degree.nom_cat)\">\n            </button>\n        </ng-container>\n    </p-accordionTab>  \n    <p-accordionTab header=\"Bac ou équivalent\" [selected]=\"true\" class=\"wrapper\" [disabled]=\"capLenght === 0\">\n        <ng-container *ngFor=\"let degree of degreeView | myfilter:bac\" >       \n            <button pButton pRipple type=\"button\"\n                    label={{degree.nom_cat}} \n                    (click)=\"setDegree(degree.nom_cat)\">\n            </button>\n        </ng-container>\n    </p-accordionTab>  \n    <p-accordionTab header=\"Bac+1 à Bac+2\" [selected]=\"true\"  [disabled]=\"btsLenght === 0\">\n        <ng-container *ngFor=\"let degree of degreeView | myfilter:bts\" >       \n            <button pButton pRipple type=\"button\"\n                    label={{degree.nom_cat}}\n                    (click)=\"setDegree(degree.nom_cat)\">\n            </button>\n        </ng-container>\n    </p-accordionTab> \n    <p-accordionTab header=\"Bac+3\" [selected]=\"true\"  [disabled]=\"liLenght === 0\">\n        <ng-container *ngFor=\"let degree of degreeView | myfilter:licence\" >       \n            <button pButton pRipple type=\"button\"\n                    label={{degree.nom_cat}}\n                    (click)=\"setDegree(degree.nom_cat)\">\n            </button>\n        </ng-container>\n    </p-accordionTab> \n    <p-accordionTab header=\"Bac+4 à Bac+5\" [selected]=\"true\"  [disabled]=\"masLenght === 0\">\n        <ng-container *ngFor=\"let degree of degreeView | myfilter:master\" >       \n            <button pButton pRipple type=\"button\"\n                    label={{degree.nom_cat}}\n                    (click)=\"setDegree(degree.nom_cat)\">\n            </button>\n        </ng-container>\n    </p-accordionTab>\n    <p-accordionTab header=\"Bac+6 et plus\" [selected]=\"true\" [disabled]=\"docLenght === 0\" >\n        <ng-container *ngFor=\"let degree of degreeView | myfilter:doctor\" >       \n            <button pButton pRipple type=\"button\"\n                    label={{degree.nom_cat}}\n                    (click)=\"setDegree(degree.nom_cat)\">\n            </button>\n        </ng-container>\n    </p-accordionTab>\n    <p-accordionTab header=\"autre\" [selected]=\"true\"  [disabled]=\"autLenght === 0\">\n        <ng-container *ngFor=\"let degree of degreeView | myfilter:autre\" >       \n            <button pButton pRipple type=\"button\"\n                    label={{degree.nom_cat}}\n                    (click)=\"setDegree(degree.nom_cat)\">\n            </button>\n        </ng-container>\n    </p-accordionTab>\n</p-accordion>\n\n<p-button class=\"buti\" styleClass=\"p-button-outlined\" (click)=\"setNiveau()\" label=\"Je ne sais pas encore\" ></p-button>\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable, map } from 'rxjs';\nimport { degree } from 'src/app/core/model/degree-model';\nimport { OrientationService } from '../../services/orientation.service';\nimport { Title } from '@angular/platform-browser';\nimport { BEHAVIOR } from 'src/app/core/model/Behavior';\nimport { TopNewsService } from 'src/app/services/top-news.service';\n\n@Component({\n  selector: 'app-degree',\n  templateUrl: './degree.component.html',\n  styleUrls: ['./degree.component.scss'   ]\n})\nexport class DegreeComponent implements OnInit, AfterViewInit {\n\n  degree$!: Observable<degree[]>;\n  degreeView!: degree [];\n  loading$!: Observable<boolean>;\n  cap = {groupe: 'CAP ou équivalent'};\n  bac = {groupe: 'Bac ou équivalent'};\n  bts = {groupe: 'Bac+1 à Bac+2'};\n  licence = {groupe: 'Bac+3'};\n  master = {groupe: 'Bac+4 à Bac+5'};\n  doctor = {groupe: 'Bac+6 et plus'};\n  autre = {groupe: 'Autre'};\n\n  capLenght!: number\n  btsLenght!: number\n  liLenght!: number\n  masLenght!: number\n  docLenght!: number\n  autLenght!: number\n\n  constructor (private orientationService :OrientationService,\n              private appRout : Router,\n              private route: ActivatedRoute,\n              private topNewsService: TopNewsService,\n              private titleService:Title) {this.titleService.setTitle(\"quel diplome pour ma formation au Cameroun\");}\n\n  ngOnInit(){\n    const cyti = this.route.snapshot.queryParams['cyti'];\n    const field = this.route.snapshot.queryParams['field'];\n    /*si une ville a deja été selectionné, on n'affiche que les diplomes de cette ville*/\n    if (cyti) {\n      this.getDegreeCyti(cyti);\n    } else if (field) {\n      this.orientationService.getDegreeField(field).subscribe(\n        data => {\n          this.degreeView = data\n          this.capLenght = this.degreeView.filter(x => x.groupe == this.cap.groupe).length\n          this.btsLenght = this.degreeView.filter(x => x.groupe == this.bts.groupe).length\n          this.liLenght = this.degreeView.filter(x => x.groupe == this.licence.groupe).length\n          this.masLenght = this.degreeView.filter(x => x.groupe == this.master.groupe).length\n          this.docLenght = this.degreeView.filter(x => x.groupe == this.doctor.groupe).length\n          this.autLenght = this.degreeView.filter(x => x.groupe == this.autre.groupe).length\n        }\n      );\n    } else if (cyti === undefined && field === undefined) {\n      //this.getDegreeCyti('tous');\n      this.orientationService.getDegreeCyti('tous').subscribe(\n        data => {\n          this.degreeView = data\n        }\n      );\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.topNewsService.scrollTo('header', BEHAVIOR.auto)\n  }\n\n  setDegree(degree : string){\n    let cyti = this.route.snapshot.queryParams['cyti'];\n    let field = this.route.snapshot.queryParams['field'];\n    //***Si field et cyti ne sont pas défini, on passe a la page \"domaine\" */\n    if ( field === undefined && cyti === undefined) {\n      this.appRout.navigate(\n        ['orientation/domaines/'],\n        {queryParams:  {degree:degree} }\n      );\n    } else if (cyti !== undefined) {\n      //**Si cyti seulement est défini, on le met en queryParams et on passe a la page \"domaine\" */\n      this.appRout.navigate(\n        ['orientation/domaines/'],\n        {queryParams:  {degree:degree, cyti:cyti} }\n      );\n    } else if (field !== undefined) {\n      //** Si field est défini, on le met en queryParams et on passe à la page \"city\" */\n      this.appRout.navigate(\n        ['orientation/city/'],\n        {queryParams: {degree:degree, field:field} }\n      );\n    }\n  }\n\n  setNiveau(){\n    \n  }\n    \n  getDegreeCyti (degreeCyti: string) {\n    this.orientationService.getDegreeCyti(degreeCyti).subscribe(\n      data => {\n        this.degreeView = data;\n        this.capLenght = this.degreeView.filter(x => x.groupe == this.cap.groupe).length\n        this.btsLenght = this.degreeView.filter(x => x.groupe == this.bts.groupe).length\n        this.liLenght = this.degreeView.filter(x => x.groupe == this.licence.groupe).length\n        this.masLenght = this.degreeView.filter(x => x.groupe == this.master.groupe).length\n        this.docLenght = this.degreeView.filter(x => x.groupe == this.doctor.groupe).length\n        this.autLenght = this.degreeView.filter(x => x.groupe == this.autre.groupe).length\n\n      }\n    );;\n\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { field } from 'src/app/core/model/field-model';\r\n\r\n@Pipe({\r\n    name: 'domfilter',\r\n    pure: false\r\n})\r\nexport class DomFilterPipe implements PipeTransform {\r\n    transform(items: field[] | null, filter: {branche:string}): field[] {\r\n        if (items ) {\r\n            return items.filter(item => item.branche_dom.indexOf(filter.branche) !== -1);\r\n        }else {\r\n            return [];\r\n        }\r\n        \r\n\r\n        // filter items array, items which match and return true will be\r\n        // kept, false will be filtered out\r\n    }\r\n}","<div class=\"cardBar\">\n    <p-progressBar [showValue]=\"false\" [value]=\"40\"></p-progressBar>\n</div>\n<h1>Dans quelle filière souhaitez-vous effectuer votre formation ?</h1>\n<mat-spinner *ngIf=\"loading$ | async\"></mat-spinner>\n<p-accordion [activeIndex]=\"-1\" >\n    <p-accordionTab header=\"Agricultue, Environnement\" [selected]=\"true\" [disabled]=\"agriLenght === 0\">\n        <ng-container *ngFor=\"let field of domaine$ | async | domfilter:agri\">\n            <button pButton pRipple type=\"button\"\n                    label={{field.nom_dom}} \n                    (click)=\"setfiled(field.nom_dom, field.branche_dom)\">\n            </button>\n        </ng-container>\n    </p-accordionTab> \n    \n    <p-accordionTab header=\"Art, Culture, Design, Mode\" [selected]=\"true\" [disabled]=\"artLenght === 0\" >\n        <ng-container *ngFor=\"let field of domaine$ | async | domfilter:art\">\n            <button pButton pRipple type=\"button\"\n                    label={{field.nom_dom}} \n                    (click)=\"setfiled(field.nom_dom, field.branche_dom)\">\n            </button>\n        </ng-container>\n    </p-accordionTab> \n    \n    <p-accordionTab header=\"Bien-être, Beauté\" [selected]=\"true\" [disabled]=\"beaLenght === 0\">\n        <ng-container *ngFor=\"let field of domaine$ | async | domfilter:beaute\">\n            <button pButton pRipple type=\"button\"\n                    label={{field.nom_dom}} \n                    (click)=\"setfiled(field.nom_dom, field.branche_dom)\">\n            </button>\n        </ng-container>\n    </p-accordionTab>\n    \n    <p-accordionTab header=\"Commerce, management\" [selected]=\"true\" [disabled]=\"comLenght === 0\">\n        <ng-container *ngFor=\"let field of domaine$ | async | domfilter:commerce\">\n            <button pButton pRipple type=\"button\"\n                    label={{field.nom_dom}} \n                    (click)=\"setfiled(field.nom_dom, field.branche_dom)\">\n            </button>\n        </ng-container>\n    </p-accordionTab>\n    \n    <p-accordionTab header=\"Droit, Sc. Politiques\" [selected]=\"true\" [disabled]=\"droLenght === 0\">\n        <ng-container *ngFor=\"let field of domaine$ | async | domfilter:droit\">\n            <button pButton pRipple type=\"button\"\n                    label={{field.nom_dom}} \n                    (click)=\"setfiled(field.nom_dom, field.branche_dom)\">\n            </button>\n        </ng-container>\n    </p-accordionTab>\n    \n    <p-accordionTab header=\"Finance, comptabilité\" [selected]=\"true\" [disabled]=\"finLenght === 0\">\n        <ng-container *ngFor=\"let field of domaine$ | async | domfilter:finance\">\n            <button pButton pRipple type=\"button\"\n                    label={{field.nom_dom}} \n                    (click)=\"setfiled(field.nom_dom, field.branche_dom)\">\n            </button>\n        </ng-container>\n    </p-accordionTab>\n    \n    <p-accordionTab header=\"Fonction publique\" [selected]=\"true\" [disabled]=\"pubLenght === 0\">\n        <ng-container *ngFor=\"let field of domaine$ | async | domfilter:public\">\n            <button pButton pRipple type=\"button\"\n                    label={{field.nom_dom}} \n                    (click)=\"setfiled(field.nom_dom, field.branche_dom)\">\n            </button>\n        </ng-container>\n    </p-accordionTab>\n    \n    <p-accordionTab header=\"Hôtellerie, tourisme\" [selected]=\"true\" [disabled]=\"tourLenght === 0\">\n        <ng-container *ngFor=\"let field of domaine$ | async | domfilter:tourisme\">\n            <button pButton pRipple type=\"button\"\n                    label={{field.nom_dom}} \n                    (click)=\"setfiled(field.nom_dom, field.branche_dom)\">\n            </button>\n        </ng-container>\n    </p-accordionTab>\n    \n    <p-accordionTab header=\"Image, son, animation 2D/3D\" [selected]=\"true\" [disabled]=\"animLenght === 0\">\n        <ng-container *ngFor=\"let field of domaine$ | async | domfilter:animation\">\n            <button pButton pRipple type=\"button\"\n                    label={{field.nom_dom}} \n                    (click)=\"setfiled(field.nom_dom, field.branche_dom)\">\n            </button>\n        </ng-container>\n    </p-accordionTab>\n    \n    <p-accordionTab header=\"Informatique\" [selected]=\"true\" [disabled]=\"infoLenght === 0\">\n        <ng-container *ngFor=\"let field of domaine$ | async | domfilter:informatique\">\n            <button pButton pRipple type=\"button\"\n                    label={{field.nom_dom}} \n                    (click)=\"setfiled(field.nom_dom, field.branche_dom)\">\n            </button>\n        </ng-container>\n    </p-accordionTab>\n    \n    <p-accordionTab header=\"Ingénierie, Science\" [selected]=\"true\" [disabled]=\"ingLenght === 0\">\n        <ng-container *ngFor=\"let field of domaine$ | async | domfilter:ingenierie\">\n            <button pButton pRipple type=\"button\"\n                    label={{field.nom_dom}} \n                    (click)=\"setfiled(field.nom_dom, field.branche_dom)\">\n            </button>\n        </ng-container>\n    </p-accordionTab>\n    \n    <p-accordionTab header=\"Langues et Sc. humaines\" [selected]=\"true\" [disabled]=\"langLenght === 0\">\n        <ng-container *ngFor=\"let field of domaine$ | async | domfilter:langue\">\n            <button pButton pRipple type=\"button\"\n                    label={{field.nom_dom}} \n                    (click)=\"setfiled(field.nom_dom, field.branche_dom)\">\n            </button>\n        </ng-container>\n    </p-accordionTab>\n    \n    <p-accordionTab header=\"Marketing, communication\" [selected]=\"true\" [disabled]=\"markLenght === 0\">\n        <ng-container *ngFor=\"let field of domaine$ | async | domfilter:marketing\">\n            <button pButton pRipple type=\"button\"\n                    label={{field.nom_dom}} \n                    (click)=\"setfiled(field.nom_dom, field.branche_dom)\">\n            </button>\n        </ng-container>\n    </p-accordionTab>\n    <p-accordionTab header=\"Santé\" [selected]=\"true\" [disabled]=\"santLenght === 0\">\n        <ng-container *ngFor=\"let field of domaine$ | async | domfilter:sante\">\n            <button pButton pRipple type=\"button\"\n                    label={{field.nom_dom}} \n                    (click)=\"setfiled(field.nom_dom, field.branche_dom)\">\n            </button>\n        </ng-container>\n    </p-accordionTab> \n    \n    <p-accordionTab header=\"Sport, social, animation\" [selected]=\"true\" [disabled]=\"sporLenght === 0\">\n        <ng-container *ngFor=\"let field of domaine$ | async | domfilter:sport\">\n            <button pButton pRipple type=\"button\"\n                    label={{field.nom_dom}} \n                    (click)=\"setfiled(field.nom_dom, field.branche_dom)\">\n            </button>\n        </ng-container>\n    </p-accordionTab>\n</p-accordion >\n\n<p-button class=\"buti\" styleClass=\"p-button-outlined\" (click)=\"setNiveau()\" label=\"Je ne sais pas encore\" ></p-button>\n","import { AfterViewInit, ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable, filter, map, tap } from 'rxjs';\nimport { field } from 'src/app/core/model/field-model';\nimport { OrientationService } from '../../services/orientation.service';\nimport { Title } from '@angular/platform-browser';\nimport { TopNewsService } from 'src/app/services/top-news.service';\nimport { BEHAVIOR } from 'src/app/core/model/Behavior';\n\n@Component({\n  selector: 'app-field',\n  templateUrl: './field.component.html',\n  styleUrls: ['./field.component.scss'   ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FieldComponent implements OnInit, AfterViewInit{\n\n  domaine$!: Observable<field[]>;\n  loading$!: Observable<boolean>;\n\n  agri = {branche: 'Agriculture, Environnement'};\n  art = {branche:'Art, Culture, Design, Mode'};\n  beaute = {branche: 'Bien-être, Beauté'};\n  commerce = {branche: 'Commerce, management'};\n  droit = {branche: 'Droit, Sc. Politiques'};\n  finance = {branche:'Finance, comptabilité'};\n  public = {branche: 'Fonction publique'};\n  tourisme = {branche: 'Hôtellerie, tourisme'};\n  animation = {branche: 'Image, son, animation 2D/3D'};\n  informatique = {branche: 'Informatique'};\n  ingenierie = {branche: 'Ingénierie, Science'};\n  langue = {branche: 'Langues et Sc. humaines'};\n  marketing = {branche: 'Marketing, communication'};\n  sante = {branche: 'santé'};\n  sport = {branche: 'Sport, social, animation'};\n\n  agriLenght!: number;\n  artLenght!: number;\n  beaLenght!: number;\n  comLenght!: number;\n  droLenght!: number;\n  finLenght!: number;\n  pubLenght!: number;\n  tourLenght!: number;\n  animLenght!: number;\n  infoLenght!: number;\n  ingLenght!: number;\n  langLenght!: number;\n  markLenght!: number;\n  santLenght!: number;\n  sporLenght!: number;\n\n\n  constructor (private orientationService :OrientationService,\n                private appRout : Router,\n                private route: ActivatedRoute,\n                private topNewsService : TopNewsService,\n                private titleService:Title) {this.titleService.setTitle(\"quel sont les domaines de formation au Cameroun\");}\n\n  ngOnInit():void {\n    const userDomaineDegree = this.route.snapshot.queryParams['degree'];\n    const userDomainecyti = this.route.snapshot.queryParams['cyti'];\n    //console.log(userDomaineDegree)\n    this.loading$ = this.orientationService.loading$;\n    this.domaine$ = this.orientationService.domaine$;\n\n    if (userDomaineDegree && userDomainecyti === undefined) {\n      this.orientationService.getDomaineFromServer(userDomaineDegree);\n      this.domaine$.pipe(\n        tap( data => {\n          this.agriLenght = data.filter(x => x.branche_dom == this.agri.branche).length\n          this.artLenght = data.filter(x => x.branche_dom == this.art.branche).length\n          this.beaLenght = data.filter(x => x.branche_dom == this.beaute.branche).length\n          this.comLenght = data.filter(x => x.branche_dom == this.commerce.branche).length\n          this.droLenght = data.filter(x => x.branche_dom == this.droit.branche).length\n          this.finLenght = data.filter(x => x.branche_dom == this.finance.branche).length\n          this.pubLenght = data.filter(x => x.branche_dom == this.public.branche).length\n          this.tourLenght = data.filter(x => x.branche_dom == this.tourisme.branche).length\n          this.animLenght = data.filter(x => x.branche_dom == this.animation.branche).length\n          this.infoLenght = data.filter(x => x.branche_dom == this.informatique.branche).length\n          this.ingLenght = data.filter(x => x.branche_dom == this.ingenierie.branche).length\n          this.langLenght = data.filter(x => x.branche_dom == this.langue.branche).length\n          this.markLenght = data.filter(x => x.branche_dom == this.marketing.branche).length\n          this.santLenght = data.filter(x => x.branche_dom == this.sante.branche).length\n          this.sporLenght = data.filter(x => x.branche_dom == this.sport.branche).length\n        }    \n        )\n      ).subscribe()\n    } else if (userDomainecyti) {\n      this.domaine$ = this.orientationService.getPartDomaine(userDomaineDegree, userDomainecyti);      \n      this.domaine$.pipe(\n        tap( data => {\n          this.agriLenght = data.filter(x => x.branche_dom == this.agri.branche).length\n          this.artLenght = data.filter(x => x.branche_dom == this.art.branche).length\n          this.beaLenght = data.filter(x => x.branche_dom == this.beaute.branche).length\n          this.comLenght = data.filter(x => x.branche_dom == this.commerce.branche).length\n          this.droLenght = data.filter(x => x.branche_dom == this.droit.branche).length\n          this.finLenght = data.filter(x => x.branche_dom == this.finance.branche).length\n          this.pubLenght = data.filter(x => x.branche_dom == this.public.branche).length\n          this.tourLenght = data.filter(x => x.branche_dom == this.tourisme.branche).length\n          this.animLenght = data.filter(x => x.branche_dom == this.animation.branche).length\n          this.infoLenght = data.filter(x => x.branche_dom == this.informatique.branche).length\n          this.ingLenght = data.filter(x => x.branche_dom == this.ingenierie.branche).length\n          this.langLenght = data.filter(x => x.branche_dom == this.langue.branche).length\n          this.markLenght = data.filter(x => x.branche_dom == this.marketing.branche).length\n          this.santLenght = data.filter(x => x.branche_dom == this.sante.branche).length\n          this.sporLenght = data.filter(x => x.branche_dom == this.sport.branche).length\n        }    \n        )\n      ).subscribe()\n\n    } else {\n      this.orientationService.getDomaineFromServer('tous');\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.topNewsService.scrollTo('header', BEHAVIOR.auto)\n  }\n\n  setNiveau(){}\n\n  setfiled(field : string, branche : string) {\n   const degree = this.route.snapshot.queryParams['degree'];\n   const cyti = this.route.snapshot.queryParams['cyti'];\n   if (degree  && cyti == undefined) {\n      this.appRout.navigate(\n        ['orientation/city/'],\n        {queryParams: {field:field, branche:branche, degree:degree} }\n      );\n    } else if(degree  && cyti  ) {\n      this.appRout.navigate(\n        ['orientation/statuts/'],\n        {queryParams: {degree:degree, field:field, cyti:cyti} }\n      );\n    } else {\n      this.appRout.navigate(\n        ['orientation/degree/'],\n        {queryParams: {field:field} }\n      );\n    }\n  }\n}\n","<div class=\"cardBar\">\n    <p-progressBar [showValue]=\"false\" [value]=\"70\"></p-progressBar>\n</div>\n<h1>Dans quelle ville souhaitez-vous suivre votre formation ?</h1>\n<mat-spinner *ngIf=\"loading$ | async\"></mat-spinner>\n<div >\n    <div class=\"container\">\n        <button class=\"but\" pButton pRipple  \n                            *ngFor=\"let cyti of cyties$ |async \" \n                            type=\"button\" \n                            [label]=\"cyti.ville_cam\"\n                            (click)=\"setCyti(cyti.ville_cam)\"></button>\n    </div>\n</div>\n\n<p-button class=\"buti\" label=\"Cameroun entier\" styleClass=\"p-button-outlined\" (click)=\"setNiveau()\"></p-button>","import { AfterViewInit, Component, Input, OnInit } from '@angular/core';\nimport { Observable, map } from 'rxjs';\nimport { OrientationService } from 'src/app/orientation/services/orientation.service';\nimport { ville } from 'src/app/core/model/ville-model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { field } from 'src/app/core/model/field-model';\nimport { degree } from 'src/app/core/model/degree-model';\nimport { Title } from '@angular/platform-browser';\nimport { BEHAVIOR } from 'src/app/core/model/Behavior';\nimport { TopNewsService } from 'src/app/services/top-news.service';\n\n@Component({\n  selector: 'app-city',\n  templateUrl: './city.component.html',\n  styleUrls: ['./city.component.scss'   ]\n})\nexport class CityComponent implements OnInit, AfterViewInit{\n\n  @Input() cyties$!: Observable<ville[]>;\n\n  loading$!: Observable<boolean>;\n\n  constructor (private orientationService :OrientationService,\n                private appRout : Router,\n                private route: ActivatedRoute,\n                private topNewsService: TopNewsService,\n                private titleService:Title) {this.titleService.setTitle(\"Trouver bonne une école de formation au Cameroun\");}\n\n  ngOnInit():void {\n    this.loading$ = this.orientationService.loading$;\n    let degree = this.route.snapshot.queryParams['degree'];\n    let field = this.route.snapshot.queryParams['field'];\n    let branche = this.route.snapshot.queryParams['branche'];\n    if (field  && degree) {\n      //console.log('normalement')\n      this.cyties$ = this.orientationService.getPartCyties( degree, field, branche);\n    } else {\n      /*Envoyer une requete de toutes les villes ayant un campus*/\n      this.cyties$ = this.orientationService.getAllCyties();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.topNewsService.scrollTo('header', BEHAVIOR.auto)\n  }\n\n  setNiveau(){}\n  \n  setCyti (cyti : string) {\n    let degree = this.route.snapshot.queryParams['degree'];\n    let field = this.route.snapshot.queryParams['field'];\n    let branche = this.route.snapshot.queryParams['branche'];\n    if (degree && field ) {\n      this.appRout.navigate(\n        ['orientation/statuts/'],\n        {queryParams: {degree:degree, field:field, branche:branche, cyti:cyti} }\n      );\n    } else {\n      this.appRout.navigate(\n        ['orientation/degree/'],\n        {queryParams: {cyti:cyti} }\n      );\n    }\n  }\n\n\n}\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { OrientationService } from '../../services/orientation.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TopNewsService } from 'src/app/services/top-news.service';\nimport { BEHAVIOR } from 'src/app/core/model/Behavior';\n\n@Component({\n  selector: 'app-statuts',\n  templateUrl: './statuts.component.html',\n  styleUrls: ['./statuts.component.scss'   ]\n})\nexport class StatutsComponent implements OnInit, AfterViewInit {\n\n  constructor (private orientationService :OrientationService,\n    private appRout : Router,\n    private topNewsService: TopNewsService,\n    private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    \n  }\n\n  ngAfterViewInit(): void {\n    this.topNewsService.scrollTo('header', BEHAVIOR.auto)\n  }\n\n\n  SelectStatuts(statut : string) {\n    let degree = this.route.snapshot.queryParams['degree'];\n    let field = this.route.snapshot.queryParams['field'];\n    let cyti = this.route.snapshot.queryParams['cyti'];\n    let branche = this.route.snapshot.queryParams['branche'];\n    this.orientationService.saveStatut(degree, field, branche, cyti, statut)\n    switch (statut) {\n      case 'lycéen':\n        this.appRout.navigate( ['orientation/classe/'] );        \n        break;\n      case 'étudiant':\n        this.appRout.navigate( ['orientation/etudiant/'] );        \n        break;    \n      default:\n        this.appRout.navigate( ['orientation/dernierDiplome/'] ); \n        break;\n    }\n    \n  }\n\n}\n","<div class=\"cardBar\">\n    <p-progressBar [showValue]=\"false\"  [value]=\"90\"></p-progressBar>\n</div>\n<div>\n    <h2>En quelle classe êtes-vous ?</h2>\n    <div >\n        <button class=\"but\" pButton pRipple  \n                            *ngFor=\"let classe of classe \" \n                            type=\"button\" \n                            [label]=\"classe\"\n                            (click)=\"setClasse(classe)\"></button>\n    </div>\n</div>\n","<div class=\"cardBar\">\n    <p-progressBar [showValue]=\"false\" [value]=\"80\"></p-progressBar>\n</div>\n<div  class=\"statuts\">\n    <h2>Je suis :</h2>\n    <div >\n        <button class=\"but\" pButton pRipple (click)=\"SelectStatuts('lycéen')\"  type=\"button\" label=\"Lycéen / Collégien\" ></button>\n        <button class=\"but\" pButton pRipple (click)=\"SelectStatuts('étudiant')\" type=\"button\" label=\"Etudiant\" ></button>\n        <button class=\"but\" pButton pRipple (click)=\"SelectStatuts('en activité')\" type=\"button\" label=\"En activité\" ></button>\n        <button class=\"but\" pButton pRipple (click)=\"SelectStatuts('sans emploi')\" type=\"button\" label=\"Sans emploi\" ></button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { OrientationService } from '../../services/orientation.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-classe',\n  templateUrl: './classe.component.html',\n  styleUrls: ['./classe.component.scss'   ]\n})\nexport class ClasseComponent implements OnInit{\n\n  classe = ['Terminale', 'Première', 'Seconde', '3e', '4e', '5e', '6e'];\n\n  constructor (private orientationService :OrientationService,\n    private appRout : Router,\n    private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    \n  }\n\n  setClasse(classe: string) {\n    this.orientationService.saveClasse(classe);\n    this.appRout.navigate( ['orientation/contact/'] );\n  }\n\n}\n","<div class=\"cardBar\">\n    <p-progressBar [showValue]=\"false\" [value]=\"90\"></p-progressBar>\n</div>\n<div>\n    <h2>En quelle Bac+ êtes-vous aujourd'hui ?</h2>\n    <div >\n        <button class=\"but\" pButton pRipple  \n                            *ngFor=\"let niveau of niveau \" \n                            type=\"button\" \n                            [label]=\"niveau\"\n                            (click)=\"setNiveau(niveau)\"></button>\n    </div>\n</div>","import { Component } from '@angular/core';\nimport { OrientationService } from '../../services/orientation.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-etudiant',\n  templateUrl: './etudiant.component.html',\n  styleUrls: ['./etudiant.component.scss'   ]\n})\nexport class EtudiantComponent {\n\n  constructor( private orientationService: OrientationService,\n              private appRout : Router,) {}\n\n  niveau = [\n    'Bac ou équivalent',\n    'Bac+1',\n    'Bac+2',\n    'Bac+3',\n    'Bac+4',\n    'Bac+5',\n    'Bac+6 et plus'\n  ];\n\n  setNiveau(niveau: string) {\n    this.orientationService.saveClasse(niveau)\n    this.appRout.navigate( ['orientation/contact/'] );\n  }\n\n}\n","<div class=\"cardBar\">\n    <p-progressBar [showValue]=\"false\" [value]=\"90\"></p-progressBar>\n</div>\n<div class=\"statut\">\n    <h2>En quelle Bac+ êtes-vous aujourd'hui ?</h2>\n    <div >\n        <button class=\"but\" pButton pRipple  \n                            *ngFor=\"let niveau of niveau \" \n                            type=\"button\" \n                            [label]=\"niveau\"\n                            (click)=\"setNiveau(niveau)\"></button>\n    </div>\n    <p-button class=\"buti\" styleClass=\"p-button-outlined\" (click)=\"setNiveau('aucun diplome')\" label=\"Aucun diplôme\" ></p-button>\n</div>","import { Component } from '@angular/core';\nimport { OrientationService } from '../../services/orientation.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dernier-diplome',\n  templateUrl: './dernier-diplome.component.html',\n  styleUrls: ['./dernier-diplome.component.scss'   ]\n})\nexport class DernierDiplomeComponent {\n\n  constructor( private orientationService: OrientationService,\n    private appRout : Router,) {}\n\nniveau = [\n  'BEPC ou équivalent',\n  'Probatoir ou équivalent',\n'Bac ou équivalent',\n'Bac+1',\n'Bac+2',\n'Bac+3',\n'Bac+4',\n'Bac+5',\n'Bac+6 et plus'\n];\n\nsetNiveau(niveau: string) {\n  this.orientationService.saveClasse(niveau);\n  this.appRout.navigate( ['orientation/contact/'] );\n}\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { OrientationService } from '../../services/orientation.service';\nimport { Contact } from 'src/app/core/model/contact-model';\nimport { SelectItem } from 'primeng/api';\n//import { preferredCountries } from 'ngx-mat-intl-tel-input'\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.scss']\n})\nexport class ContactComponent implements OnInit {\n\n  newContact!: FormGroup  ;\n  items!: SelectItem[];\n  selectedItem!: string;\n  // separateDialCode = true;\n  // SearchCountryField = SearchCountryField;\n  // CountryISO = CountryISO;\n  // PhoneNumberFormat = PhoneNumberFormat;\n \n  // preferredCountries: CountryISO[] = [CountryISO.UnitedStates, \n  //  CountryISO.UnitedKingdom];\n\n  constructor(private formBuilder: FormBuilder,\n              private orientationService: OrientationService,\n              private appRout : Router) {\n                this.items = [];\n                for (let i = 1970; i < 2010; i++) {\n                    this.items.push({ label:''+ i, value: 'Item ' + i });\n                }\n              }\n\n  ngOnInit(): void {\n    this.newContact  = this.formBuilder.group({\n      nom : [null, [Validators.required]],\n      prenom: [null, [Validators.required]],\n      born: [null, [Validators.required]], \n      pays:  [null, [Validators.required]],\n      email:  [null, [Validators.required]],\n      phone: new FormControl(null, [Validators.required]),\n     // phone: [null, [Validators.required]]\n    })\n  }\n\n  onSubmitForm(){\n    this.orientationService.saveContact(this.newContact.value);\n    this.appRout.navigate( ['orientation/resultats/'] );\n    // console.log(this.newContact.value)\n  }\n\n}\n","<div header=\"\" class=\"main\">\n    \n    \n    <form [formGroup]=\"newContact\">\n        <div class=\"title\">Dernière étape avant de voir les resultats</div>\n        <div class=\"input-container ic1\">\n            <input id=\"nom\" class=\"input\" type=\"text\" placeholder=\" \"  formControlName=\"nom\">\n            <div class=\"cut\"></div>\n            <label for=\"nom\" class=\"placeholder\">Nom *</label>\n        </div>\n        <div class=\"input-container ic1\">\n            <input id=\"prenom\" class=\"input\" type=\"text\" placeholder=\" \"  formControlName=\"prenom\">\n            <div class=\"cut\"></div>\n            <label for=\"prenom\" class=\"placeholder\">Prénom *</label>\n        </div>\n        <div class=\"input-container ic1\">\n            <!-- \n                <input id=\"born\" class=\"input\" type=\"number\" placeholder=\" \"  formControlName=\"born\"> \n                <div class=\"cut cut-long\"></div>\n                <label for=\"born\" class=\"placeholder\">Année de naissance *</label>\n            -->\n            <p-dropdown id=\"born\" \n                        formControlName=\"born\"\n                        type=\"number\" \n                        [options]=\"items\" \n                        [(ngModel)]=\"selectedItem\" \n                        placeholder=\"Année de naissance\" \n                        [virtualScroll]=\"true\" \n                        [virtualScrollItemSize]=\"38\">\n            </p-dropdown>   \n        </div> \n        <div class=\"input-container ic1\">\n            <input id=\"pays\" class=\"input\" type=\"text\" placeholder=\" \"  formControlName=\"pays\">\n            <div class=\"cut cut-long\"></div>\n            <label for=\"pays\" class=\"placeholder\">Pays de nationnalité *</label>\n        </div>\n        <div class=\"input-container ic1\">\n            <input id=\"email\" class=\"input\" type=\"text\" placeholder=\" \"  formControlName=\"email\">\n            <div class=\"cut\"></div>\n            <label for=\"email\" class=\"placeholder\">Email*</label>\n        </div>\n        \n        <div style=\"margin-top: 12px;\" >Téléphone</div>\n        \n        <div>\n            <ngx-mat-intl-tel-input\n                id=\"phone\"\n                [preferredCountries]=\"['cm', 'td']\"\n                formControlName=\"phone\"\n                placeholder=\"Téléphone\"\n            ></ngx-mat-intl-tel-input>\n            \n            <!--\n            <input id=\"phone\" class=\"input\" type=\"text\" placeholder=\" \"  formControlName=\"phone\">\n            <div class=\"cut\"></div>\n            <label for=\"phone\" class=\"placeholderc\">Téléphone*</label>\n            -->\n        </div>\n\n        <div class=\"action-buttons\">\n            <button type=\"submit\" class=\"submit\" (click)=\"onSubmitForm()\" [disabled]=\"newContact.invalid\" >Valider et voir mes résultats</button>\n        </div>\n    </form>\n</div>","<h1>Les formations susceptibles de vous intéresser</h1>\n<app-pub-interest-item *ngFor=\"let schooli of school$ | async\" [school]=\"schooli\"></app-pub-interest-item>\n","import { Component, OnInit } from '@angular/core';\nimport { interestelt } from 'src/app/core/model/interest-item-model';\nimport { OrientationService } from '../../services/orientation.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-resultats',\n  templateUrl: './resultats.component.html',\n  styleUrls: ['./resultats.component.scss']\n})\nexport class ResultatsComponent implements OnInit{\n\n  school$!: Observable <interestelt[]>;\n\n  constructor (private orientationService : OrientationService){}\n\n  ngOnInit(): void {\n    this.school$ = this.orientationService.getSerchResult()\n  }\n\n}\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { DegreeComponent } from \"../orientation/components/degree/degree.component\";\r\nimport { FieldComponent } from \"../orientation/components/field/field.component\";\r\nimport { CityComponent } from \"./components/city/city.component\";\r\nimport { StatutsComponent } from \"./components/statuts/statuts.component\";\r\nimport { ClasseComponent } from \"./components/classe/classe.component\";\r\nimport { EtudiantComponent } from \"./components/etudiant/etudiant.component\";\r\nimport { DernierDiplomeComponent } from \"./components/dernier-diplome/dernier-diplome.component\";\r\nimport { ContactComponent } from \"./components/contact/contact.component\";\r\nimport { ResultatsComponent } from \"./components/resultats/resultats.component\";\r\n\r\nconst routes: Routes = [\r\n    { path: 'start/degree', component: DegreeComponent},\r\n    //{ path: 'degree/:degreeCyti', component: DegreeComponent},\r\n    { path: 'degree', component: DegreeComponent},\r\n    { path: 'domaines', component: FieldComponent},\r\n    { path: 'city', component: CityComponent},\r\n    { path: 'classe', component: ClasseComponent },\r\n    {path: 'etudiant', component: EtudiantComponent},\r\n    {path: 'contact', component: ContactComponent},\r\n    {path: 'resultats', component: ResultatsComponent},\r\n    {path: 'dernierDiplome', component: DernierDiplomeComponent},\r\n    //{ path: 'field', component: FieldComponent},\r\n    { path: 'start/field', component: FieldComponent},\r\n    { path: 'start/city', component: CityComponent},\r\n    { path: 'statuts', component: StatutsComponent},\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class OrientationRoutingModule {}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StartComponent } from './components/start/start.component';\nimport { DegreeComponent } from './components/degree/degree.component';\nimport { FieldComponent } from './components/field/field.component';\nimport { CityComponent } from './components/city/city.component';\nimport { OrientationRoutingModule } from './orientation-routing.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { OrientationService } from './services/orientation.service';\nimport { StatutsComponent } from './components/statuts/statuts.component';\nimport { ClasseComponent } from './components/classe/classe.component';\nimport { EtudiantComponent } from './components/etudiant/etudiant.component';\nimport { DernierDiplomeComponent } from './components/dernier-diplome/dernier-diplome.component';\nimport { ContactComponent } from './components/contact/contact.component';\nimport { NgxMatIntlTelInputComponent } from 'ngx-mat-intl-tel-input';\nimport { ResultatsComponent } from './components/resultats/resultats.component';\n\n\n\n@NgModule({\n  declarations: [\n    StartComponent,\n    DegreeComponent,\n    FieldComponent,\n    CityComponent,\n    StatutsComponent,\n    ClasseComponent,\n    EtudiantComponent,\n    DernierDiplomeComponent,\n    ContactComponent,\n    ResultatsComponent\n  ],\n  imports: [\n    CommonModule,\n    OrientationRoutingModule,\n    SharedModule,\n    NgxMatIntlTelInputComponent\n  ],\n  exports :[\n    StartComponent\n  ],\n  providers:[\n    OrientationService\n  ]\n})\nexport class OrientationModule { }\n","import { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject, Observable, map, take, tap } from \"rxjs\";\r\nimport { degree } from \"src/app/core/model/degree-model\";\r\nimport { field } from \"src/app/core/model/field-model\";\r\nimport { UserProfil } from \"src/app/core/model/user-profil-model\";\r\nimport { ville } from \"src/app/core/model/ville-model\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Contact } from \"src/app/core/model/contact-model\";\r\nimport { interestelt } from \"src/app/core/model/interest-item-model\";\r\n\r\n\r\n@Injectable ()\r\nexport class OrientationService {\r\n\r\n    constructor(private http: HttpClient) { };\r\n\r\n    private _loading$ = new BehaviorSubject<boolean>(false);\r\n    get loading$(): Observable<boolean> {\r\n      return this._loading$.asObservable();\r\n    }\r\n\r\n    TheUser!: UserProfil;\r\n    initialUser = {\r\n             id:0,\r\n             city: '',\r\n             degree: '',\r\n             field: '',\r\n             branche:'',\r\n             name: '',\r\n             surname: '',\r\n             level: '',\r\n             statuts:'',\r\n             bornDate: 0,\r\n             country: '',\r\n             email:'',\r\n             tel: ''\r\n         }\r\n    initialUser$!: Observable<UserProfil>;\r\n\r\n    private setLoadingStatus(loading: boolean) {\r\n        this._loading$.next(loading)\r\n      }\r\n  \r\n\r\n    getAllCyties(): Observable<ville[]> {\r\n        this.setLoadingStatus(true)\r\n        return this.http.get<ville[]>(`${environment.apiUrl}/api/cyties`).pipe(\r\n            tap( (cyti) => this.setLoadingStatus(false))\r\n        )\r\n    };\r\n\r\n    getPartCyties(userDegree: string, userDomaine: string, userBranche: string ): Observable<ville[]> {\r\n        this.setLoadingStatus(true)\r\n        const url = `${environment.apiUrl}/api/partCyties`;\r\n        let queryParams = new HttpParams();\r\n        queryParams = queryParams.append('Degree', userDegree);\r\n        queryParams = queryParams.append('Domaine', userDomaine);\r\n        return this.http.get<ville[]>(url, {params: queryParams}).pipe(\r\n            tap( (cyti) => this.setLoadingStatus(false))\r\n        )\r\n    }\r\n\r\n    private _domaine$ = new BehaviorSubject<field[]>([]);\r\n    get domaine$(): Observable<field[]> {\r\n        return this._domaine$.asObservable();\r\n    }\r\n\r\n    /*Fonction qui demande de retourner les domaines pour un diplome en particulier pour toutes les villes\r\n     Car une foi qu'o aura le diplome et le domaine d'intérêt, on enclanche getPartCyties() pour \r\n     avoir les villes qui offrent ces formations */\r\n     // on charge tt les domaines pour lesquel il y a une categ de diplome en particulier\r\n    getDomaineFromServer(domaineDegree:string){\r\n        this.setLoadingStatus(true);\r\n        const url = `${environment.apiUrl}/api/field`;\r\n        let queryParams = new HttpParams();\r\n        queryParams = queryParams.append('DomaineDegree', domaineDegree);\r\n        this.http.get<field[]>(url, {params: queryParams}).pipe(\r\n            take(1),\r\n            tap(fields =>{\r\n                this._domaine$.next(fields),\r\n                this.setLoadingStatus(false)\r\n            })\r\n        ).subscribe();\r\n    }\r\n\r\n    getPartDomaine(domaineDegree:string, domaineCyti:string): Observable <field[]> {\r\n        this.setLoadingStatus(true);\r\n        const url = `${environment.apiUrl}/api/field`;\r\n        let queryParams = new HttpParams();\r\n        queryParams = queryParams.append('DomaineDegree', domaineDegree);\r\n        queryParams = queryParams.append('DomaineCyti', domaineCyti);\r\n        return this.http.get<field[]>(url, {params: queryParams}).pipe(\r\n            tap(dom => this.setLoadingStatus(false) )\r\n        )\r\n    }\r\n\r\n    /**Fonction qui demande au serveur de retourner les diplomes pour une ville en particulier */\r\n    getDegreeCyti(degreeCyti:string): Observable<degree[]>{\r\n        this.setLoadingStatus(true);\r\n        const url = `${environment.apiUrl}/api/degree`;\r\n        let queryParams = new HttpParams();\r\n        queryParams = queryParams.append('DegreeCyti', degreeCyti);\r\n        return this.http.get<degree[]>(url, {params: queryParams}).pipe(\r\n            tap(deg => this.setLoadingStatus(false) )\r\n        )\r\n    };\r\n\r\n    /** Fonction qui envoie demande au serveur de retourner les diplomes pour un domaine en particulier */\r\n    getDegreeField(degreeField: string): Observable<degree[]>{\r\n        this.setLoadingStatus(true);\r\n        const url = `${environment.apiUrl}/api/degree`;\r\n        let queryParams = new HttpParams();\r\n        queryParams = queryParams.append('DegreeField', degreeField);\r\n        return this.http.get<degree[]>(url, {params: queryParams}).pipe(\r\n            tap(deg => this.setLoadingStatus(false) )\r\n        )\r\n    }\r\n\r\n    //** FUNCTION USE TO SAVE degree, field, cyti and statut *****/\r\n\r\n    saveStatut(degree: string, field:string, branche:string, cyti:string, statut: string) {\r\n       this.initialUser.degree = degree;\r\n        this.initialUser.field = field;\r\n        this.initialUser.branche= branche;\r\n        this.initialUser.city = cyti;\r\n        this.initialUser.statuts = statut;\r\n         \r\n    }\r\n\r\n    saveClasse(classe: string) {\r\n         this.initialUser.level = classe;\r\n    }\r\n\r\n    saveContact(contact: Contact) {\r\n        this.initialUser.name = contact.nom;\r\n        this.initialUser.surname = contact.prenom;\r\n        this.initialUser.bornDate = contact.born;\r\n        this.initialUser.email = contact.email;\r\n        this.initialUser.tel = contact.phone;\r\n        this.initialUser.country = contact.pays;\r\n        \r\n        this.saveClient(this.initialUser).subscribe();\r\n        console.log(this.initialUser);\r\n    }\r\n\r\n    saveClient (UserInfo : UserProfil ): Observable<UserProfil> {\r\n       return this.http.post<UserProfil>(`${environment.apiUrl}/api/result`, UserInfo)\r\n    };\r\n\r\n    getSerchResult(): Observable<interestelt[]> {\r\n        const url = `${environment.apiUrl}/api/result`;\r\n        let queryParams = {\"city\":this.initialUser.city,\r\n                            \"diplome\":this.initialUser.degree, \r\n                            \"domaine\":this.initialUser.field,\r\n                            \"branche\":this.initialUser.branche};\r\n\r\n        return this.http.get<interestelt[]>(url, {params: queryParams})\r\n    }\r\n\r\n    initUser() {\r\n        this.initialUser =  {\r\n            id:0,\r\n            city: '',\r\n            degree: '',\r\n            field: '',\r\n            branche:'',\r\n            name: '',\r\n            surname: '',\r\n            level: '',\r\n            statuts:'',\r\n            bornDate: 0,\r\n            country: '',\r\n            email:'',\r\n            tel: ''\r\n        }\r\n    }\r\n}","import { Inject, Injectable, PLATFORM_ID } from \"@angular/core\";\r\nimport { isPlatformBrowser } from '@angular/common';\r\n\r\n //const TOKEN_KEY = 'auth_token';\r\n// const USER_KEY = 'auth_user';\r\nconst TOKEN_KEY = 'x-access-token';\r\nconst USER_KEY = 'auth_user';\r\n\r\n@Injectable ({\r\n    providedIn : 'root'\r\n})\r\nexport class tokenStorageService {\r\n    constructor (@Inject(PLATFORM_ID) private platformId: any) {}\r\n\r\n    signOut(): void {\r\n        window.sessionStorage.clear();\r\n    }\r\n\r\n    public saveToken (token:string): void {\r\n        console.log('dans la fct saveTokent ' + token)\r\n        window.sessionStorage.removeItem(TOKEN_KEY)\r\n        window.sessionStorage.setItem(TOKEN_KEY, token )\r\n    }\r\n\r\n    public getToken(): string | null {\r\n        // var tiof = sessionStorage.getItem(TOKEN_KEY);\r\n        // console.log(tiof)\r\n        let elt!: string|null;\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            elt = window.sessionStorage.getItem(TOKEN_KEY);\r\n          }\r\n        return elt\r\n    }\r\n\r\n    public saveUser(user: string): void {\r\n        window.sessionStorage.removeItem(USER_KEY);\r\n        window.sessionStorage.setItem(USER_KEY, JSON.stringify(user))\r\n    } \r\n\r\n    public getUser (): any {\r\n        return JSON.parse(sessionStorage.getItem(USER_KEY) || '{}');\r\n    }\r\n\r\n    public blade(data:string){\r\n        console.log(data);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { TopNews } from '../core/model/top-news-model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { BEHAVIOR } from '../core/model/Behavior';\r\nimport { counter } from '../core/model/counter-model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n\r\nexport class TopNewsService {\r\n\r\n\r\n    constructor (private http: HttpClient){};\r\n\r\n  getAllTopNews(): Observable<TopNews[]> {\r\n    //return this.topnewss;\r\n    return this.http.get<TopNews[]>(`${environment.apiUrl}/api/topNewsSlide`); \r\n  }\r\n\r\n  scrollTo(element: string, behavior: BEHAVIOR): void {\r\n    if (typeof document !== 'undefined') {\r\n      let elementer = document.getElementById(element);\r\n      \r\n      (elementer as HTMLElement).scrollIntoView({behavior: behavior, block:\"start\", inline:\"nearest\"})\r\n      // Manipulating the DOM here\r\n   }\r\n  }\r\n\r\n  countFormation(): Observable<counter[]> {\r\n    return this.http.get<counter[]>(`${environment.apiUrl}/api/countFomration`); \r\n  }\r\n}","<div class=\"card \">\n    <p-card [header]=\"school.nom_dip\" \n            [subheader]=\"school.nom_e\" \n            class=\"training-card\"  \n            (click)=\"showDialog()\" \n            [style]=\"{'cursor':'pointer'}\">\n        <div class=\"grid-container\" >\n            <div class=\"grid-content\">\n                <img alt=\"Card\" [src]=\"school.logo_e\" />\n                \n            </div>\n            <div class=\"grid-content\">\n                <p-tag class=\"fas\" [style]=\"{'background':'#f4f6fc', 'color':'#344cbe'}\" [value]=\"school.groupe\" icon=\"pi pi-user\"></p-tag>\n                <p-tag [style]=\"{'background':'#f4f6fc', 'color':'#344cbe'}\" *ngIf=\"school.ville_cam\"  [value]=\"school.ville_cam\" icon=\"pi-map-marker\"></p-tag>\n                <p-tag [style]=\"{'margin-top': '7px','background':'#f4f6fc', 'color':'#344cbe'}\" *ngIf=\"school.date_debut_f\"  [value]=\"school.date_debut_f\" icon=\"pi-dollar\"></p-tag>\n                <p-tag [style]=\"{'margin-top': '7px','background':'#f4f6fc', 'color':'#344cbe'}\" *ngIf=\"school.cout_f\"  [value]=\"school.cout_f\" icon=\"pi-dollar\"></p-tag>\n            </div>\n        </div>\n\n        <ng-template pTemplate=\"footer\">\n            <p-button label=\"Demander des informations\"></p-button>\n        </ng-template>\n    </p-card>\n    <p-dialog   header=\"Détail de la formation\" \n                [(visible)]=\"visible\" \n                [style]=\"{width: '90vw'}\"\n                [modal]=\"true\"  \n                [draggable]=\"false\" \n                [resizable]=\"false\">\n                <p-card [header]=\"school.nom_dip\" [subheader]=\"school.nom_e\" class=\"training-card medium\" >\n                    <div class=\"grid-container\" >\n                        <div class=\"grid-content\">\n                            <img alt=\"Card\" [src]=\"school.logo_e\" />\n                        </div>\n                        <div class=\"grid-content\">\n                            <p-tag class=\"fas\" [style]=\"{'background':'#f4f6fc', 'color':'#344cbe'}\" [value]=\"school.groupe\" icon=\"pi pi-user\"></p-tag>\n                            <p-tag [style]=\"{'background':'#f4f6fc', 'color':'#344cbe'}\" *ngIf=\"school.ville_cam\"  [value]=\"school.ville_cam\" icon=\"pi-map-marker\"></p-tag>\n                            <p-tag [style]=\"{'margin-top': '7px','background':'#f4f6fc', 'color':'#344cbe'}\" *ngIf=\"school.date_debut_f\"  [value]=\"school.date_debut_f\" icon=\"pi-dollar\"></p-tag>\n                            <p-tag [style]=\"{'margin-top': '7px','background':'#f4f6fc', 'color':'#344cbe'}\" *ngIf=\"school.cout_f\"  [value]=\"school.cout_f\" icon=\"pi-dollar\"></p-tag>\n                            <p-tag [style]=\"{'margin-top': '7px','background':'#f4f6fc', 'color':'#344cbe'}\"  value=\"Reconnue par l'Etat\" icon=\"pi-dollar\"></p-tag>\n                        </div>\n                    </div>\n                </p-card>\n                <div class=\"training-card-show\">\n                    <div class=\"more-info\">\n                        <div class=\"accreditation\">\n                            <h5>Accréditation</h5>                            \n                        </div>\n                        <ng-container *ngIf=\"school.descriptif_dip\">\n                            <h5>Description du diplôme :</h5>\n                            <br>\n                            <span [innerHTML]=\"school.descriptif_dip\"></span>\n                            <hr>\n                            <span [innerHTML]=\"school.descriptif_f\"></span>\n                        </ng-container>\n                        <ng-container *ngIf=\"school.descriptif_e\">\n                            <h5>Description</h5>\n                            <br>\n                            <span [innerHTML]=\"school.descriptif_e\"></span>\n                            <hr>\n                            <span [innerHTML]=\"school.descriptif_f\"></span>\n                        </ng-container>\n                    </div>\n                    <div class=\"footer\">\n                        <p-button label=\"Voir l'établissement\" (click)=\"showOnePage(school.nom_e)\"  styleClass=\"p-button-help\"></p-button>\n                        <p-button label=\"Demander des informaions\" (click)=\"sendNumber()\"  styleClass=\"p-button-warning\" ></p-button>\n                    </div>\n                </div>\n    </p-dialog>\n    <p-dialog   header=\"Vous souhaitez vous informer sans engagement sur la formation :\" \n                [(visible)]=\"visibleCall\" \n                [style]=\"{width: '90vw'}\" \n                [modal]=\"true\"  \n                [draggable]=\"false\" \n                [resizable]=\"false\">\n                <p-card [header]=\"school.nom_dip\" [subheader]=\"school.nom_e\" class=\"training-card medium\" >\n                    <div class=\"grid-container\" >\n                        <div class=\"grid-content\">\n                            <img alt=\"Card\" [src]=\"school.logo_e\" />\n                        </div>\n                    </div>\n                </p-card>\n                <form #telForm=\"ngForm\" (ngSubmit)=\"onSubmitPhone(telForm)\">\n                    <!-- <label for=\"telInput\">Faites-vous rappeler par l'école !*</label>\n                    <input type=\"tel\" id=\"telInput\" name=\"userPhone\" [(ngModel)]=\"userPhone\"> -->\n                    <h2>Faites-vous rappeler par l'école !*</h2>\n                    <mat-form-field appearance=\"outline\">\n                        <ngx-mat-intl-tel-input\n                            id=\"telInput\" name=\"userPhone\" [(ngModel)]=\"userPhone\"\n                            [preferredCountries]=\"['cm', 'td']\"\n                            placeholder=\"Téléphone\"\n                        ></ngx-mat-intl-tel-input>\n                        <mat-label>Numéro Whatsapp si possible</mat-label>\n                        <!--\n                        <input id=\"phone\" class=\"input\" type=\"text\" placeholder=\" \"  formControlName=\"phone\">\n                        <div class=\"cut\"></div>\n                        <label for=\"phone\" class=\"placeholderc\">Téléphone*</label>\n                        -->\n                    </mat-form-field>\n                    <p-button styleClass=\"p-button-help\" type=\"submit\">OK!</p-button>\n                </form>\n\n    </p-dialog>\n\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { interestelt } from 'src/app/core/model/interest-item-model';\nimport { EtablissementModule } from 'src/app/etablissement/etablissement.module';\n\n@Component({\n  selector: 'app-pub-interest-item',\n  templateUrl: './pub-interest-item.component.html',\n  styleUrls: ['./pub-interest-item.component.scss']\n})\nexport class PubInterestItemComponent implements OnInit{\n\n  @Input() school!: interestelt;\n  visible!: boolean;\n  visibleCall!: boolean;\n  userPhone!: string;\n\n\n  constructor( private  appRout : Router ){}\n \n  ngOnInit(): void {\n\n  }\n\n  showDialog() {\n    this.visible = true;\n  }\n\n  showOnePage(school: string){\n    //const url = this.appRout.serializeUrl(this.appRout.createUrlTree(['etablissement/'], { queryParams: {school:school} }));\n    //window.open(url, '_blank');\n    this.appRout.navigate(['etablissement/'], { queryParams: {school:school} } );\n  }\n\n  sendNumber(){\n    this.visible = false;\n    this.visibleCall = true;\n  }\n\n  onSubmitPhone(form : NgForm){\n    console.log(form.value)\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-under-building',\n  templateUrl: './under-building.component.html',\n  styleUrls: ['./under-building.component.scss']\n})\nexport class UnderBuildingComponent {\n\n}\n","<div class=\"card flex justify-content-center\">\n    <header><span class=\"blaki\">Page Web</span> <span class=\"rougi\">en construction</span>  </header>\n    <p>Retrouvez très bientôt les informations rélatives à cette page </p>\n    <p-image src=\"./../../../../assets/images/building.webp\" alt=\"Image\" width=\"100%\"></p-image>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatLegacyCardModule as MatCardModule } from '@angular/material/legacy-card';\r\nimport { MatLegacyListModule as MatListModule } from '@angular/material/legacy-list';\r\nimport { MatLegacyButtonModule as MatButtonModule } from '@angular/material/legacy-button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatLegacyFormFieldModule as MatFormFieldModule } from '@angular/material/legacy-form-field';\r\nimport { MatLegacyInputModule as MatInputModule } from '@angular/material/legacy-input';\r\nimport { MatLegacyMenuModule as MatMenuModule } from '@angular/material/legacy-menu';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatLegacyProgressSpinnerModule as MatProgressSpinnerModule} from '@angular/material/legacy-progress-spinner'\r\n\r\n\r\n@NgModule({\r\n  exports: [\r\n    MatToolbarModule,\r\n    MatCardModule,\r\n    MatListModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatMenuModule,\r\n    MatSidenavModule,\r\n    MatProgressSpinnerModule\r\n  ]\r\n})\r\nexport class MaterialModule {}","import { NgModule } from '@angular/core';\r\nimport {CarouselModule} from 'primeng/carousel';\r\nimport { DataViewModule } from 'primeng/dataview';\r\nimport {ButtonModule} from 'primeng/button';\r\nimport {AccordionModule} from 'primeng/accordion';\r\nimport {TableModule} from 'primeng/table';\r\nimport {EditorModule} from 'primeng/editor';\r\nimport {DropdownModule} from 'primeng/dropdown';\r\nimport {RadioButtonModule} from 'primeng/radiobutton';\r\nimport { CardModule } from 'primeng/card';\r\nimport { TagModule } from 'primeng/tag';\r\nimport { TabViewModule } from 'primeng/tabview';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { ImageModule } from 'primeng/image';\r\nimport { FieldsetModule} from 'primeng/fieldset';\r\nimport { DividerModule } from 'primeng/divider';\r\nimport { ProgressBarModule } from 'primeng/progressbar';\r\nimport { OrganizationChartModule } from 'primeng/organizationchart';\r\nimport { OverlayModule } from 'primeng/overlay';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\n\r\n\r\n\r\n@NgModule({\r\n    exports: [\r\n      CarouselModule,\r\n      DataViewModule,\r\n      ButtonModule,\r\n      AccordionModule,\r\n      TableModule,\r\n      EditorModule,\r\n      DropdownModule,\r\n      RadioButtonModule,\r\n      CardModule,\r\n      TagModule,\r\n      TabViewModule,\r\n      DialogModule,\r\n      ImageModule,\r\n      FieldsetModule,\r\n      DividerModule,\r\n      ProgressBarModule,\r\n      OrganizationChartModule,\r\n      OverlayModule,\r\n      InputTextModule\r\n    ]\r\n  })\r\n\r\nexport class PrimengModule {}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from './material.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { PrimengModule } from './primeng.modules';\nimport { MyFilterPipe } from './pipes/myfilter.pipe';\nimport { DomFilterPipe } from './pipes/domFilter.pipe';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport { HeadmsgComponent } from './components/headmsg/headmsg.component';\nimport { PubFirstComponent } from './components/pub-first/pub-first.component';\nimport { PubInterestComponent } from './components/pub-interest/pub-interest.component';\nimport { InfoRedactionComponent } from './components/info-redaction/info-redaction.component';\nimport { InterestListComponent } from './components/interest-list/interest-list.component';\nimport { InterestActualiteComponent } from './components/interest-actualite/interest-actualite.component';\nimport { InterestAvisComponent } from './components/interest-avis/interest-avis.component';\nimport { InterestClassificationComponent } from './components/interest-classification/interest-classification.component';\nimport { PubInterestItemComponent } from './components/pub-interest-item/pub-interest-item.component';\nimport { SideInfoComponent } from './components/side-info/side-info.component';\nimport { NgxMatIntlTelInputComponent } from 'ngx-mat-intl-tel-input';\nimport { UnderBuildingComponent } from './components/under-building/under-building.component';\n\n\n\n\n@NgModule({\n  declarations: [\n    MyFilterPipe,\n    DomFilterPipe,\n    HeadmsgComponent,\n    PubFirstComponent,\n    PubInterestComponent,\n    InfoRedactionComponent,\n    InterestListComponent,\n    InterestActualiteComponent,\n    InterestAvisComponent,\n    InterestClassificationComponent,\n    PubInterestItemComponent,\n    SideInfoComponent,\n    UnderBuildingComponent\n  ],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    PrimengModule,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    FormsModule,\n    NgxMatIntlTelInputComponent\n  ],\n  exports: [\n    MaterialModule,\n    FlexLayoutModule,\n    PrimengModule,\n    MyFilterPipe,\n    DomFilterPipe,\n    ReactiveFormsModule,\n    FormsModule,\n    HeadmsgComponent,\n    PubFirstComponent,\n    PubInterestComponent,\n    PubInterestItemComponent,\n    InfoRedactionComponent,\n    InterestListComponent,\n    InterestActualiteComponent,\n    InterestAvisComponent,\n    InterestClassificationComponent,\n    SideInfoComponent,\n    UnderBuildingComponent\n  ],\n})\nexport class SharedModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:3000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\nconst AUTH_API = `${environment.apiUrl}/api/auth/`;\r\n\r\nconst httpOptions = {\r\n    headers : new HttpHeaders({'Content-Type' : 'application/json'})\r\n};\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n    constructor(private http: HttpClient) {}\r\n\r\n    login (credentials: { username: string; password: string; }): Observable<any>{\r\n        return this.http.post(AUTH_API + 'signin', {\r\n            username : credentials.username,\r\n            password: credentials.password\r\n        }, httpOptions)\r\n    }\r\n\r\n    register(user: { username: string; email: string; password: string; }):  Observable<any> {\r\n        return this.http.post(AUTH_API + 'signup', {\r\n            username: user.username,\r\n            email: user.email,\r\n            password: user.password\r\n        }, httpOptions)\r\n    }\r\n\r\n\r\n //  private token ='MyFakeToken';\r\n\r\n //  getToken(): string{\r\n //      return this.token;\r\n //  }\r\n}","<!--\n<div class=\"form-card\">\n    <h2>Connexion</h2>\n    <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input type=\"email\" name=\"\" id=\"email\">\n    </div>\n    <div class=\"foorm-group\">\n        <label for=\"password\">Mot de passe</label>\n        <input type=\"password\" name=\"\" id=\"password\">\n    </div>\n    <div class=\"action-buttons\">\n        <button (click)=\"onLogin()\">Login</button>\n    </div>\n</div>\n-->\n<div class=\"col-m2-12\">\n    <div class=\"card card-container\">\n        <img src=\"\" alt=\"\">\n        <form \n            action=\"\"\n            *ngIf=\"!isLoggedIn\"\n            name=\"form\"\n            (ngSubmit)=\"f.form.valid && onSubmit()\"\n            #f = \"ngForm\"\n            novalidate\n            >\n            <div class=\"form-group\">\n                <label for=\"username\">Username</label>\n                <input \n                    type=\"text\"\n                    class=\"form-control\"\n                    name=\"username\"\n                    [(ngModel)]=\"form.username\"\n                    required\n                    #username=\"ngModel\"\n                />\n                <div class=\"alert alert-danger\" *ngIf=\"f.submitted && username.invalid\">\n                    Username is required\n                </div>\n            </div>\n            \n            <div class=\"form-group\">\n                <label for=\"password\">Password </label>\n                <input \n                    type=\"password\" \n                    name=\"password\" id=\"\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"form.password\"\n                    required\n                    minlength=\"3\"\n                    #password=\"ngModel\"\n                />\n                <div class=\"alert-danger\" \n                    role=\"alert\"\n                    *ngIf=\"f.submitted && password.invalid\"\n                    >\n                    <div *ngIf=\"password.errors?.['required']\">Password is required</div>\n                    <div *ngIf=\"password.errors?.['minlength']\">Password must be at least 3 caracter</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <button class=\"btn btn-primary btn-block\">Login</button>\n            </div>\n\n            <div class=\"form-group\">\n                <div class=\"alert alert-danger\" \n                    role=\"alert\"\n                    *ngIf=\"f.submitted && isLoginFailed\">\n                    Login failed <br/> {{errorMessage}}\n                </div>\n            </div>\n        </form>\n\n        <div class=\"alert alert-success\" *ngIf=\"isLoggedIn\">\n            Logged in as {{roles}}\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { tokenStorageService } from 'src/app/services/token-storage.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit{\n\n  form: any={};\n  isLoggedIn = false;\n  isLoginFailed = false;\n  errorMessage = '';\n  roles: string[]= [];\n\n  constructor(private auth: AuthService,\n              //private authen : AuthenService, \n             // private router: Router,\n              private tokenStorage: tokenStorageService) { }\n\n  ngOnInit(): void {\n    if (this.tokenStorage.getToken()) {\n      this.isLoggedIn = true;\n      this.roles = this.tokenStorage.getUser().roles;\n    }\n  }\n\n  onSubmit(): void{\n    this.auth.login(this.form).subscribe(\n      data => {\n        console.log('le token est '+ data.accessToken);\n        this.tokenStorage.saveToken(data.accessToken);\n        //this.tokenStorage.blade('JALIL_TOKEN');\n        this.tokenStorage.saveUser(data);\n\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.roles = this.tokenStorage.getUser().roles;\n        this.reloadPage();\n      },\n      err => {\n        this.errorMessage = err.error.message;\n        this.isLoginFailed = true;\n      }\n    );\n  }\n\n  reloadPage(): void {\n    window.location.reload();\n  }\n\n // onLogin() {\n // //this.authen.login();\n // //this.router.navigateByUrl('admin/adminStart');\n // }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-header-hero',\n  templateUrl: './header-hero.component.html',\n  styleUrls: ['./header-hero.component.scss']\n})\nexport class HeaderHeroComponent {\n\n}\n","<div class=\"header-hero\">\n    <img src=\"../../../../assets/images/home.webp\" alt=\"\">    \n    <div class=\"content\">\n        <div class=\"title\">Comme Hassan, rentabilise ton avenir avec une bonne orientation.</div>\n        <div class=\"subtitle\">... Le chômage est très souvent le résultat d'une mauvaise orientation.</div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-top-video-slide',\n  templateUrl: './top-video-slide.component.html',\n  styleUrls: ['./top-video-slide.component.scss']\n})\nexport class TopVideoSlideComponent implements OnInit{\n\n  constructor (private appRout: Router) {}\n  ngOnInit(): void {\n    \n  }\n  showOnePage(school: string){\n    //const url = this.appRout.serializeUrl(this.appRout.createUrlTree(['etablissement/'], { queryParams: {school:school} }));\n   // window.open(url, '_blank');\n   this.appRout.navigate(['etablissement/'], { queryParams: {school:school} } );\n  }\n}\n","<div class=\"container\">\n    <div class=\"h2\">\n       Explorez les plus beaux campus du Cameroun   \n    </div>\n    <ul >\n        <li class=\"item1\">\n            <div class=\"ilustra\" (click)=\"showOnePage('SEAS')\">\n                <img src=\"./../../../../assets/images/school/UCAC-ICY-Slider-013.webp\">\n                <div class=\"logo\">\n                    <img src=\"./../../../../assets/images/school/logo/ucac.webp\" style=\"background-color: #393838d1;\">\n                </div>\n            </div>\n            <div class=\"ets\">\n                <h3>Yaoundé</h3>\n                <h4>UCAC</h4>\n            </div>\n        </li>\n        <li class=\"item2\">\n            <div class=\"ilustra\" (click)=\"showOnePage('SEAS')\">\n                <img src=\"./../../../../assets/images/school/SEAS.webp\">\n                <div class=\"logo\">\n                    <img src=\"./../../../../assets/images/school/logo/seas.webp\" style=\"background-color: #e9e9e9c7;\">\n                </div>\n            </div>\n            <div class=\"ets\">\n                <h3>Douala</h3>\n                <h4>SEAS</h4>\n            </div>\n        </li>\n        <li class=\"item3\">\n            <div class=\"ilustra\" (click)=\"showOnePage('SEAS')\">\n                <img src=\"./../../../../assets/images/school/ISSTY_01.webp\">\n                <div class=\"logo\">\n                    <img src=\"./../../../../assets/images/school/logo/issty.webp\" style=\"background-color: #e9e9e9c7;\">\n                </div>\n            </div>\n            <div class=\"ets\">\n                <h3>Yaoundé</h3>\n                <h4>ISSTY</h4>\n            </div>\n        </li>\n        <li class=\"item4\">\n            <div class=\"ilustra\" (click)=\"showOnePage('SEAS')\">\n                <img src=\"./../../../../assets/images/school/EGEM.webp\" >\n                <div class=\"logo\">\n                    <img src=\"./../../../../assets/images/school/logo/egem.webp\" style=\"background-color: #e9e9e9c7;\">\n                </div>\n            </div>\n            <div class=\"ets\">\n                <h3>Meiganga</h3>\n                <h4>EGEM</h4>\n            </div>\n        </li>\n    </ul>\n</div>","<div *ngIf=\"myTopNews$ | async as data\">\n    <p-carousel [value]=\"data\" [numVisible]=\"3\" [numScroll]=\"3\" [circular]=\"true\" [autoplayInterval]=\"5000\" [responsiveOptions]=\"responsiveOptions\">\n        <ng-template pTemplate=\"header\" >\n            <h2 class=\"actualite\">Actualités de l'enseignement supérieur</h2>\n        </ng-template>\n        <ng-template let-topNews pTemplate=\"item\">\n            <a [href]=\"topNews.news_link\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <div class=\"product-item\">\n                    <div class=\"product-item-content\">\n                        <div class=\"p-mb-3\">\n                        </div>\n                        <div>\n                            <h4 class=\"p-mb-1\">{{topNews.title}}</h4>\n                            <h6 class=\"p-mt-0 p-mb-3\">{{topNews.description}}</h6>\n                            <img mat-card-xl-image [src]=\"topNews.imageUrl\" [alt]=\"topNews.title\" class=\"product-image\">\n                        </div>\n                    </div>\n                </div>\n            </a>\n        </ng-template>\n    </p-carousel>\n</div>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { TopNews } from 'src/app/core/model/top-news-model';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { TopNewsService } from 'src/app/services/top-news.service';\nimport { Observable } from 'rxjs';\n\n\n@Component({\n  selector: 'app-top-news-slide',\n  templateUrl: './top-news-slide.component.html',\n  styleUrls: ['./top-news-slide.component.scss']\n})\nexport class TopNewsSlideComponent {\n\n  myTopNews$!: Observable<TopNews[]>;\n\n  \n  responsiveOptions;\n\n  constructor( private TopNewsService : TopNewsService ){\n    this.responsiveOptions = [\n      {\n          breakpoint: '1024px',\n          numVisible: 3,\n          numScroll: 3\n      },\n      {\n          breakpoint: '768px',\n          numVisible: 2,\n          numScroll: 2\n      },\n      {\n          breakpoint: '560px',\n          numVisible: 1,\n          numScroll: 1\n      }\n    ];\n  }\n\n  ngOnInit() {\n    this.myTopNews$ = this.TopNewsService.getAllTopNews();\n  }\n}\n","import { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Diplome } from \"../admin/models/diplome.model\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\n\r\nexport class SomeDegreeService {\r\n\r\n    constructor (private http: HttpClient){};\r\n\r\n    getSomeDegree(degree : string): Observable<Diplome[]> {\r\n        //return this.topnewss;\r\n        const url = `${environment.apiUrl}/api/someDegree`;\r\n        let queryParams = new HttpParams();\r\n        queryParams = queryParams.append('Degree', degree);\r\n        return this.http.get<Diplome[]>(url, {params: queryParams});\r\n    }\r\n}","<div class=\"orientTitle\">\n    <h2>\n        Les Formations les plus recherchées\n    </h2>\n    <p-accordion [activeIndex]=\"0\">\n        <p-accordionTab  header=\"Quelques BTS\">\n            <div class=\"bts\" *ngIf=\"someBts$ | async as myBts\">\n                <p-dataView [value]=\"myBts\" layout=\"grid\" \n                [paginator]=\"false\"\n                [rows]=\"10\"\n                filterBy=\"name\"\n                >          \n                    <ng-template let-bts pTemplate=\"gridItem\" \n                                fxLayout.xs=\"column\" \n                                >\n                        <div class=\"product-grid-item card\" \n                            (click)=\"showThisDegree(bts.nom_dip)\"\n                            style=\"cursor: pointer;\">\n                            {{bts.nom_dip}}\n                        </div>\n                    </ng-template>\n                </p-dataView>      \n                <p-button>Voir plus de BTS</p-button>\n            </div>\n        </p-accordionTab>\n        <p-accordionTab  header=\"Quelques Licences\">\n            <div class=\"licence\" *ngIf=\"someLicence$ | async as items\">\n                <p-dataView [value]=\"items\" layout=\"grid\" \n                [paginator]=\"false\"\n                [rows]=\"10\"\n                filterBy=\"name\"\n                >          \n                    <ng-template let-item pTemplate=\"gridItem\" \n                                fxLayout.xs=\"column\" \n                                >\n                        <div class=\"product-grid-item card\" \n                            (click)=\"showThisDegree(item.nom_dip)\"\n                            style=\"cursor: pointer;\">\n                            {{item.nom_dip}}\n                        </div>\n                    </ng-template>\n                </p-dataView>      \n                <p-button>Voir plus de BTS</p-button>\n            </div>\n        </p-accordionTab>\n        <p-accordionTab  header=\"Quel Master\">\n\n        </p-accordionTab>\n        <p-accordionTab  header=\"Les domainnes de formations\">\n\n        </p-accordionTab>\n        <p-accordionTab  header=\"Les types d'établissement d'enseignement supérieur\">\n\n        </p-accordionTab>\n        <p-accordionTab  header=\"Nos fiches métiers\">\n\n        </p-accordionTab>\n\n    </p-accordion>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Diplome } from 'src/app/admin/models/diplome.model';\nimport { TopNews } from 'src/app/core/model/top-news-model';\nimport { SomeDegreeService } from 'src/app/services/some-degree.service';\n\n@Component({\n  selector: 'app-catalog-panel',\n  templateUrl: './catalog-panel.component.html',\n  styleUrls: ['./catalog-panel.component.scss']\n})\nexport class CatalogPanelComponent {\n\n  myBtss!: TopNews[];\n  someBts$!: Observable<Diplome[]>;\n  someLicence$!: Observable<Diplome[]>;\n  responsiveOptions;\n\n  constructor(private someDegree : SomeDegreeService,\n              private  appRout : Router){\n    this.responsiveOptions = [\n      {\n          breakpoint: '1024px',\n          numVisible: 3,\n          numScroll: 3\n      },\n      {\n          breakpoint: '768px',\n          numVisible: 2,\n          numScroll: 2\n      },\n      {\n          breakpoint: '560px',\n          numVisible: 1,\n          numScroll: 1\n      },\n      \n    ];\n  }\n\n\n  ngOnInit() {\n    this.someBts$ = this.someDegree.getSomeDegree('BTS')\n    this.someLicence$ = this.someDegree.getSomeDegree('Licence')\n  }\n\n  showThisDegree (degree : string){\n    //const url = this.appRout.serializeUrl(this.appRout.createUrlTree(['diplome/'], { queryParams: {degree:degree} }));\n    //window.open(url, '_blank');\n    this.appRout.navigate(['diplome/'], { queryParams: {degree:degree} } );\n  }\n\n}\n","import { Component, ElementRef, OnInit } from '@angular/core';\nimport { Observable, map } from 'rxjs';\nimport { counter } from 'src/app/core/model/counter-model';\nimport { TopNewsService } from 'src/app/services/top-news.service';\nimport { Meta } from '@angular/platform-browser';\nimport { Title } from '@angular/platform-browser';\n\n\n\n@Component({\n  selector: 'app-landing-page',\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.scss']\n})\nexport class LandingPageComponent implements OnInit {\n\n  count!: number;\n // counter = document.querySelector('.counter');\n  counti = 0 ;\n  speed = 200; // The lower the slower\n\n  constructor( private service:TopNewsService,\n              private el: ElementRef,\n              private titleService:Title,\n              private meta: Meta){this.titleService.setTitle(\"Formations Professionnelles au Cameroun | Camerdiplome\");\n                                  this.meta.addTags([ \n                                    { name: 'description', content: 'Trouvez le diplôme et l\\'école de formation qui vous correspondent le mieux.' }, \n                                    { name: 'keywords', content: 'formation, professionnelle, ecoles, Cameroun, bts, licence, master' } \n                                  ]);\n                                }\n\n  ngOnInit(): void {\n    \n    this.service.countFormation().pipe(\n      map(data => {\n        this.count = data[0].cont;\n        //this.updateCount(this.count, this.counti, this.speed)\n        const updateCounto = () =>{\n          const target = +this.count;\n          const counta = +this.counti \n          const inc = target / this.speed;\n          if (counta < target) {\n            // Add inc to count and output in counter\n            //console.log(counta +' Je SUIS '+ target)\n            this.counti = ~~ (counta + inc);\n            // Call function every ms\n            setTimeout(updateCounto, 1);\n          } else {\n            this.counti = target;\n          }\n        }\n        updateCounto()\n      })        \n    ).subscribe();\n\n    //setTimeout(this.updateCount, 3000);\n\n    \n    \n  }\n  \n  \n\n  \n}\n\n","<div fxLayout=\"column\" class=\"landing\">\n    <h1 class=\"title\">Trouve la formation qui te correspond sur plus de <span [innerHTML]=\"counti\" class=\"bruce\"></span> disponibles</h1>\n    <app-header-hero></app-header-hero>\n    <app-start ></app-start>\n    <app-top-video-slide class=\"top-video\">\n    </app-top-video-slide>  \n\n    <div class=\"steps\" fxFlex fxLayout=\"column\">\n        <div class=\"orientTitle\">\n            <h2>L'orientation pas à pas avec CamerDiplome</h2>\n        </div>\n        <div class=\"box\" fxFlex fxLayoutGap=\"10px\" >\n            <div class=\"inbox\">\n                <div class=\"inboxImage first\">\n                    <img src=\"./../../../../assets/images/mini/pexels-mikhail-nilov.webp\" alt=\"\">\n                </div>\n                <div class=\"inboxText\">\n                    <h3>1</h3>\n                    <h5>Projet</h5>\n                    <h4>Définissez votre parcours et votre projet d'orientation</h4>\n                </div>\n            </div>\n            <div class=\"inbox\">\n                <div class=\"inboxImage\">\n                    <img src=\"./../../../../assets/images/mini/pexels-linkedin-sales-navigator-1.webp\" alt=\"\">\n                </div>\n                <div class=\"inboxText\">\n                    <h3>2</h3>\n                    <h5>Analyse</h5>\n                    <h4>Recherche les meilleurs pormations parmis les 7 000 disponibles</h4>\n                </div>\n            </div>\n            <div class=\"inbox\">\n                <div class=\"inboxImage\">\n                    <img src=\"./../../../../assets/images/mini/pexels-charlotte-may.webp\" alt=\"\">\n                </div>\n                <div class=\"inboxText\">\n                    <h3>3</h3>\n                    <h5>Conseil</h5>\n                    <h4>Bénéficiez de l'appel gratuit d'un conseiller d'orientation CamerDiplome</h4>\n                </div>\n            </div>\n\n        </div>\n        <app-start ></app-start>\n    </div>\n\n    <app-top-news-slide  class=\"top-news-slide\">\n    </app-top-news-slide>\n    <div class=\"actualite-btn\">\n        <button mat-raised-button color=\"accent\" >Voir toutes les actualités</button>\n    </div>\n\n    <div class=\"banner-stat orientTitle\">\n        <h2>Camerdiplome : <br> le 1er salon d'orientation virtuel du Cameroun</h2>\n        <div class=\"statContent\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutGap=\"15px\">\n            <div fxFlex=\"50\">\n                <img src=\"./../../../../assets/images/mini/pexels-karl-rayson.webp\" alt=\"\" style=\"float: left;\">\n            </div>\n            <div fxFlexAlign=\"center\">\n                <ul>\n                    <li fxLayout=\"row\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 256 256\" class=\"i i-student\" aria-hidden=\"true\"><path fill=\"#30017E\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" d=\"M32 64v80m22.232 72a88.022 88.022 0 0 1 147.536-.001M224 64l-96 32-96-32 96-32 96 32zm-54.663 18.22a56 56 0 1 1-82.674 0\"></path></svg>\n                        <span>40 % des bacheliers s'orientent avec Camerdiplome chaque année</span>\n                    </li>\n                    <li fxLayout=\"row\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 256 256\" class=\"i i-phone\" aria-hidden=\"true\"><path d=\"M92.476 124.815a84.348 84.348 0 0 0 39.054 38.876 7.928 7.928 0 0 0 7.828-.592l25.036-16.694a8 8 0 0 1 7.59-.698l46.837 20.073a7.973 7.973 0 0 1 4.798 8.297A48.009 48.009 0 0 1 176 216 136 136 0 0 1 40 80a48.009 48.009 0 0 1 41.923-47.619 7.973 7.973 0 0 1 8.297 4.798l20.09 46.878a8 8 0 0 1-.66 7.532l-16.636 25.42a7.929 7.929 0 0 0-.538 7.806z\" fill=\"#30017E\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\"></path></svg>\n                        <span>6 000 étudiant sont appelés chaque année par nos conseillers d'orientation</span>\n                    </li>\n                    <li fxLayout=\"row\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 256 256\" class=\"i i-chalkboard-teacher\" aria-hidden=\"true\"><circle cx=\"104\" cy=\"144\" r=\"32\" fill=\"#30017E\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\"></circle><path d=\"M53.39 207.999a56.023 56.023 0 0 1 101.22 0L216 208a8 8 0 0 0 8-8V56a8 8 0 0 0-8-8H40a8 8 0 0 0-8 8v144a8 8 0 0 0 8 8z\" fill=\"#30017E\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\"></path><path fill=\"#30017E\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" d=\"M176 176h16V80H64v16\"></path></svg>\n                        <span>3 514 formations (tous les cursus du Cameroun) </span>\n                    </li>\n                    <li fxLayout=\"row\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 256 256\" class=\"i i-star\" aria-hidden=\"true\"><path d=\"M132.411 190.733l50.435 31.954c6.447 4.084 14.452-1.99 12.539-9.516l-14.572-57.323a8.757 8.757 0 0 1 2.837-8.876l45.228-37.643c5.942-4.946 2.875-14.809-4.76-15.304l-59.064-3.834a8.418 8.418 0 0 1-7.248-5.35l-22.028-55.473a8.319 8.319 0 0 0-15.556 0L98.194 84.84a8.418 8.418 0 0 1-7.248 5.35l-59.064 3.834c-7.635.495-10.702 10.358-4.76 15.304l45.228 37.643a8.757 8.757 0 0 1 2.837 8.876l-13.514 53.16c-2.295 9.031 7.31 16.32 15.046 11.42l46.87-29.695a8.214 8.214 0 0 1 8.822 0z\" fill=\"#30017E\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\"></path></svg>\n                        <span>500 avis d'établissements</span>\n                    </li>\n                    <li fxLayout=\"row\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 256 256\" class=\"i i-buildings\" aria-hidden=\"true\"><path fill=\"#30017E\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" d=\"M16 215.983h224m-96.006 0v-176a8 8 0 0 0-8-8h-96a8 8 0 0 0-8 8v176m192 0v-112a8 8 0 0 0-8-8h-72m-80-24h32m-16 64h32m-48 40h32m80 0h16m-16-40h16\"></path></svg>\n                        <span>500 établissements présentés</span>\n                    </li>\n                </ul>    \n            </div>\n        </div>\n    </div>\n\n    <app-catalog-panel></app-catalog-panel>\n\n    <div class=\"promise\">\n        <div class=\"orientTitle\">\n            <h2>La promesse de Camerdiplome</h2>\n        </div>\n        <div class=\"promiseBox\">\n            <div class=\"inbox\">\n                <div class=\"inboxImage first\">\n                    <img src=\"./../../../../assets/images/pexels-sadock-kaisi-9287492.webp\" alt=\"\">\n                </div>\n                <div class=\"inboxText\">\n                    <h4>Une offre exhaustive</h4>\n                    <p class=\"dolle\">Camerdiplome référence toutes les écoles privées comme publiques</p>\n                    <p class=\"stone\">Pour chaque école, on vous propose les formations, les avis, les accréditations, les campus, les brochures, les vidéos, les témoignages, les articles, etc.</p>\n                </div>\n            </div>\n            <div class=\"inbox\">\n                <div class=\"inboxImage\">\n                    <img src=\"./../../../../assets/images/pexels-alexander-suhorucov-6457554.webp\" alt=\"\">\n                </div>\n                <div class=\"inboxText\">\n                    <h4>Des conseils personnalisés</h4>\n                    <p class=\"dolle\">Des conseillers d’orientation formés pour vous guider dans votre démarche</p>\n                    <p class=\"stone\">Nos conseillers d’orientation vous rappellent gratuitement pour valider votre profil, ajuster votre projet et vous orienter vers les meilleures écoles.</p>\n                </div>\n            </div>\n        </div>\n    </div>\n    <app-start ></app-start>\n    <!-- <div class=\"trouver\">\n        <button mat-raised-button  >solliciter un accompagnement</button>\n    </div> -->\n</div>\n\n\n","\n    <div class=\"onePage\" *ngFor=\"let school of schoolData$  | async\">\n        <h1>{{school.nom_e}} </h1>\n        <app-under-building></app-under-building>\n    </div> \n    <div *ngIf=\"count === 0\">\n        <app-under-building></app-under-building>\n    </div>","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { BEHAVIOR } from 'src/app/core/model/Behavior';\nimport { SchoolData } from 'src/app/core/model/school-model';\nimport { TopNewsService } from 'src/app/services/top-news.service';\nimport { environment } from \"src/environments/environment\";\n\n@Component({\n  selector: 'app-onepage',\n  templateUrl: './onepage.component.html',\n  styleUrls: ['./onepage.component.scss']\n})\nexport class OnepageComponent implements OnInit, AfterViewInit{\n\n  schoolName!: string;\n  count!: number;\n  schoolData$!: Observable<SchoolData[]>;\n  schoolData!: SchoolData;\n\n  constructor( private route: ActivatedRoute,\n                private http: HttpClient,\n                private topNewsService : TopNewsService) {}\n\n  ngOnInit(): void {\n    this.schoolName = this.route.snapshot.queryParams['school'];\n    this.schoolData$ = this.getSerchResult(this.schoolName);\n    this.schoolData$.subscribe(res => {\n      console.log(res);\n      this.count = res.length\n    })\n\n  }\n\n  ngAfterViewInit(): void {\n    this.topNewsService.scrollTo('header', BEHAVIOR.auto)\n  }\n\n\n  getSerchResult(school: string): Observable<SchoolData[]> {\n    const url = `${environment.apiUrl}/api/shoolData`;\n    let queryParams = new HttpParams();\n    queryParams = queryParams.append('school', school);\n    return this.http.get<SchoolData[]>(url, {params: queryParams})\n  }\n\n\n}\n","import { AfterViewInit, Component } from '@angular/core';\nimport { TopNewsService } from '../services/top-news.service';\nimport { BEHAVIOR } from '../core/model/Behavior';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements AfterViewInit{\n\n  constructor( private topNewsService: TopNewsService){}\n\n  ngAfterViewInit(): void {\n    this.topNewsService.scrollTo('header', BEHAVIOR.auto)\n  }\n}\n","<div class=\"container\">\n    <img src=\"../../assets/images/logo-no-background.png\" alt=\"\" class=\"bg\">\n    <div class=\"content\">\n        <p>\n            Les formations Camerounaises connaîssent aujourd’hui une forte \n        diversification  des  filières  et  une  dispersion  géographique  des \n        établissements.\n        </p>\n        <p>\n            Avant de se lancer aujourd’hui dans les démarches d’inscription dans cette \n            multitude d’établissements, il est nécessaire au préalable pour les élèves, étudiants et demandeurs d'emploie de \n            déterminer leurs priorités de poursuite d’études. En effet, les filières de formation \n            sont nombreuses, avec chacune ses particularités. \n        </p>\n        <p>\n            La plate-forme Camerdiplome vise à assurer la diffusion \n            et la présentation des offres académiques nationales, afin d’amener les élèves, les \n            étudiants et toutes autres personnes qui souhaitent suivre un cursus académique, \n            à  mieux  s’orienter  dans  les  fi lières  correspondant  à  leur  profil  académique  et \n            aboutissant aux métiers en relation avec leurs projets professionnels et les réalités \n            du monde de l’emploi.\n        </p>\n        <p>\n            Camerdiplome vous permet d’avoir une vision \n            globale  sur  les  caractéristiques  des  différentes  filières  d’études  (durée,  accès, \n            programme, conditions d’études, débouchés…), avec le calendrier des inscriptions.\n        </p>\n        <p>\n            Au delà de l’information pratique que CamerDiplome apporte à travers un aperçu \n            du système d’Enseignement camerounais, notre équipe de Conseillers \n            d’Orientation sont à votre disposition pour répondre en cas de nécessité à l’essentiel \n            de vos interrogations.\n        </p>\n        <p>\n            Nous travaillons actuellement sur la mise à disposition des avis émis par d'anciens étudiants \n            afin d'apporter à nos utilisateur une vision plus impartiale de la réputation des établissements \n            visibles sur notre plate-forme.\n        </p>\n    </div>\n</div>\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\ninterface EtsForm {\r\n    nom : string;\r\n    prenom: string;\r\n    etablissement: string;\r\n    ville: string;\r\n    comment: string;\r\n    email:  string;\r\n    phone:string;\r\n  }\r\nconst API_URL = `${environment.apiUrl}/api/test/`;\r\n//const API_URL = 'http://localhost:3000/';\r\n\r\n@Injectable ({\r\n    providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n    constructor(private http: HttpClient){}\r\n\r\n    getPublicContent(): Observable<any>{\r\n        return this.http.get(API_URL + 'all', {responseType: 'text'})\r\n    }\r\n    getUserBoard(): Observable<any>{\r\n        return this.http.get(API_URL + 'user', {responseType: 'text'})\r\n    }\r\n    getModeratorBoard(): Observable<any>{\r\n        return this.http.get(API_URL + 'mod', {responseType: 'text'})\r\n    }\r\n    getAdminBoard(): Observable<any>{\r\n        return this.http.get(API_URL + 'admin', {responseType: 'text'})\r\n    }\r\n\r\n    postEts(etsForm: {nom : string, prenom: string, etablissement: string, ville: string;\r\n                    comment: string, email:  string, phone:string;}): Observable <EtsForm> {\r\n        console.log(etsForm);\r\n        return this.http.post<EtsForm>(`${environment.apiUrl}/api/ets`, etsForm);\r\n    }\r\n   // getAdminBoard(): Observable<any>{\r\n   //     return this.http.get(API_URL + 'admin')\r\n   // }\r\n   \r\n}","<div class=\"container\">\n    <div header=\"\" class=\"main\" >\n        <p-card header=\"Commençons\" *ngIf=\"stape1\" >\n            <form (ngSubmit)=\"onSubmitCateg()\" class=\"beSure\">\n                <label for=\"categ\">Vous êtes ?</label>\n                <p-dropdown id=\"categ\" [options]=\"categ\" optionLabel=\"name\" placeholder=\"Votre statut\" optionValue=\"code\" [(ngModel)]=\"categorie\" name=\"categ\"></p-dropdown>\n                <small>Formulaire dédié aux écoles. Si vous cherchez des informations sur une école et son enseignement c'est par <a routerLink=\" \"><strong>ICI</strong></a> </small>\n                <p-button type=\"submit\" styleClass=\"p-button-warning\">Suivant</p-button>\n            </form>\n        </p-card>\n        <p-card header=\"Vos coordonnées\" *ngIf=\"stape2\" >\n            <form (ngSubmit)=\"onSubmitForm()\" class=\"beSure\" [formGroup]=\"newEts\">\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Votre Nom</mat-label>\n                    <input id=\"nom\" type=\"text\" matInput  formControlName=\"nom\" >\n                </mat-form-field>\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Votre Prénom</mat-label>\n                    <input id=\"prenom\" type=\"text\" matInput  formControlName=\"prenom\"> \n                </mat-form-field>\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Votre etablissement</mat-label>\n                    <textarea id=\"etablissement\" type=\"text\" matInput  formControlName=\"etablissement\"> \n                    </textarea> \n                </mat-form-field>\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Ville siège</mat-label>\n                    <input id=\"ville\" type=\"text\" matInput  formControlName=\"ville\"> \n                </mat-form-field>\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Une brève description de votre établissement</mat-label>\n                    <textarea id=\"comment\" type=\"text\" matInput  formControlName=\"comment\"> \n                    </textarea> \n                </mat-form-field>  \n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Votre E-mail</mat-label>\n                    <input id=\"email\" type=\"email\" matInput  formControlName=\"email\"> \n                </mat-form-field>\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Numéro Whatsapp si possible</mat-label>\n                    <input id=\"phone\" type=\"tel\" matInput  formControlName=\"phone\"> \n                </mat-form-field>                               \n                <p-button type=\"submit\" styleClass=\"p-button-warning\" [disabled]=\"newEts.invalid\">Suivant</p-button>\n            </form>\n        </p-card>\n        <p-card *ngIf=\"stape3\"\n                header=\"Votre demande a bien été prise en compte\"  \n                subheader=\"Nos équipes vont vous recontacter très rapidement 😀\">\n\n        </p-card>\n        <!-- <form [formGroup]=\"newEts\">   \n            <div class=\"form-group\">\n                <label for=\"nom_camp\">Nom du Campus</label>\n                <input id=\"nom_camp\" type=\"text\"  formControlName=\"nom_camp\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"ville_cam\">ville</label>\n                <input id=\"ville_cam\" type=\"text\" formControlName=\"ville_cam\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"quartier_camp\">quartier</label>\n                <input id=\"quartier_camp\" type=\"text\" formControlName=\"quartier_camp\">\n            </div>\n            <div class=\"form-group\">\n                <label >Principal</label>\n                <p-radioButton name=\"principal_camp\" inputId=\"oui\" value=\"1\" formControlName=\"principal_camp\"></p-radioButton><label for=\"oui\">Oui</label>\n                <p-radioButton name=\"principal_camp\" inputId=\"non\" value=\"0\" formControlName=\"principal_camp\"></p-radioButton><label for=\"non\">Non</label>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"descriptif_camp\">Descriptif</label>\n                <p-editor formControlName=\"descriptif_camp\" [style]=\"{'height':'320px'}\"></p-editor>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"lon_camp\">Longitude</label>\n                <input id=\"lon_camp\" type=\"text\" formControlName=\"lon_camp\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"lat_camp\">Latitude</label>\n                <input id=\"lat_camp\" type=\"text\" formControlName=\"lat_camp\">\n            </div>\n            <div class=\"action-buttons\">\n                <button type=\"submit\" (click)=\"onSubmitForm()\">Enregistrer</button>\n            </div>\n        </form> -->\n    </div>\n    <div class=\"info\">\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from '../services/user.service';\n\ninterface Categ {\n  name: string;\n  code: string\n}\n\n@Component({\n  selector: 'app-referencer',\n  templateUrl: './referencer.component.html',\n  styleUrls: ['./referencer.component.scss']\n})\nexport class ReferencerComponent implements OnInit{\n\n  newEts!:FormGroup;\n  categ !: Categ[];\n  categorie!: string;\n  stape1!: boolean;\n  stape2!: boolean;\n  stape3!: boolean;\n\n  constructor(private formBuilder: FormBuilder,\n              private approut : Router,\n              private userService: UserService){}\n\n  ngOnInit(): void {\n    this.categ = [\n      {name : 'centre de formation', code: 'centre'},\n      {name : 'école', code: 'ecole'},\n      {name : 'formateur indépendant', code: 'indep'},\n      {name : 'Groupe de Prépa', code: 'prepa'},\n      {name : 'à la recherche d\\'une formation', code: 'candidat'}\n    ];\n\n    this.stape1 = true;\n    this.stape2 = false;\n    this.stape3 = false;\n    this.newEts  = this.formBuilder.group({\n      nom : [null, [Validators.required]],\n      prenom: [null, [Validators.required]],\n      etablissement: [null, [Validators.required]],\n      ville: [null, [Validators.required]],\n      comment: [null, [Validators.required]],\n      email:  [null, [Validators.required]],\n      phone: [null, [Validators.required]]\n    })\n  }\n\n  onSubmitCateg(){\n    this.stape1 = false;\n    this.stape2 = true;\n    console.log(this.categorie); \n    if (this.categorie == 'candidat') {\n      this.approut.navigateByUrl('orientation/start/degree');\n    }\n  }\n  onSubmitForm(){\n    this.stape2= false;\n    this.stape3=true;\n   // console.log(this.newEts.value);\n    this.userService.postEts(this.newEts.value).subscribe();\n  }\n\n}\n","<div class=\"onePage\" *ngFor=\"let diplome of diplomeData$  | async\">\n    <h1>{{diplome.nom_dip}} </h1>\n    <app-under-building></app-under-building>\n</div> ","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Diplome } from '../admin/models/diplome.model';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { TopNewsService } from '../services/top-news.service';\nimport { BEHAVIOR } from '../core/model/Behavior';\n\n@Component({\n  selector: 'app-diplomes',\n  templateUrl: './diplomes.component.html',\n  styleUrls: ['./diplomes.component.scss']\n})\nexport class DiplomesComponent implements OnInit, AfterViewInit{\n\n  diplomeName!: string;\n  diplomeData$!: Observable <Diplome[]>\n\n  constructor( private route: ActivatedRoute,\n              private http: HttpClient,\n              private topNewsService : TopNewsService) {}\n\n  ngOnInit(){\n    this.diplomeName = this.route.snapshot.queryParams['degree'];\n    this.diplomeData$ = this.getSerchResult(this.diplomeName);\n  }\n\n  ngAfterViewInit(): void {\n    this.topNewsService.scrollTo('header', BEHAVIOR.auto)\n  }\n\n  getSerchResult(diplome: string): Observable<Diplome[]> {\n    const url = `${environment.apiUrl}/api/diplomeData`;\n    let queryParams = new HttpParams();\n    queryParams = queryParams.append('diplome', diplome);\n    return this.http.get<Diplome[]>(url, {params: queryParams})\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { LandingPageComponent } from './landing-page/components/landing-page/landing-page.component';\nimport { OnepageComponent } from './etablissement/components/onepage/onepage.component';\nimport { AboutComponent } from './about/about.component';\nimport { ReferencerComponent } from './referencer/referencer.component';\nimport { DiplomesComponent } from './diplomes/diplomes.component';\n\n\nconst routes: Routes = [\n  { path: 'orientation', loadChildren: () => import('./orientation/orientation.module').then(m => m.OrientationModule) },\n  { path: 'admin', loadChildren: () => import('./admin/admin.module').then(m => m.AdminModule) },\n  { path: 'info', loadChildren: () => import('./informations/informations.module').then(m => m.InformationsModule) },\n  { path: 'etablissement', component: OnepageComponent},\n  { path: '', component: LandingPageComponent},\n  { path: 'login', component:LoginComponent},\n  { path: 'about', component:AboutComponent},\n  { path: 'diplome', component: DiplomesComponent},\n  { path: 'referencer', component:ReferencerComponent},\n  { path:'**', redirectTo:''}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true, initialNavigation: 'enabledBlocking' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent {\n\n  @Output() public sidenavToggle = new EventEmitter ();\n\n  constructor() {}\n\n  ngOnInit() {\n\n  }\n\n  public onToggleSidenav = () => {\n    this.sidenavToggle.emit();\n  }\n}\n","\n<mat-toolbar color=\"\" id=\"header\">\n    \n    <span><a href=\"\" routerLink=\"['']\"  > <img src=\"../../../../assets/images/logo-no-background-right.svg\" class=\"logo\" alt=\"Camerdiplome\"> </a></span>\n    <span class=\"menu-spacer\"></span>\n    <button class=\"mat-icon-bt\" mat-icon-button (click)=\"onToggleSidenav()\" fxHide.gt-xs>\n        <mat-icon>menu</mat-icon>\n    </button>\n        \n        <div fxFlex fxLayout fxLayoutAlign=\"end\" fxHide.xs >\n            <button routerLink=\"info/diplomes\" mat-button >Diplômes</button>\n            <button mat-button [matMenuTriggerFor]=\"prebac\" class=\"goto\" >Avant Bac</button>\n            <mat-menu #prebac=\"matMenu\" >  \n                <button routerLink=\"info/cap\" mat-menu-item>CAP</button>\n                <button routerLink=\"info/bacPro\" mat-menu-item>Bac Technique</button>\n                <button routerLink=\"info/cqp\" mat-menu-item>CQP / DQP</button>\n                <button routerLink=\"info/capacite\" mat-menu-item>Capacité en droit</button>\n            </mat-menu>       \n            <button mat-button [matMenuTriggerFor]=\"postbac\" class=\"goto\" >Après Bac</button>\n            <mat-menu #postbac=\"matMenu\" >         \n                <button routerLink=\"info/prepa\" mat-menu-item>Prépa</button>\n                <button routerLink=\"info/bts\" mat-menu-item>BTS</button>\n                <button routerLink=\"info/hnd\" mat-menu-item>HND</button>\n                <button routerLink=\"info/dut\" mat-menu-item>DUT</button>\n                <button routerLink=\"info/licence\" mat-menu-item>Licence</button>\n                <button routerLink=\"info/licencePro\" mat-menu-item>Licence Pro</button>\n                <button routerLink=\"info/bachelor\" mat-menu-item>Bachelor's Degree</button>\n                <button routerLink=\"info/master\" mat-menu-item>Master</button>\n            </mat-menu>\n            <button routerLink=\"info/ecole\" mat-button >Ecoles</button>\n            <button routerLink=\"info/metier\" mat-button >Métier</button>\n    \n            <p-button routerLink=\"referencer\" label=\"Référencer son établissement\" styleClass=\"p-button-outlined p-button-secondary\"></p-button>\n        </div>\n    \n</mat-toolbar>\n<!--\n<mat-sidenav-container fxFlexFill>\n    <mat-sidenav #sidenav>\n        <mat-nav-list>\n            <button mat-button [matMenuTriggerFor]=\"diplomes\" >Diplômes</button>\n            <mat-menu #diplomes=\"matMenu\">\n                <button mat-menu-item>Diplomes</button>\n                <button mat-menu-item>Bac Pro</button>\n                <button mat-menu-item>CAP</button>\n                <button mat-menu-item>BTS</button>\n                <button mat-menu-item>Prépa</button>\n                <button mat-menu-item>DUT</button>\n                <button mat-menu-item>BUT</button>\n                <button mat-menu-item>Bachelor</button>\n                <button mat-menu-item>Licence</button>\n                <button mat-menu-item>Licence Pro</button>\n                <button mat-menu-item>Master</button>\n            </mat-menu>\n            <button mat-button >Ècoles</button>\n            <button mat-button [matMenuTriggerFor]=\"formation\" >Formation</button>\n            <mat-menu #formation=\"matMenu\">\n                <button mat-menu-item>Domaine d'étude</button>\n                <button mat-menu-item>Filière</button>\n                <button mat-menu-item>Formation à distance</button>\n                <button mat-menu-item>Métier</button>\n            </mat-menu>\n        </mat-nav-list>\n    </mat-sidenav>\n\n        <mat-sidenav-content fxFlexFill>Main content</mat-sidenav-content>\n    \n</mat-sidenav-container>\n\n-->","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent {\n\n}\n","<!-- Footer -->\n<footer class=\"text-center text-lg-start\" style=\"background-color: #30017E; color: white;\">\n    <!-- Section: Social media -->\n    <section\n      class=\"d-flex justify-content-center justify-content-lg-between p-4 border-bottom\"\n    >\n      <!-- Left -->\n      <div class=\"me-5 d-none d-lg-block\">\n        <span>Get connected with us on social networks:</span>\n      </div>\n      <!-- Left -->\n  \n      <!-- Right -->\n      <div>\n        <a href=\"\" class=\"me-4 text-reset\">\n          <i class=\"fab fa-facebook-f\"></i>\n        </a>\n        <a href=\"\" class=\"me-4 text-reset\">\n          <i class=\"fab fa-twitter\"></i>\n        </a>\n        <a href=\"\" class=\"me-4 text-reset\">\n          <i class=\"fab fa-google\"></i>\n        </a>\n        <a href=\"\" class=\"me-4 text-reset\">\n          <i class=\"fab fa-instagram\"></i>\n        </a>\n        <a href=\"\" class=\"me-4 text-reset\">\n          <i class=\"fab fa-linkedin\"></i>\n        </a>\n        <a href=\"\" class=\"me-4 text-reset\">\n          <i class=\"fab fa-github\"></i>\n        </a>\n      </div>\n      <!-- Right -->\n    </section>\n    <!-- Section: Social media -->\n  \n    <!-- Section: Links  -->\n    <section class=\"\">\n      <div class=\"container text-center text-md-start mt-5\">\n        <!-- Grid row -->\n        <div class=\"row mt-3\">\n          <!-- Grid column -->\n          <div class=\"col-md-3 col-lg-4 col-xl-3 mx-auto mb-4\">\n            <!-- Content -->\n            <h6 class=\"text-uppercase fw-bold mb-4\">\n              <i class=\"fas fa-gem me-3\"></i>Camerdiplome\n            </h6>\n            <p>\n              Cette plateforme est concus pour t'aider à mieux t'orienter dans le choix de ta future carière.\n            </p>\n          </div>\n          <!-- Grid column -->\n  \n          <!-- Grid column -->\n          <div class=\"col-md-2 col-lg-2 col-xl-2 mx-auto mb-4\">\n            <!-- Links -->\n            <h6 class=\"text-uppercase fw-bold mb-4\">\n              À PROPOS\n            </h6>\n            <p>\n              <a routerLink=\"about\" class=\"text-reset\">Qui sommes-nous ?</a>\n            </p>\n            <p>\n              <a href=\"#!\" class=\"text-reset\">Rejoignez-nous</a>\n            </p>\n          </div>\n          <!-- Grid column -->\n  \n          <!-- Grid column -->\n          <div class=\"col-md-3 col-lg-2 col-xl-2 mx-auto mb-4\">\n            <!-- Links -->\n            <h6 class=\"text-uppercase fw-bold mb-4\">\n              ACCÈS DIRECT\n            </h6>\n            <p>\n              <a href=\"#!\" class=\"text-reset\">Camerdiplome Avis</a>\n            </p>\n            <p>\n              <a href=\"#!\" class=\"text-reset\">Journée porte ouverte - JPO</a>\n            </p>\n            <p>\n              <a href=\"#!\" class=\"text-reset\">Liste des diplômes</a>\n            </p>\n            <p>\n              <a href=\"#!\" class=\"text-reset\">Que faire après le bac ?</a>\n            </p>\n            <p>\n                <a href=\"#!\" class=\"text-reset\">Liste des établissements</a>\n            </p>\n          </div>\n          <!-- Grid column -->\n  \n          <!-- Grid column -->\n          <div class=\"col-md-4 col-lg-3 col-xl-3 mx-auto mb-md-0 mb-4\">\n            <!-- Links -->\n            <h6 class=\"text-uppercase fw-bold mb-4\">\n              Contact\n            </h6>\n            <p><i class=\"fas fa-home me-3\"></i> Yaoundé, Cameroun</p>\n            <p>\n              <i class=\"fas fa-envelope me-3\"></i>\n              info@camerdiplome.com\n            </p>\n            <p><i class=\"fas fa-phone me-3\"></i>  + 237 698 18 32 97 </p>\n            <p><i class=\"fas fa-print me-3\"></i> + 237 698 18 32 97 </p>\n          </div>\n          <!-- Grid column -->\n        </div>\n        <!-- Grid row -->\n      </div>\n    </section>\n    <!-- Section: Links  -->\n  \n    <!-- Copyright -->\n    <div class=\"text-center p-4\" style=\"background-color: rgba(0, 0, 0, 0.05);\">\n      © 2023 Copyright:\n      <a class=\"text-reset fw-bold\" href=\"#\">FNJ.com</a>\n    </div>\n    <!-- Copyright -->\n  </footer>\n  <!-- Footer -->","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-sidenav-list',\n  templateUrl: './sidenav-list.component.html',\n  styleUrls: ['./sidenav-list.component.scss']\n})\nexport class SidenavListComponent implements OnInit {\n  @Output() sidenavClose = new EventEmitter();\n\n  constructor() {}\n\n  ngOnInit() {\n    \n  }\n\n  public onSidenavClose = () => {\n    this.sidenavClose.emit();\n  }\n}\n","<mat-nav-list fxLayout=\"column\">\n    <button mat-button routerLink=\"info/diplomes\" (click)=\"onSidenavClose() \" >Diplômes</button>\n    <button mat-button [matMenuTriggerFor]=\"postbac\" >Avant Bac </button>\n    <mat-menu #postbac=\"matMenu\">\n        <button mat-menu-item routerLink=\"info/cap\" (click)=\"onSidenavClose() \">CAP</button>\n        <button mat-menu-item routerLink=\"info/bacPro\" (click)=\"onSidenavClose() \">Bac Technique</button>\n        <button mat-menu-item routerLink=\"info/cqp\" (click)=\"onSidenavClose() \">CQP / DQP</button>\n        <button mat-menu-item routerLink=\"info/capacite\" (click)=\"onSidenavClose() \">Capacité en droit</button>\n    </mat-menu>\n    <button mat-button [matMenuTriggerFor]=\"prebac\" >Après Bac </button>\n    <mat-menu #prebac=\"matMenu\">\n        <button mat-menu-item routerLink=\"info/prepa\" (click)=\"onSidenavClose() \">Prépa</button>\n        <button mat-menu-item routerLink=\"info/bts\" (click)=\"onSidenavClose() \">BTS</button>\n        <button mat-menu-item routerLink=\"info/hnd\" (click)=\"onSidenavClose() \">HND</button>\n        <button mat-menu-item routerLink=\"info/dut\" (click)=\"onSidenavClose() \">DUT</button>\n        <button mat-menu-item routerLink=\"info/licence\" (click)=\"onSidenavClose() \">Licence</button>\n        <button mat-menu-item routerLink=\"info/licencePro\" (click)=\"onSidenavClose() \">Licence Pro</button>\n        <button mat-menu-item routerLink=\"info/bachelor\" (click)=\"onSidenavClose() \">Bachelor's Degree</button>\n        <button mat-menu-item routerLink=\"info/master\" (click)=\"onSidenavClose() \">Master</button>\n    </mat-menu>\n    <button mat-button routerLink=\"info/ecole\" (click)=\"onSidenavClose() \">Ecoles</button>\n    <button mat-button routerLink=\"info/metier\" (click)=\"onSidenavClose() \">Métier</button>\n\n    <button mat-button routerLink=\"referencer\" (click)=\"onSidenavClose() \">Référencer son établissement</button>\n</mat-nav-list>","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n\n  private loading: boolean = false;\n\n  constructor() { }\n\n  setLoading(loading: boolean) {\n    this.loading = false;\n  }\n\n  getLoading(): boolean {\n    //return true;\n    return this.loading;\n  }\n}","\n<div *ngIf=\"this.loader.getLoading()\" class=\"cssload-container\">\n    <!-- <div class=\"cssload-speeding-wheel\"></div> -->\n     <div class=\"blob-9\"></div>\n</div>","import { Component, ViewEncapsulation } from '@angular/core';\nimport { LoaderService } from '../services/loader.service';\n\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.scss'],\n  encapsulation: ViewEncapsulation.ShadowDom\n})\nexport class SpinnerComponent {\n\n  constructor(public loader: LoaderService) { }\n\n}\n","<app-spinner></app-spinner>\n<mat-sidenav-container>\n  <mat-sidenav #sidenav role=\"navigation\">\n    <app-sidenav-list (sidenavClose)=\"sidenav.close()\" ></app-sidenav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <app-header (sidenavToggle)=\"sidenav.toggle()\" ></app-header>\n    <nav class=\"navbar\">\n      <ul routerLinkActive=\"active\">\n        <!-- <li class=\"nav-item\">\n          <a href=\"/home\" class=\"nav-link\" routerLink=\"home\">Home</a>\n        </li> -->\n        <li class=\"nav-item\" *ngIf=\"showAdminBoard\">\n          <a  class=\"nav-link\" routerLink=\"admin\">Admin Board</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showModeratorBoard\">\n          <a  class=\"nav-link\" routerLink=\"mod\">Moderator Board</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"isLoggedIn\">\n          <a  class=\"nav-link\"  routerLink=\"admin\">Admin Board</a>\n        </li> \n        <!-- <li class=\"nav-item\" >\n          <a href=\"/user\" class=\"nav-link\"  routerLink=\"user\">User</a>\n        </li> -->\n      </ul>\n\n      <ul class=\"\" *ngIf=\"!isLoggedIn\">\n        <!-- \n        <li class=\"nav-item\">\n          <a href=\"/register\" class=\"nav-link\" routerLink=\"register\">Sign Up</a>\n        </li> \n        <li class=\"nav-item\">\n          <a href=\"/login\" class=\"nav-link\" routerLink=\"login\">Login</a>\n        </li> \n      -->\n      </ul>\n\n      <ul *ngIf=\"isLoggedIn\">\n        <li class=\"nav-item\">\n          <!-- <a href=\"/profil\" class=\"nav-link\" routerLink=\"profil\">{{username}}</a> -->\n          <a href=\"#\" class=\"nav-link\" >{{username}}</a>\n        </li>\n        <li class=\"nav-item\">\n          <a href=\"#\" (click)=\"logout()\">LogOut</a>\n        </li>\n      </ul>\n    </nav>\n    <main class=\"bigContainer\">\n      <router-outlet></router-outlet>\n    </main>\n    <app-footer></app-footer>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component, OnInit } from '@angular/core';\nimport { tokenStorageService } from './services/token-storage.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  \n  private roles!: string[];\n  isLoggedIn = false;\n  showAdminBoard = false;\n  showModeratorBoard = false;\n  username!:string;\n  title = 'ecolecamer';\n  location!: Location;\n\n  constructor (private tokenStorageService: tokenStorageService) { }\n\n  ngOnInit(): void {\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\n\n    if (environment.production) {\n      if (global.location.protocol === 'http:') {\n        window.location.href = location.href.replace('http', 'https');\n      }\n    }\n\n    if (this.isLoggedIn) {\n      const user = this.tokenStorageService.getUser();\n      this.roles = user.roles;\n\n      this.showAdminBoard = this.roles.includes('ROLE_ADMIN');\n      this.showModeratorBoard = this.roles.includes('ROLE_MODERATOR');\n\n      this.username = user.username;\n      \n    }\n\n  }\n\n  logout(){\n    this.tokenStorageService.signOut();\n    window.location.reload();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './components/header/header.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { SidenavListComponent } from './components/sidenav-list/sidenav-list.component';\nimport { RouterModule } from '@angular/router';\n\n\n\n@NgModule({\n  declarations: [\n    HeaderComponent,\n    FooterComponent,\n    SidenavListComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    FlexLayoutModule,\n    RouterModule\n  ], \n  exports: [\n    HeaderComponent,\n    FooterComponent,\n    SharedModule,\n    SidenavListComponent\n  ]\n})\nexport class CoreModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TopVideoSlideComponent } from './components/top-video-slide/top-video-slide.component';\nimport { NgbCarouselModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { SharedModule } from '../shared/shared.module';\n\n\n@NgModule({\n  declarations: [\n    TopVideoSlideComponent\n  ],\n  imports: [\n    CommonModule,\n    NgbCarouselModule,\n    FlexLayoutModule,\n    SharedModule\n  ],\n  exports: [\n    TopVideoSlideComponent\n  ]\n})\nexport class TopVideoSchoolModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TopNewsSlideComponent } from './components/top-news-slide/top-news-slide.component';\nimport { TopNewsItemComponent } from './components/top-news-item/top-news-item.component';\nimport { SingleTopNewsComponent } from './components/single-top-news/single-top-news.component';\nimport { SharedModule } from '../shared/shared.module';\n\n\n\n@NgModule({\n  declarations: [\n    TopNewsSlideComponent,\n    TopNewsItemComponent,\n    SingleTopNewsComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule\n  ],\n  exports: [\n    TopNewsSlideComponent\n  ]\n})\nexport class TopNewsModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LandingPageComponent } from './components/landing-page/landing-page.component';\nimport { OrientationModule } from \"../orientation/orientation.module\";\nimport { FormationInfoModule } from '../formation-info/formation-info.module';\nimport { TopVideoSchoolModule } from '../top-video-school/top-video-school.module';\nimport { TopNewsModule } from '../top-news/top-news.module';\nimport { CatalogPanelComponent } from './components/catalog-panel/catalog-panel.component';\nimport { SharedModule } from '../shared/shared.module';\n\n\n\n@NgModule({\n    declarations: [\n        LandingPageComponent,\n        CatalogPanelComponent\n    ],\n    imports: [\n        CommonModule,\n        OrientationModule,\n        FormationInfoModule,\n        TopVideoSchoolModule,\n        TopNewsModule,\n        SharedModule\n    ],\n    exports: [\n      LandingPageComponent\n  ]\n})\nexport class LandingPageModule { }\n","import { HttpEvent, HttpHandler, HttpHeaders, HttpInterceptor, HttpRequest, HTTP_INTERCEPTORS } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { AuthService } from \"../services/auth.service\";\r\nimport { tokenStorageService } from \"../services/token-storage.service\";\r\n\r\nconst TOKEN_HEADER_KEY = 'x-access-token';\r\n\r\n@Injectable ()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private token : tokenStorageService) {}\r\n\r\n    intercept (req: HttpRequest<any>, next:HttpHandler):Observable<HttpEvent<any>>{\r\n       \r\n        let authReq = req;\r\n        const token = this.token.getToken();\r\n        if (token != null) {\r\n            authReq = req.clone({\r\n                headers : req.headers.set(TOKEN_HEADER_KEY, token),\r\n                // withCredentials: true,\r\n            });\r\n        } else {\r\n            // console.log('le Barbar  '+token);\r\n        }\r\n        return next.handle(authReq)\r\n        \r\n       \r\n      // req = req.clone({\r\n      //  withCredentials: true,\r\n      // });\r\n      // return next.handle(req)\r\n       \r\n    }\r\n}\r\n\r\nexport const httpInterceptorProviders = [\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\r\n  ];","import { LOCALE_ID, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CoreModule } from './core/core.module';\nimport { SharedModule } from './shared/shared.module';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormationInfoModule } from './formation-info/formation-info.module';\nimport { LandingPageModule } from './landing-page/landing-page.module';\nimport { TopVideoSchoolModule } from './top-video-school/top-video-school.module';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { httpInterceptorProviders } from './interceptors/auth.interceptor';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { BoardUserComponent } from './board-user/board-user.component';\nimport { BoardModeratorComponent } from './board-moderator/board-moderator.component';\nimport { BoardAdminComponent } from './board-admin/board-admin.component';\nimport { NgxMatIntlTelInputComponent } from 'ngx-mat-intl-tel-input';\nimport { AboutComponent } from './about/about.component';\nimport { ReferencerComponent } from './referencer/referencer.component';\nimport { DiplomesComponent } from './diplomes/diplomes.component';\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\nimport { SpinnerComponent } from './spinner/spinner.component';\nimport {provideClientHydration} from '@angular/platform-browser';\n//import { LoadingInterceptor } from './interceptors/loading.interceptor';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        HomeComponent,\n        RegisterComponent,\n        ProfileComponent,\n        BoardUserComponent,\n        BoardModeratorComponent,\n        BoardAdminComponent,\n        AboutComponent,\n        ReferencerComponent,\n        DiplomesComponent,\n        SpinnerComponent,\n    ],\n    providers: [\n        { provide: LOCALE_ID, useValue: 'fr-FR' },\n        {provide: LocationStrategy, useClass: HashLocationStrategy},\n        provideClientHydration(),\n       // {provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true},\n        httpInterceptorProviders\n    ],\n    bootstrap: [\n      AppComponent,\n      CoreModule,\n      TopVideoSchoolModule\n    ],\n    imports: [\n        BrowserModule.withServerTransition({ appId: 'serverApp' }),\n        AppRoutingModule,\n        BrowserAnimationsModule,\n        CoreModule,\n        SharedModule,\n        //FlexLayoutModule,\n        NgbModule,\n        FormationInfoModule,\n       // OrientationModule,\n       // AdminModule,\n       // InformationsModule,\n        LandingPageModule,\n        HttpClientModule,\n        NgxMatIntlTelInputComponent\n    ]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"x_google_ignoreList":[]}