{"version":3,"file":"src_app_admin_admin_module_ts.js","mappings":"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","names":["AdminService","constructor","http","this","_loading$","BehaviorSubject","_formation$","_universite$","_ecole$","_diplome$","_campus$","_categ$","_domaine$","lastCandidatesLoad","loading$","asObservable","formation$","universite$","ecoles$","diplomes$","campus$","categ$","domaine$","setLoadingStatus","loading","next","handleError","error","status","console","throwError","Error","getDomaineFromServer","get","environment","pipe","tap","domaine","subscribe","getCategFromServer","categ","getFormationsFromServer","formations","Date","now","getFormationById","id","map","filter","formation","id_form","addNewFormation","formationForm","log","nom_f","post","editFormation","put","deletFormationById","formationId","url","idParams","HttpParams","append","delete","params","getUniversiteFromServer","universites","getUniversiteById","universite","id_univ","addNewUniv","univForm","editUniv","deletUnivById","univId","getEcoleFromServer","ecoles","getEcoleById","ecole","id_ecol","addNewEcole","ecoleForm","editEcole","deletEcoleById","ecoleId","getDiplomeFromServer","diplomes","getDiplomeById","diplome","id_dip","addNewDiplome","diplomeForm","deletDiplomeById","diplomeId","editDiplome","getCampusFromServer","campus","getCampusById","id_camp","editCamp","campusForm","deletCampusById","campId","addNewCampus","newCamp","i0","i1","factory","ɵfac","formation_r7","nom_dip","nom_univ","nom_camp","ville_cam","FormationListComponent_ng_container_4_mat_spinner_1_Template","$event","_r9","ctx_r8","onRowSelect","FormationListComponent_ng_container_4_ng_template_4_Template","FormationListComponent_ng_container_4_ng_template_5_Template","FormationListComponent_ng_container_4_ng_template_6_Template","FormationListComponent_ng_container_4_ng_template_7_Template","ctx_r0","data_r1","_c0","_c1","FormationListComponent","adminService","appRout","ngOnInit","InitObservable","formations$","event","navigateByUrl","data","toString","onAddFormation","universite_r7","sigle_univ","type_univ","ville_univ","i2","selectors","decls","vars","consts","template","rf","ctx","FormationListComponent_ng_container_4_Template","UnivListComponent_ng_container_4_mat_spinner_1_Template","UnivListComponent_ng_container_4_ng_template_4_Template","UnivListComponent_ng_container_4_ng_template_5_Template","UnivListComponent_ng_container_4_ng_template_6_Template","UnivListComponent_ng_container_4_ng_template_7_Template","UnivListComponent","universites$","onAddUniv","campus_r7","UnivListComponent_ng_container_4_Template","CampusListComponent_ng_container_4_mat_spinner_1_Template","CampusListComponent_ng_container_4_ng_template_4_Template","CampusListComponent_ng_container_4_ng_template_5_Template","CampusListComponent_ng_container_4_ng_template_6_Template","CampusListComponent_ng_container_4_ng_template_7_Template","CampusListComponent","onAddCampus","ecole_r7","sigle_e","nom_e","logo_e","CampusListComponent_ng_container_4_Template","EcoleListComponent_ng_container_4_mat_spinner_1_Template","EcoleListComponent_ng_container_4_ng_template_4_Template","EcoleListComponent_ng_container_4_ng_template_5_Template","EcoleListComponent_ng_container_4_ng_template_6_Template","EcoleListComponent_ng_container_4_ng_template_7_Template","EcoleListComponent","onAddEcol","diplome_r7","nom_cat","groupe","EcoleListComponent_ng_container_4_Template","DiplomeListComponent_ng_container_4_mat_spinner_1_Template","DiplomeListComponent_ng_container_4_ng_template_4_Template","DiplomeListComponent_ng_container_4_ng_template_5_Template","DiplomeListComponent_ng_container_4_ng_template_6_Template","DiplomeListComponent_ng_container_4_ng_template_7_Template","DiplomeListComponent","onAdddiplome","_r7","ctx_r6","univClick","campusClick","ctx_r9","ecoleClick","ctx_r10","diplomeClick","ctx_r11","formationClick","AdminStartComponent_div_0_app_univ_list_7_Template","AdminStartComponent_div_0_app_campus_list_8_Template","AdminStartComponent_div_0_app_ecole_list_9_Template","AdminStartComponent_div_0_app_diplome_list_10_Template","AdminStartComponent_div_0_app_formation_list_11_Template","univView","campusView","ecoleView","diplomeView","formationView","DiplomeListComponent_ng_container_4_Template","AdminStartComponent","tokenStorageService","isLoggedIn","showAdminBoard","showModeratorBoard","getToken","user","getUser","roles","includes","username","AdminStartComponent_div_0_Template","_r3","ctx_r2","onSubmitForm","ctx_r4","onReturn","ModifCampusComponent","route","formBuilder","switchMap","take","val","modifCamp","patchValue","principal_camp","lon_camp","lat_camp","descriptif_camp","group","value","i3","ModifCampusComponent_ng_container_2_Template","universitess_r4","campuss_r5","ModifEcoleComponent_ng_container_2_p_dropdown_64_Template","ModifEcoleComponent_ng_container_2_p_dropdown_69_Template","modifEcole","invalid","ModifEcoleComponent","ecole$","niveau_e","langue_e","date_creation","tel_1_e","email_e","bp_e","directeur_e","photo_directeur","mot_directeur","stat_e","descriptif_e","image_e","universites_id","Validators","campus_id","ModifEcoleComponent_ng_container_2_Template","diplome_r4","ecoles_r5","ModifFormationComponent_ng_container_2_p_dropdown_36_Template","ModifFormationComponent_ng_container_2_p_dropdown_41_Template","ModifFormationComponent","modifFormation","diplome_id","admission_diplome","condition_diplome","ecole_f_id","date_debut_f","duree_f","cout_f","programme_f","descriptif_f","displayName","ModifFormationComponent_ng_container_2_Template","ModifUnivComponent","text1","modifUniv","tel_univ","email_univ","siteweb_univ","recteur_univ","mot_du_recteur","descriptif_univ","ModifUnivComponent_ng_container_2_Template","NewCampusComponent","newCampus","quartier_camp","universitess_r2","campuss_r3","NewEcoleComponent","newEcole","arrete_creation","arrete_ouverture","siteweb_e","diplome_r2","ecoles_r3","NewEcoleComponent_p_dropdown_77_Template","NewEcoleComponent_p_dropdown_82_Template","NewFormationComponent","newFormation","diplom_id","ecole_id","ngOnDestroy","onGoBack","NewFormationComponent_p_dropdown_37_Template","NewFormationComponent_p_dropdown_42_Template","NewUnivComponent","newUniv","_r6","ctx_r5","onModif","ctx_r7","onDelet","SingleCampusComponent","router","initObservables","SingleCampusComponent_ng_container_1_Template","SingleCampusComponent_mat_spinner_4_Template","SingleCampusComponent_ng_template_6_Template","_r2","ecole_r4","SingleEcoleComponent","ecol","delay","univs","univ","data_r4","SingleEcoleComponent_ng_container_1_Template","SingleEcoleComponent_mat_spinner_4_Template","SingleEcoleComponent_ng_template_6_Template","SingleFormationComponent","universite_r4","SingleFormationComponent_ng_container_1_Template","SingleFormationComponent_mat_spinner_4_Template","SingleFormationComponent_ng_template_6_Template","SingleUnivComponent","diplome_r3","descriptif_dip","niveau","SingleUnivComponent_ng_container_1_Template","SingleUnivComponent_mat_spinner_4_Template","SingleUnivComponent_ng_template_6_Template","SingleDiplomeComponent","diplome$","categories_r6","domaine_r7","domaine_r8","domaine_r9","SingleDiplomeComponent_ng_container_1_Template","SingleDiplomeComponent_ng_template_11_Template","ModifDiplomeComponent_ng_container_2_p_dropdown_8_Template","ModifDiplomeComponent_ng_container_2_p_dropdown_17_Template","ModifDiplomeComponent_ng_container_2_p_dropdown_22_Template","ModifDiplomeComponent_ng_container_2_p_dropdown_27_Template","_r11","ctx_r12","categorie$","ModifDiplomeComponent","modifDiplome","categorie_id","domaine_id","domaine_id2","domaine_id3","categories_r4","domaine_r5","domaine_r6","ModifDiplomeComponent_ng_container_2_Template","NewDiplomeComponent","newDiplome","NewDiplomeComponent_p_dropdown_9_Template","NewDiplomeComponent_p_dropdown_18_Template","NewDiplomeComponent_p_dropdown_23_Template","NewDiplomeComponent_p_dropdown_28_Template","routes","path","component","redirectTo","AdminRoutingModule","RouterModule","AdminModule","imports","CommonModule","SharedModule"],"sourceRoot":"webpack:///","sources":["./src/app/admin/services/admin.service.ts","./src/app/admin/components/formation-list/formation-list.component.html","./src/app/admin/components/formation-list/formation-list.component.ts","./src/app/admin/components/univ-list/univ-list.component.html","./src/app/admin/components/univ-list/univ-list.component.ts","./src/app/admin/components/campus-list/campus-list.component.html","./src/app/admin/components/campus-list/campus-list.component.ts","./src/app/admin/components/ecole-list/ecole-list.component.html","./src/app/admin/components/ecole-list/ecole-list.component.ts","./src/app/admin/components/diplome-list/diplome-list.component.html","./src/app/admin/components/diplome-list/diplome-list.component.ts","./src/app/admin/components/admin-start/admin-start.component.html","./src/app/admin/components/admin-start/admin-start.component.ts","./src/app/admin/components/modif-campus/modif-campus.component.html","./src/app/admin/components/modif-campus/modif-campus.component.ts","./src/app/admin/components/modif-ecole/modif-ecole.component.html","./src/app/admin/components/modif-ecole/modif-ecole.component.ts","./src/app/admin/components/modif-formation/modif-formation.component.html","./src/app/admin/components/modif-formation/modif-formation.component.ts","./src/app/admin/components/modif-univ/modif-univ.component.html","./src/app/admin/components/modif-univ/modif-univ.component.ts","./src/app/admin/components/new-campus/new-campus.component.ts","./src/app/admin/components/new-ecole/new-ecole.component.html","./src/app/admin/components/new-campus/new-campus.component.html","./src/app/admin/components/new-ecole/new-ecole.component.ts","./src/app/admin/components/new-formation/new-formation.component.html","./src/app/admin/components/new-formation/new-formation.component.ts","./src/app/admin/components/new-univ/new-univ.component.ts","./src/app/admin/components/new-univ/new-univ.component.html","./src/app/admin/components/single-campus/single-campus.component.html","./src/app/admin/components/single-campus/single-campus.component.ts","./src/app/admin/components/single-ecole/single-ecole.component.html","./src/app/admin/components/single-ecole/single-ecole.component.ts","./src/app/admin/components/single-formation/single-formation.component.html","./src/app/admin/components/single-formation/single-formation.component.ts","./src/app/admin/components/single-univ/single-univ.component.html","./src/app/admin/components/single-univ/single-univ.component.ts","./src/app/admin/components/single-diplome/single-diplome.component.html","./src/app/admin/components/single-diplome/single-diplome.component.ts","./src/app/admin/components/modif-diplome/modif-diplome.component.html","./src/app/admin/components/modif-diplome/modif-diplome.component.ts","./src/app/admin/components/new-diplome/new-diplome.component.html","./src/app/admin/components/new-diplome/new-diplome.component.ts","./src/app/admin/admin-routing.module.ts","./src/app/admin/admin.module.ts"],"sourcesContent":["import { HttpClient, HttpErrorResponse, HttpParams } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject, catchError, delay, map, Observable, switchMap, tap, throwError } from \"rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Campus } from \"../models/campus.mode\";\r\nimport { Ecole } from \"../models/ecole.model\";\r\nimport { Formation } from \"../models/formation.model\";\r\nimport { Universite } from \"../models/univ.model\";\r\nimport { Domaine } from \"../models/domaine.model\";\r\nimport { Categ } from \"../models/categ.model\";\r\nimport { Diplome } from \"../models/diplome.model\";\r\n\r\n@Injectable ()\r\nexport class AdminService {\r\n  \r\n    constructor (private http: HttpClient) {}\r\n\r\n    private _loading$ = new BehaviorSubject<boolean>(false);\r\n    get loading$(): Observable<boolean> {\r\n      return this._loading$.asObservable();\r\n    }\r\n\r\n    private _formation$ = new BehaviorSubject<Formation[]>([]);\r\n    get formation$(): Observable<Formation[]> {\r\n      return this._formation$.asObservable();\r\n    }\r\n\r\n    private _universite$ = new BehaviorSubject<Universite[]>([]);\r\n    get universite$(): Observable<Universite[]> {\r\n      return this._universite$.asObservable();\r\n    }\r\n\r\n    private _ecole$ = new BehaviorSubject<Ecole[]>([]);\r\n    get ecoles$(): Observable<Ecole[]> {\r\n      return this._ecole$.asObservable();\r\n    }\r\n    \r\n    private _diplome$ = new BehaviorSubject<Diplome[]>([]);\r\n    get diplomes$(): Observable<Diplome[]> {\r\n      return this._diplome$.asObservable();\r\n    }\r\n\r\n    private _campus$ = new BehaviorSubject<Campus[]>([]);\r\n    get campus$(): Observable<Campus[]> {\r\n      return this._campus$.asObservable()\r\n    }\r\n\r\n    private _categ$ = new BehaviorSubject<Categ[]>([]);\r\n    get categ$(): Observable<Categ[]> {\r\n      return this._categ$.asObservable()\r\n    }\r\n\r\n    private _domaine$ = new BehaviorSubject<Domaine[]>([]);\r\n    get domaine$(): Observable<Domaine[]> {\r\n      return this._domaine$.asObservable()\r\n    }\r\n\r\n    private lastCandidatesLoad = 0;\r\n\r\n    private setLoadingStatus(loading: boolean) {\r\n      this._loading$.next(loading)\r\n    }\r\n\r\n    private handleError(error: HttpErrorResponse) {\r\n      if (error.status === 0) {\r\n        // A client-side or network error occurred. Handle it accordingly.\r\n        console.error('An error occurred:', error.error);\r\n      } else {\r\n        // The backend returned an unsuccessful response code.\r\n        // The response body may contain clues as to what went wrong.\r\n        console.error(\r\n          `Backend returned code ${error.status}, body was: `, error.error);\r\n      }\r\n      // Return an observable with a user-facing error message.\r\n      return throwError(() => new Error('Something bad happened; please try again later.'));\r\n    }\r\n\r\n     //***************  FUNCTIONS TO GET DOMAINE AND CATEGORIES **************/\r\n\r\n    getDomaineFromServer(){\r\n       this.http.get<Domaine[]>(`${environment.apiUrl}/api/domaine`).pipe(\r\n        tap(domaine =>{\r\n          this._domaine$.next(domaine);\r\n        })\r\n      ).subscribe();\r\n    }\r\n\r\n    getCategFromServer(){\r\n      this.http.get<Categ[]>(`${environment.apiUrl}/api/categ`).pipe(\r\n        tap(categ =>{\r\n          this._categ$.next(categ);\r\n        })\r\n      ).subscribe();\r\n    }\r\n\r\n    //********************* FORMATION FUNCTIONS ************************/\r\n\r\n    //**Get all formations with campu and unic connection */\r\n    getFormationsFromServer () {\r\n       // if (Date.now() - this.lastCandidatesLoad <= 3000) {\r\n       //     return;\r\n       // }\r\n       // this.setLoadingStatus(true);\r\n        this.http.get<Formation[]>(`${environment.apiUrl}/api/formations`).pipe(\r\n            //delay(2000),\r\n            tap(formations => {\r\n                this.lastCandidatesLoad = Date.now();\r\n                this._formation$.next(formations);\r\n                this.setLoadingStatus(false);\r\n            })\r\n        ).subscribe();\r\n    }\r\n\r\n    getFormationById(id: number): Observable<Formation>{\r\n      if (!this.lastCandidatesLoad) {\r\n          this.getFormationsFromServer()\r\n      }\r\n      return this.formation$.pipe(\r\n          map(formations => formations.filter(formation => formation.id_form === id)[0])\r\n      );\r\n    }\r\n\r\n    addNewFormation(formationForm: {nom_f: string, admission_diplome: string, condition_diplome: string, \r\n                    diplom_id: number, ecole_id: number, date_debut_f: string, duree_f: string,\r\n                      cout_f: string, programme_f: string, descriptif_f: string}): Observable<Formation>{\r\n      console.log(formationForm.nom_f + ' Send to BackEnd')\r\n      return this.http.post<Formation>(`${environment.apiUrl}/api/formations`, formationForm);\r\n    };\r\n\r\n    editFormation(formationForm: {id_form: number, nom_f: string, diplome_id: number, \r\n                                  admission_diplome: string,  condition_diplome: string, \r\n                                  niveau_diplome: string, ecole_id: number, date_debut_f: string, duree_f: string,\r\n                                  cout_f: string, programme_f: string, descriptif_f: string}): Observable<Formation>{\r\n                                  \r\n        return this.http.put<Formation>(`${environment.apiUrl}/api/formations`, formationForm);\r\n\r\n    }\r\n\r\n    deletFormationById(formationId: number): Observable<unknown>{\r\n      let url = `${environment.apiUrl}/api/formations`;\r\n      let idParams = new HttpParams();\r\n      idParams = idParams.append('idForm', formationId);\r\n      return this.http.delete(url, {params: idParams}) \r\n    }\r\n\r\n\r\n    //*************** UNIVERSITY FUNCTIONS **************/\r\n\r\n    getUniversiteFromServer(){\r\n      //this.setLoadingStatus(true);\r\n      this.http.get<Universite[]>(`${environment.apiUrl}/api/universites`).pipe(\r\n        tap(universites =>{\r\n          this._universite$.next(universites);\r\n      //    this.setLoadingStatus(false);\r\n        })\r\n      ).subscribe();\r\n    }\r\n\r\n    getUniversiteById(id: number): Observable<Universite>{\r\n      if (!this.lastCandidatesLoad) {\r\n          this.getUniversiteFromServer()\r\n      }\r\n      this.setLoadingStatus(false);\r\n      return this.universite$.pipe(\r\n          map(universite => universite.filter(universite => universite.id_univ === id)[0])\r\n      );\r\n    }\r\n\r\n    addNewUniv(univForm :{  nom_univ: string, sigle_univ: string, type_univ: string,\r\n                            ville_univ: string, tel_univ: string, email_univ: string,\r\n                            siteweb_univ: string, recteur_univ: string, mot_du_recteur: string, descriptif_univ: string\r\n                          }): Observable<Universite>{\r\n      console.log(univForm);\r\n      return this.http.post<Universite>(`${environment.apiUrl}/api/universites`, univForm);\r\n    }\r\n\r\n    editUniv(univForm :{  id_univ: number, nom_univ: string, sigle_univ: string, type_univ: string,\r\n                          ville_univ: string, tel_univ: string, email_univ: string,\r\n                          siteweb_univ: string, recteur_univ: string, mot_du_recteur: string, descriptif_univ: string\r\n                        }):Observable<Universite>{\r\n      \r\n      return this.http.put<Universite>(`${environment.apiUrl}/api/universites`, univForm);\r\n    }\r\n\r\n    deletUnivById(univId: number): Observable<unknown>{\r\n      let url = `${environment.apiUrl}/api/universites`;\r\n      let idParams = new HttpParams();\r\n      idParams = idParams.append('idUniv', univId);\r\n      console.log ('DELET ' + univId)\r\n      return this.http.delete(url, {params: idParams})\r\n    }\r\n\r\n    //************* ECOLE FUNCTIONS ***************/\r\n\r\n    getEcoleFromServer(){\r\n     // this.setLoadingStatus(true);\r\n      this.http.get<Ecole[]>(`${environment.apiUrl}/api/ecoles`).pipe(\r\n        tap(ecoles =>{\r\n          this._ecole$.next(ecoles);\r\n      //    this.setLoadingStatus(false);\r\n        })\r\n      ).subscribe();\r\n    };\r\n\r\n    getEcoleById(id: number):Observable<Ecole>{\r\n      return this.ecoles$.pipe(\r\n        map(ecoles => ecoles.filter(ecole => ecole.id_ecol === id)[0])\r\n    );\r\n    };\r\n\r\n    addNewEcole(  ecoleForm: {nom_e: string, sigle_e: string,\r\n                logo_e: string, niveau_e: string, langue_e: string, date_creation: string, arrete_creation: string, arrete_ouverture: string,\r\n                tel_1_e: string, email_e: string, siteweb_e: string, bp_e: string, directeur_e: string,\r\n                photo_directeur: string, mot_directeur: string, stat_e: string, descriptif_e: string,\r\n                image_e: string, universites_id: number, campus_id: number}):Observable<Ecole>{\r\n      \r\n       return this.http.post<Ecole>(`${environment.apiUrl}/api/ecoles`, ecoleForm);\r\n    };\r\n\r\n    \r\n    editEcole(ecoleForm :{ id_ecol: number,  nom_e: string, sigle_e: string, logo_e: string, \r\n                          niveau_e: string, langue_e: string, date_creation: string, tel_1_e: string, \r\n                          email_e: string, bp_e: string, directeur_e: string, photo_directeur: string, \r\n                          mot_directeur: string, stat_e: string, descriptif_e: string, image_e: string, \r\n                          universites_id: number, campus_id:number   }):Observable<Ecole>{\r\n\r\n      return this.http.put<Ecole>(`${environment.apiUrl}/api/ecoles`, ecoleForm);\r\n    }\r\n\r\n    deletEcoleById(ecoleId:number): Observable<unknown>{\r\n      let url = `${environment.apiUrl}/api/ecoles`;\r\n      let idParams = new HttpParams();\r\n      idParams = idParams.append('idEcole', ecoleId);\r\n      return this.http.delete(url, {params: idParams})\r\n    }\r\n\r\n    //*********** DIPLOMES FUNCTIONS *********************/\r\n\r\n    getDiplomeFromServer(){\r\n      // this.setLoadingStatus(true);\r\n       this.http.get<Diplome[]>(`${environment.apiUrl}/api/diplomes`).pipe(\r\n         tap(diplomes =>{\r\n           this._diplome$.next(diplomes);\r\n       //    this.setLoadingStatus(false);\r\n         })\r\n       ).subscribe();\r\n    };\r\n\r\n    getDiplomeById(id: number):Observable<Diplome>{\r\n      return this.diplomes$.pipe(\r\n        map(diplomes => diplomes.filter(diplome => diplome.id_dip === id)[0])\r\n      )\r\n    };\r\n\r\n    addNewDiplome(diplomeForm:{id_dip:number, nom_dip:string, descriptif_dip: string,\r\n      domaine_id: number, domaine_id2: number, domaine_id3: number,\r\n      niveau:string, categorie_id: number }): Observable<Diplome> {\r\n        return this.http.post<Diplome>(`${environment.apiUrl}/api/diplomes`, diplomeForm);\r\n      }\r\n\r\n    deletDiplomeById(diplomeId:number): Observable<unknown>{\r\n      let url = `${environment.apiUrl}/api/diplomes`;\r\n      let idParams = new HttpParams();\r\n      idParams = idParams.append('idDiplome', diplomeId);\r\n      return this.http.delete(url, {params: idParams})\r\n    }\r\n\r\n    editDiplome(diplomeForm:{id_dip:number, nom_dip:string, descriptif_dip: string,\r\n                            domaine_id: number, domaine_id2: number, domaine_id3: number,\r\n                            niveau:string, categorie_id: number }): Observable<Diplome> {\r\n      return this.http.put<Diplome>(`${environment.apiUrl}/api/diplomes`, diplomeForm);\r\n    }\r\n\r\n    //*********** CAMPUS FUNCTIONS *******************/\r\n\r\n    getCampusFromServer(){\r\n     // this.setLoadingStatus(true);\r\n      this.http.get<Campus[]>(`${environment.apiUrl}/api/campus`).pipe(\r\n        tap(campus =>{\r\n          this._campus$.next(campus);\r\n      //    this.setLoadingStatus(false);\r\n        })\r\n      ).subscribe();\r\n    }\r\n\r\n    getCampusById(id: number): Observable<Campus>{\r\n      if (!this.lastCandidatesLoad) {\r\n          this.getCampusFromServer()\r\n      }\r\n      return this.campus$.pipe(\r\n          map(campus => campus.filter(campus => campus.id_camp === id)[0])\r\n      );\r\n    };\r\n\r\n    editCamp(campusForm : {id_camp: number, nom_camp: string, ville_cam: string, principal_camp: boolean,\r\n            descriptif_camp: string, lon_camp: number, \r\n            lat_camp: number}): Observable<Campus>{\r\n      \r\n      return this.http.put<Campus>(`${environment.apiUrl}/api/campus`, campusForm);\r\n    }\r\n\r\n    deletCampusById(campId: number): Observable<unknown>{\r\n      let url = `${environment.apiUrl}/api/campus`;\r\n      let idParams = new HttpParams();\r\n      idParams = idParams.append('idCamp', campId);\r\n      console.log ('DELET ' + campId)\r\n      return this.http.delete(url, {params: idParams})\r\n    }\r\n\r\n    addNewCampus(newCamp : {nom_camp: string, ville_cam: string, quatier_camp: string, principal_camp: boolean,\r\n                            descriptif_camp: string, lon_camp: number, \r\n                            lat_camp: number}): Observable<Campus>{\r\n      return this.http.post<Campus>(`${environment.apiUrl}/api/campus`, newCamp);\r\n    }\r\n}\r\n\r\n","<div class=\"card\">\n    <h2>Liste des formations\n        <button pButton type=\"button\" label=\"Ajouter une Formation\" class=\"p-button-success\" (click)=\"onAddFormation()\"></button>\n    </h2>\n    <ng-container *ngIf=\"formations$ | async as data\">\n        <mat-spinner *ngIf=\"loading$ | async\"></mat-spinner>\n        <p-table [value]=\"data\" \n                [tableStyle]=\"{'min-width': '50rem'}\" \n                [styleClass]=\"'p-datatable-sm'\"\n                selectionMode=\"single\" \n                dataKey=\"code\" \n                [paginator]=\"true\"\n                [rows]=\"25\"\n                [showCurrentPageReport]=\"true\"\n                currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\n                [rowsPerPageOptions]=\"[50, 100, 150]\"\n                paginatorPosition=\"top\"\n                (onRowSelect)=\"onRowSelect($event)\">\n            \n            <ng-template pTemplate=\"header\">\n                <tr>\n                    <th pSortableColumn=\"id_form\" style=\"width:7%\">Code <p-sortIcon field=\"id_form\"></p-sortIcon></th>\n                    <th pSortableColumn=\"nom_f\" style=\"width:20%\">Name <p-sortIcon field=\"nom_f\"></p-sortIcon></th>\n                    <th pSortableColumn=\"nom_cat\" style=\"width:20%\">Diplome <p-sortIcon field=\"nom_cat\"></p-sortIcon></th>\n                    <th pSortableColumn=\"nom_univ\" style=\"width:20%\">Université <p-sortIcon field=\"nom_univ\"></p-sortIcon></th>\n                    <th pSortableColumn=\"nom_camp\" style=\"width:20%\">Campus <p-sortIcon field=\"nom_camp\"></p-sortIcon></th>\n                    <th pSortableColumn=\"ville_cam\" style=\"width:20%\">Ville <p-sortIcon field=\"ville_cam\"></p-sortIcon></th>\n                </tr>\n            </ng-template>\n            \n            <ng-template pTemplate=\"body\" let-formation>\n                \n                <tr [pSelectableRow]=\"formation\">\n                    <td>{{formation.id_form}}</td>\n                    <td>{{formation.nom_f}}</td>\n                    <td>{{formation.nom_dip}}</td>\n                    <td>{{formation.nom_univ}}</td>\n                    <td>{{formation.nom_camp}}</td>\n                    <td>{{formation.ville_cam}}</td>\n                </tr>\n            </ng-template>\n            <ng-template pTemplate=\"paginatorleft\">\n                <p-button type=\"button\" icon=\"pi pi-plus\" styleClass=\"p-button-text\"></p-button>\n            </ng-template>\n            <ng-template pTemplate=\"paginatorright\">\n                <p-button type=\"button\" icon=\"pi pi-cloud\" styleClass=\"p-button-text\"></p-button>\n            </ng-template>\n        </p-table>\n    </ng-container>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, map } from 'rxjs';\r\nimport { Formation } from '../../models/formation.model';\r\nimport { AdminService } from '../../services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-formation-list',\r\n  templateUrl: './formation-list.component.html',\r\n  styleUrls: ['./formation-list.component.scss' ]\r\n})\r\nexport class FormationListComponent implements OnInit{\r\n\r\n  loading$!: Observable<boolean>;\r\n  formations$!:Observable<Formation[]>;\r\n  formations!: Formation[];\r\n\r\n  constructor(private adminService: AdminService,\r\n              private appRout : Router) { }\r\n  \r\n  ngOnInit(): void {\r\n    this.InitObservable();\r\n    this.adminService.getFormationsFromServer();\r\n  }\r\n\r\n  private InitObservable(){\r\n    this.loading$ = this.adminService.loading$;\r\n    this.formations$ = this.adminService.formation$;\r\n  }\r\n\r\n  onRowSelect(event:any){\r\n    this.appRout.navigateByUrl('admin/formation/'+ event.data.id_form.toString());\r\n  }\r\n\r\n  onAddFormation(){\r\n    this.appRout.navigateByUrl('admin/new-formation');\r\n  }\r\n\r\n}\r\n","<div class=\"card\">\n    <h2>Liste des Université    \n        <button pButton type=\"button\" label=\"Ajouter une Université\" class=\"p-button-success\" (click)=\"onAddUniv()\"></button>\n    </h2> \n    <ng-container *ngIf=\"universites$ | async as data\">\n        <mat-spinner *ngIf=\"loading$ | async\"></mat-spinner>\n        <p-table [value]=\"data\" \n                [tableStyle]=\"{'min-width': '30rem'}\" \n                selectionMode=\"single\" \n                dataKey=\"code\" \n                [paginator]=\"true\"\n                [rows]=\"50\"\n                [showCurrentPageReport]=\"true\"\n                currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\n                [rowsPerPageOptions]=\"[10, 25, 50]\"\n                (onRowSelect)=\"onRowSelect($event)\">\n            <ng-template pTemplate=\"header\">\n                <tr>\n                    <th pSortableColumn=\"id_univ\" style=\"width:5%\">Code <p-sortIcon field=\"id_univ\"></p-sortIcon></th>\n                    <th pSortableColumn=\"sigle_univ\" style=\"width:10%\">Sigle <p-sortIcon field=\"sigle_univ\"></p-sortIcon></th>\n                    <th pSortableColumn=\"nom_univ\" style=\"width:20%\">Name <p-sortIcon field=\"nom_univ\"></p-sortIcon></th>\n                    <th pSortableColumn=\"type_univ\" style=\"width:20%\">Type <p-sortIcon field=\"type_univ\"></p-sortIcon></th>\n                    <th pSortableColumn=\"ville_univ\" style=\"width:20%\">Ville <p-sortIcon field=\"ville_univ\"></p-sortIcon></th>\n                </tr>\n            </ng-template>\n            \n            <ng-template pTemplate=\"body\" let-universite>\n                \n                <tr [pSelectableRow]=\"universite\">\n                    <td>{{universite.id_univ}}</td>\n                    <td>{{universite.sigle_univ}}</td>\n                    <td>{{universite.nom_univ}}</td>\n                    <td>{{universite.type_univ}}</td>\n                    <td>{{universite.ville_univ}}</td>\n                </tr>\n            </ng-template>\n            <ng-template pTemplate=\"paginatorleft\">\n                <p-button type=\"button\" icon=\"pi pi-plus\" styleClass=\"p-button-text\"></p-button>\n            </ng-template>\n            <ng-template pTemplate=\"paginatorright\">\n                <p-button type=\"button\" icon=\"pi pi-cloud\" styleClass=\"p-button-text\"></p-button>\n            </ng-template>\n        </p-table>\n    </ng-container>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Universite } from '../../models/univ.model';\r\nimport { AdminService } from '../../services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-univ-list',\r\n  templateUrl: './univ-list.component.html',\r\n  styleUrls: ['./univ-list.component.scss']\r\n})\r\nexport class UnivListComponent implements OnInit {\r\n\r\n  loading$!: Observable<boolean>;\r\n  universites$!: Observable<Universite[]>\r\n\r\n  constructor(private adminService: AdminService,\r\n              private appRout : Router) { }\r\n  \r\n  \r\n  ngOnInit(): void {\r\n    this.InitObservable();\r\n    this.adminService.getUniversiteFromServer();\r\n  }\r\n\r\n  private InitObservable () {\r\n    this.loading$ = this.adminService.loading$;\r\n    this.universites$ = this.adminService.universite$;\r\n  }\r\n\r\n  onRowSelect(event:any){\r\n    this.appRout.navigateByUrl('admin/universite/'+ event.data.id_univ.toString());\r\n  }\r\n\r\n  onAddUniv(){\r\n    this.appRout.navigateByUrl('admin/new-universite');\r\n  }\r\n\r\n}\r\n","<div class=\"card\">\n    <h2>Liste des Campus \n        <button pButton type=\"button\" label=\"Ajouter un Campus\" class=\"p-button-success\" (click)=\"onAddCampus()\"></button>\n    </h2>\n    <ng-container *ngIf=\"campus$ | async as data\">\n        <mat-spinner *ngIf=\"loading$ | async\"></mat-spinner>\n        <p-table [value]=\"data\" \n                [tableStyle]=\"{'min-width': '30rem'}\" \n                selectionMode=\"single\" \n                dataKey=\"code\" \n                [paginator]=\"true\"\n                [rows]=\"50\"\n                [showCurrentPageReport]=\"true\"\n                currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\n                [rowsPerPageOptions]=\"[10, 25, 50]\"\n                (onRowSelect)=\"onRowSelect($event)\">\n            <ng-template pTemplate=\"header\">\n                <tr>\n                    <th pSortableColumn=\"id_camp\" style=\"width:5%\">Code <p-sortIcon field=\"id_camp\"></p-sortIcon></th>\n                    <th pSortableColumn=\"nom_camp\" style=\"width:10%\">Nom <p-sortIcon field=\"nom_camp\"></p-sortIcon></th>\n                    <th pSortableColumn=\"ville_cam\" style=\"width:20%\">Ville <p-sortIcon field=\"ville_cam\"></p-sortIcon></th>\n                </tr>\n            </ng-template>\n            \n            <ng-template pTemplate=\"body\" let-campus>\n                \n                <tr [pSelectableRow]=\"campus\">\n                    <td>{{campus.id_camp}}</td>\n                    <td>{{campus.nom_camp}}</td>\n                    <td>{{campus.ville_cam}}</td>\n                </tr>\n            </ng-template>\n            <ng-template pTemplate=\"paginatorleft\">\n                <p-button type=\"button\" icon=\"pi pi-plus\" styleClass=\"p-button-text\"></p-button>\n            </ng-template>\n            <ng-template pTemplate=\"paginatorright\">\n                <p-button type=\"button\" icon=\"pi pi-cloud\" styleClass=\"p-button-text\"></p-button>\n            </ng-template>\n        </p-table>\n    </ng-container>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Campus } from '../../models/campus.mode';\r\nimport { AdminService } from '../../services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-campus-list',\r\n  templateUrl: './campus-list.component.html',\r\n  styleUrls: ['./campus-list.component.scss']\r\n})\r\nexport class CampusListComponent implements OnInit{\r\n\r\n  loading$!: Observable<boolean>;\r\n  campus$!: Observable<Campus[]>;\r\n\r\n  constructor(private adminService: AdminService,\r\n    private appRout : Router) { }\r\n      \r\n  ngOnInit(): void {\r\n  this.InitObservable();\r\n  this.adminService.getCampusFromServer();\r\n  }\r\n\r\n  private InitObservable(){\r\n  this.loading$ = this.adminService.loading$;\r\n  this.campus$ = this.adminService.campus$;\r\n  }\r\n\r\n  onRowSelect(event:any){\r\n  this.appRout.navigateByUrl('admin/campus/'+ event.data.id_camp.toString());\r\n  }\r\n\r\n  onAddCampus(){\r\n    this.appRout.navigateByUrl('admin/new-campus');\r\n  }\r\n\r\n}\r\n","<div class=\"card\">\n    <h2>Liste des Ecoles  \n        <button pButton type=\"button\" label=\"Ajouter une Ecole\" class=\"p-button-success\" (click)=\"onAddEcol()\"></button>\n    </h2>\n    <ng-container *ngIf=\"ecoles$ | async as data\">\n        <mat-spinner *ngIf=\"loading$ | async\"></mat-spinner>\n        <p-table [value]=\"data\" \n                [tableStyle]=\"{'min-width': '30rem'}\" \n                selectionMode=\"single\" \n                dataKey=\"code\" \n                [paginator]=\"true\"\n                [rows]=\"50\"\n                [showCurrentPageReport]=\"true\"\n                currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\n                [rowsPerPageOptions]=\"[10, 25, 50]\"\n                (onRowSelect)=\"onRowSelect($event)\">\n            <ng-template pTemplate=\"header\">\n                <tr>\n                    <th pSortableColumn=\"id_ecol\" style=\"width:5%\">Code <p-sortIcon field=\"id_ecol\"></p-sortIcon></th>\n                    <th pSortableColumn=\"sigle_e\" style=\"width:10%\">Sigle <p-sortIcon field=\"sigle_e\"></p-sortIcon></th>\n                    <th pSortableColumn=\"nom_e\" style=\"width:20%\">Name <p-sortIcon field=\"nom_e\"></p-sortIcon></th>\n                    <th pSortableColumn=\"logo_e\" style=\"width:10%\">Logo <p-sortIcon field=\"logo_e\"></p-sortIcon></th>\n                </tr>\n            </ng-template>\n            \n            <ng-template pTemplate=\"body\" let-ecole>\n                \n                <tr [pSelectableRow]=\"ecole\">\n                    <td>{{ecole.id_ecol}}</td>\n                    <td>{{ecole.sigle_e}}</td>\n                    <td>{{ecole.nom_e}}</td>\n                    <td> <img [src]=\"ecole.logo_e\" alt=\"\"> </td>\n                </tr>\n            </ng-template>\n            <ng-template pTemplate=\"paginatorleft\">\n                <p-button type=\"button\" icon=\"pi pi-plus\" styleClass=\"p-button-text\"></p-button>\n            </ng-template>\n            <ng-template pTemplate=\"paginatorright\">\n                <p-button type=\"button\" icon=\"pi pi-cloud\" styleClass=\"p-button-text\"></p-button>\n            </ng-template>\n        </p-table>\n    </ng-container>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Ecole } from '../../models/ecole.model';\r\nimport { AdminService } from '../../services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-ecole-list',\r\n  templateUrl: './ecole-list.component.html',\r\n  styleUrls: ['./ecole-list.component.scss' ]\r\n})\r\nexport class EcoleListComponent implements OnInit{\r\n\r\n  loading$!: Observable<boolean>;\r\n  ecoles$!: Observable<Ecole[]>;\r\n\r\n  constructor(private adminService: AdminService,\r\n              private appRout : Router) { }\r\n              \r\n  ngOnInit(): void {\r\n    this.InitObservable();\r\n    this.adminService.getEcoleFromServer();\r\n  }\r\n\r\n  private InitObservable(){\r\n    this.loading$ = this.adminService.loading$;\r\n    this.ecoles$ = this.adminService.ecoles$;\r\n  }\r\n\r\n  onRowSelect(event:any){\r\n    this.appRout.navigateByUrl('admin/ecole/'+ event.data.id_ecol.toString());\r\n  }\r\n\r\n  onAddEcol(){\r\n    this.appRout.navigateByUrl('admin/new-ecole');\r\n  }\r\n\r\n}\r\n","<div class=\"card\">\n    <h2>Liste des Diplomes  \n        <button pButton type=\"button\" label=\"Ajouter un Diplôme\" class=\"p-button-success\" (click)=\"onAdddiplome()\"></button>\n    </h2>\n    <ng-container *ngIf=\"diplomes$ | async as data\">\n        <mat-spinner *ngIf=\"loading$ | async\"></mat-spinner>\n        <p-table [value]=\"data\" \n                [tableStyle]=\"{'min-width': '30rem'}\" \n                selectionMode=\"single\" \n                dataKey=\"code\" \n                [paginator]=\"true\"\n                [rows]=\"50\"\n                [showCurrentPageReport]=\"true\"\n                paginatorPosition=\"top\"\n                currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\n                [rowsPerPageOptions]=\"[10, 25, 50]\"\n                (onRowSelect)=\"onRowSelect($event)\"\n                sortField=\"id_dip\"\n                [sortOrder]=\"1\" >\n            <ng-template pTemplate=\"header\">\n                <tr>\n                    <th pSortableColumn=\"id_dip\" style=\"width:5%\">Code <p-sortIcon field=\"id_dip\"></p-sortIcon></th>\n                    <th pSortableColumn=\"nom_dip\" style=\"width:20%\">Diplome <p-sortIcon field=\"nom_dip\"></p-sortIcon></th>\n                    <th pSortableColumn=\"nom_cat\" style=\"width:10%\">Catégorie <p-sortIcon field=\"nom_cat\"></p-sortIcon></th>\n                    <th pSortableColumn=\"groupe\" style=\"width:20%\">Groupe <p-sortIcon field=\"groupe\"></p-sortIcon></th>\n                </tr>\n            </ng-template>\n            \n            <ng-template pTemplate=\"body\" let-diplome>\n                \n                <tr [pSelectableRow]=\"diplome\">\n                    <td>{{diplome.id_dip}}</td>\n                    <td>{{diplome.nom_dip}}</td>\n                    <td>{{diplome.nom_cat}}</td>\n                    <td>{{diplome.groupe}}</td>\n                </tr>\n            </ng-template>\n            <ng-template pTemplate=\"paginatorleft\">\n                <p-button type=\"button\" icon=\"pi pi-plus\" styleClass=\"p-button-text\"></p-button>\n            </ng-template>\n            <ng-template pTemplate=\"paginatorright\">\n                <p-button type=\"button\" icon=\"pi pi-cloud\" styleClass=\"p-button-text\"></p-button>\n            </ng-template>\n        </p-table>\n    </ng-container>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { AdminService } from '../../services/admin.service';\r\nimport { Router } from '@angular/router';\r\nimport { Diplome } from '../../models/diplome.model';\r\n\r\n@Component({\r\n  selector: 'app-diplome-list',\r\n  templateUrl: './diplome-list.component.html',\r\n  styleUrls: ['./diplome-list.component.scss' ]\r\n})\r\nexport class DiplomeListComponent implements OnInit{\r\n\r\n  loading$!: Observable<boolean>;\r\n  diplomes$!: Observable<Diplome[]>;\r\n\r\n  constructor(private adminService: AdminService,\r\n              private appRout : Router) { }\r\n              \r\n  ngOnInit(): void {\r\n    this.InitObservable();\r\n    this.adminService.getDiplomeFromServer();\r\n  }\r\n\r\n  private InitObservable(){\r\n    this.loading$ = this.adminService.loading$;\r\n    this.diplomes$ = this.adminService.diplomes$;\r\n  }\r\n\r\n  onRowSelect(event:any){\r\n    this.appRout.navigateByUrl('admin/diplome/'+ event.data.id_dip.toString());\r\n  }\r\n\r\n  onAdddiplome(){\r\n    this.appRout.navigateByUrl('admin/new-diplome');\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"isLoggedIn\">\n    <div >\n        <button pButton type=\"button\" label=\"Université\" (click)=\"univClick()\"></button>\n        <button pButton type=\"button\" label=\"Campus\" (click)=\"campusClick()\"></button>\n        <button pButton type=\"button\" label=\"Ecoles\" (click)=\"ecoleClick()\"></button>\n        <button pButton type=\"button\" label=\"Diplômes\" (click)=\"diplomeClick()\"></button>\n        <button pButton type=\"button\" label=\"Formations\" (click)=\"formationClick()\"></button>\n    </div>\n    <app-univ-list *ngIf=\"univView\" ></app-univ-list>\n    <app-campus-list *ngIf=\"campusView\" ></app-campus-list>\n    <app-ecole-list *ngIf=\"ecoleView\" ></app-ecole-list>\n    <app-diplome-list *ngIf=\"diplomeView\" ></app-diplome-list>\n    <app-formation-list *ngIf=\"formationView\" ></app-formation-list>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { tokenStorageService } from '../../../services/token-storage.service'\n\n@Component({\n  selector: 'app-admin-start',\n  templateUrl: './admin-start.component.html',\n  styleUrls: ['./admin-start.component.scss']\n})\nexport class AdminStartComponent implements OnInit {\n\n  private roles!: string[];\n  isLoggedIn = false;\n  showAdminBoard = false;\n  showModeratorBoard = false;\n  username!:string;\n  \n  constructor (private tokenStorageService: tokenStorageService) { }\n\n  ngOnInit(): void {\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\n\n    if (this.isLoggedIn) {\n      const user = this.tokenStorageService.getUser();\n      this.roles = user.roles;\n\n      this.showAdminBoard = this.roles.includes('ROLE_ADMIN');\n      this.showModeratorBoard = this.roles.includes('ROLE_MODERATOR');\n\n      this.username = user.username;\n      \n    }\n  }\n\n\n\n  univView: boolean = true ;\n  campusView!: boolean;\n  formationView!: boolean;\n  ecoleView!: boolean;\n  diplomeView!: boolean;\n  \n\n \n\n  univClick(){\n    this.univView = true;\n    this.campusView = false;\n    this.formationView = false;\n    this.ecoleView = false;\n    this.diplomeView = false;\n  };\n\n  ecoleClick(){\n    this.univView = false;\n    this.ecoleView = true;\n    this.campusView = false;\n    this.formationView = false;\n    this.diplomeView = false;\n  };\n\n  diplomeClick(){\n    this.diplomeView = true;\n    this.univView = false;\n    this.ecoleView = false;\n    this.campusView = false;\n    this.formationView = false;\n  };\n\n  campusClick(){\n    this.univView = false;\n    this.campusView = true;\n    this.formationView = false;\n    this.ecoleView = false;\n    this.diplomeView = false;\n  };\n\n  formationClick(){\n    this.univView = false;\n    this.campusView = false;\n    this.formationView = true;\n    this.ecoleView = false;\n    this.diplomeView = false;\n  }\n}\n","<div class=\"form-card\">\n    <form [formGroup]=\"modifCamp\">   \n        <ng-container *ngIf=\"campus$ | async as campus\">   \n            <div class=\"form-group\">\n                <label for=\"nom_camp\">Nom</label>\n                <input id=\"nom_camp\" type=\"text\" formControlName=\"nom_camp\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"ville_cam\">Ville</label>\n                <input id=\"ville_cam\" type=\"text\" formControlName=\"ville_cam\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"principal_camp\">Principal</label>\n                <input id=\"principal_camp\" type=\"text\" formControlName=\"principal_camp\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"lon_camp\">Longitude</label>\n                <input id=\"lon_camp\" type=\"text\" formControlName=\"lon_camp\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"lat_camp\">Latitude</label>\n                <input id=\"lat_camp\" type=\"text\" formControlName=\"lat_camp\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"descriptif_camp\">Descriptif</label>\n                <p-editor formControlName=\"descriptif_camp\" [style]=\"{'height':'320px'}\"></p-editor>\n                <!-- <p>Value: {{campersite.descriptif_camp||'empty'}}</p> -->\n                <!-- <textarea id=\"descriptif_camp\" type=\"text\" [placeholder]=\"campersite.descriptif_camp\" formControlName=\"descriptif_camp\"></textarea> -->\n            </div>\n            <div class=\"action-buttons\">\n                <p-button type=\"submit\" styleClass=\"p-button-success\" (click)=\"onSubmitForm()\">Enregistrer</p-button>\n                <p-button styleClass=\"p-button-danger\" (click)=\"onReturn()\">Annuler</p-button>\n            </div>\n        </ng-container>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable, switchMap, take, tap } from 'rxjs';\r\nimport { Campus } from '../../models/campus.mode';\r\nimport { AdminService } from '../../services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-modif-campus',\r\n  templateUrl: './modif-campus.component.html',\r\n  styleUrls: ['./modif-campus.component.scss' ]\r\n})\r\nexport class ModifCampusComponent implements OnInit{\r\n\r\n  modifCamp!: FormGroup;\r\n  campus$!: Observable<Campus>;\r\n  campPrev!: Campus;\r\n\r\n  constructor ( private adminService : AdminService,\r\n                private route: ActivatedRoute,\r\n                private formBuilder: FormBuilder,\r\n                private appRout: Router) {}\r\n\r\n  ngOnInit(): void {\r\n    this.campus$ = this.route.params.pipe(\r\n      switchMap(params => this.adminService.getCampusById(+params['id'])),\r\n      take(1),\r\n      tap(val => {\r\n        this.modifCamp.patchValue({\r\n            id_camp: val.id_camp,\r\n            nom_camp: val.nom_camp,\r\n            ville_cam: val.ville_cam,\r\n            principal_camp: val.principal_camp,\r\n            lon_camp: val.lon_camp,\r\n            lat_camp: val.lat_camp,\r\n            descriptif_camp: val.descriptif_camp,\r\n          });\r\n        console.log(val.nom_camp)\r\n      })\r\n    );\r\n\r\n    this.modifCamp = this.formBuilder.group({\r\n      id_camp: [null],\r\n      nom_camp: [null],\r\n      ville_cam: [null],\r\n      principal_camp: [null],\r\n      lon_camp: [null],\r\n      lat_camp: [null],\r\n      descriptif_camp: [null]\r\n    });\r\n  };\r\n\r\n  onSubmitForm(){\r\n    this.adminService.editCamp(this.modifCamp.value).subscribe();\r\n    console.log(this.modifCamp.value)\r\n    this.appRout.navigateByUrl('admin/adminStart');\r\n  }\r\n\r\n  onReturn(){\r\n    this.appRout.navigateByUrl('admin/adminStart');\r\n  }\r\n}\r\n","<div class=\"form-card\">\n    <form [formGroup]=\"modifEcole\">   \n        <ng-container *ngIf=\"ecole$ | async as ecole\">   \n            <div class=\"form-group\">\n                <label for=\"nom_e\">Nom</label>\n                <input id=\"nom_e\" type=\"text\" formControlName=\"nom_e\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"sigle_e\">Sigle</label>\n                <input id=\"sigle_e\" type=\"text\" formControlName=\"sigle_e\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"logo_e\">Logo</label>\n                <input id=\"logo_e\" type=\"text\" formControlName=\"logo_e\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"niveau_e\">Nivea</label>\n                <input id=\"niveau_e\" type=\"text\" formControlName=\"niveau_e\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"langue_e\">Langue</label>\n                <input id=\"langue_e\" type=\"text\" formControlName=\"langue_e\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"date_creation\">Date de création</label>\n                <input id=\"date_creation\" type=\"text\" formControlName=\"date_creation\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"tel_1_e\">Téléphone</label>\n                <input id=\"tel_1_e\" type=\"text\" formControlName=\"tel_1_e\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"email_e\">Email</label>\n                <input id=\"email_e\" type=\"text\" formControlName=\"email_e\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"bp_e\">BP</label>\n                <input id=\"bp_e\" type=\"text\" formControlName=\"bp_e\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"directeur_e\">Directeur</label>\n                <input id=\"directeur_e\" type=\"text\" formControlName=\"directeur_e\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"photo_directeur\">Photo Directeur</label>\n                <input id=\"photo_directeur\" type=\"text\" formControlName=\"photo_directeur\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"mot_directeur\">Mot du Directeur</label>\n                <p-editor formControlName=\"mot_directeur\" [style]=\"{'height':'320px'}\"></p-editor>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"stat_e\">Statisques</label>\n                <input id=\"stat_e\" type=\"text\" formControlName=\"stat_e\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"descriptif_e\">Descriptif de l'école</label>\n                <p-editor formControlName=\"descriptif_e\" [style]=\"{'height':'320px'}\"></p-editor>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"image_e\">Image Ecole</label>\n                <input id=\"image_e\" type=\"text\" formControlName=\"image_e\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"\">Université</label>\n                <p-dropdown id=\"universites_id\" *ngIf=\"universites$ | async as universitess\" [options]=\"universitess\" placeholder=\"select Université\" optionLabel=\"nom_univ\" optionValue=\"id_univ\" formControlName=\"universites_id\"></p-dropdown>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"\">Campus</label>\n                <p-dropdown id=\"campus_id\" *ngIf=\"campus$ | async as campuss\" [options]=\"campuss\" placeholder=\"select Campus\" optionLabel=\"nom_camp\" optionValue=\"id_camp\" formControlName=\"campus_id\"></p-dropdown>\n            </div>\n\n            <div class=\"action-buttons\">\n                <p-button type=\"submit\" styleClass=\"p-button-success\" (click)=\"onSubmitForm()\" [disabled]=\"modifEcole.invalid\">Enregistrer</p-button>\n                <p-button  styleClass=\"p-button-danger\" (click)=\"onReturn()\">Enregistrer</p-button>\n            </div>\n        </ng-container>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable, switchMap, take, tap } from 'rxjs';\r\nimport { Campus } from '../../models/campus.mode';\r\nimport { Ecole } from '../../models/ecole.model';\r\nimport { Universite } from '../../models/univ.model';\r\nimport { AdminService } from '../../services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-modif-ecole',\r\n  templateUrl: './modif-ecole.component.html',\r\n  styleUrls: ['./modif-ecole.component.scss' ]\r\n})\r\nexport class ModifEcoleComponent implements OnInit{\r\n\r\n  modifEcole!: FormGroup;\r\n  ecole$!: Observable<Ecole>;\r\n  universites$!: Observable <Universite[]>;\r\n  campus$!: Observable<Campus[]>\r\n\r\n  constructor ( private adminService : AdminService,\r\n    private route: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private appRout: Router) {}\r\n\r\n  ngOnInit(): void {\r\n    this.ecole$ = this.route.params.pipe(\r\n      switchMap(params => this.adminService.getEcoleById(+params['id'])),\r\n      take(1),\r\n      tap(val => {\r\n        this.modifEcole.patchValue({\r\n          id_ecol : val.id_ecol,\r\n          nom_e: val.nom_e,\r\n          sigle_e: val.sigle_e,\r\n          logo_e: val.logo_e,\r\n          niveau_e: val.niveau_e,\r\n          langue_e: val.langue_e,\r\n          date_creation: val.date_creation,\r\n          tel_1_e: val.tel_1_e,\r\n          email_e: val.email_e,\r\n          bp_e: val.bp_e,\r\n          directeur_e: val.directeur_e,\r\n          photo_directeur: val.photo_directeur,\r\n          mot_directeur: val.mot_directeur,\r\n          stat_e: val.stat_e,\r\n          descriptif_e: val.descriptif_e,\r\n          image_e: val.image_e,\r\n          universites_id: val.universites_id,\r\n          });\r\n        console.log(val.nom_e)\r\n      })\r\n    );\r\n\r\n    this.modifEcole = this.formBuilder.group({\r\n      id_ecol: [null],\r\n      nom_e: [null],\r\n      sigle_e: [null],\r\n      logo_e: [null],\r\n      niveau_e: [null],\r\n      langue_e: [null],\r\n      date_creation: [null],\r\n      tel_1_e: [null],\r\n      email_e: [null],\r\n      bp_e: [null],\r\n      directeur_e: [null],\r\n      photo_directeur: [null],\r\n      mot_directeur: [null],\r\n      stat_e: [null],\r\n      descriptif_e: [null],\r\n      image_e: [null],\r\n      universites_id: [null, [Validators.required]],\r\n      campus_id: [null, [Validators.required]],\r\n    });\r\n    this.adminService.getUniversiteFromServer();\r\n    this.universites$ = this.adminService.universite$;\r\n    this.adminService.getCampusFromServer();\r\n    this.campus$ = this.adminService.campus$;\r\n  };\r\n\r\n  onSubmitForm(){\r\n    if (this.modifEcole.invalid) {\r\n      return;\r\n    }\r\n    this.adminService.editEcole(this.modifEcole.value).subscribe();\r\n    console.log(this.modifEcole.value);\r\n    this.appRout.navigateByUrl('admin/adminStart');\r\n  }\r\n\r\n  onReturn(){\r\n    this.appRout.navigateByUrl('admin/adminStart');\r\n  }\r\n\r\n}\r\n","<mat-card class=\"form-card\">\n    <form [formGroup]=\"modifFormation\">\n        <ng-container *ngIf=\"formation$ | async as ecole\">   \n            <div class=\"form-group\">\n                <label for=\"\">Nom de la formation</label>\n                <input id=\"nom_f\" type=\"text\"  formControlName=\"nom_f\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"\">Début de formation</label>\n                <input id=\"date_debut_f\" type=\"text\" formControlName=\"date_debut_f\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"\">Durée de formation </label>\n                <input id=\"duree_f\" type=\"text\" formControlName=\"duree_f\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"\">Coût de la formation (FCFA)</label>\n                <input id=\"cout_f\" type=\"text\" formControlName=\"cout_f\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"\">Programme de la formation</label>\n                <p-editor formControlName=\"programme_f\" [style]=\"{'height':'320px'}\"></p-editor>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"\">Descriptif de la formation</label>\n                <p-editor formControlName=\"descriptif_f\" [style]=\"{'height':'320px'}\"></p-editor>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"\">Admission</label>\n                <input id=\"admission_diplome\" type=\"text\" formControlName=\"admission_diplome\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"\">Conditions</label>\n                <input id=\"condition_diplome\" type=\"text\" formControlName=\"condition_diplome\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"\"> Diplome</label>\n                <p-dropdown id=\"diplome_id\" \n                            *ngIf=\"diplomes$ | async as diplome\" \n                            placeholder=\"Quel Diplome ?\" \n                            [options]=\"diplome\" \n                            optionLabel=\"nom_dip\" \n                            optionValue=\"id_dip\" \n                            [filter]=\"true\" filterBy=\"nom_dip\" [showClear]=\"true\"\n                            formControlName=\"diplome_id\">\n                </p-dropdown>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"\">Ecole</label>\n                <p-dropdown id=\"ecole_f_id\" \n                            *ngIf=\"ecole$ | async as ecoles\" \n                            placeholder=\"Quel Ecole ?\" \n                            [options]=\"ecoles\" \n                            optionLabel=\"displayName\" \n                            optionValue=\"id_ecol\" \n                            formControlName=\"ecole_f_id\" ></p-dropdown>\n            </div>\n        </ng-container>\n\n        <div class=\"action-buttons\">\n            <p-button type=\"submit\" styleClass=\"p-button-success\" (click)=\"onSubmitForm()\" [disabled]=\"modifFormation.invalid\">Enregistrer</p-button>\n            <p-button styleClass=\"p-button-danger\" (click)=\"onReturn()\" >Annuler</p-button>\n        </div>\n    </form>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable, map, switchMap, take, tap } from 'rxjs';\r\nimport { Categ } from '../../models/categ.model';\r\nimport { Ecole } from '../../models/ecole.model';\r\nimport { Formation } from '../../models/formation.model';\r\nimport { AdminService } from '../../services/admin.service';\r\nimport { Diplome } from '../../models/diplome.model';\r\n\r\n@Component({\r\n  selector: 'app-modif-formation',\r\n  templateUrl: './modif-formation.component.html',\r\n  styleUrls: ['./modif-formation.component.scss' ]\r\n})\r\nexport class ModifFormationComponent implements OnInit{\r\n\r\n  modifFormation!: FormGroup;\r\n  formation$!: Observable<Formation>;\r\n  ecole$!: Observable<Ecole[]>;\r\n  diplomes$!: Observable<Diplome[]>;\r\n\r\n  constructor ( private adminService : AdminService,\r\n                private route: ActivatedRoute,\r\n                private formBuilder: FormBuilder,\r\n                private appRout: Router) {}\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.modifFormation = this.formBuilder.group({\r\n      id_form: [null],\r\n      nom_f: [null],\r\n      diplome_id: [null],\r\n      admission_diplome: [null],\r\n      condition_diplome: [null],\r\n      ecole_f_id: [null, [Validators.required]],\r\n      date_debut_f: [null],\r\n      duree_f: [null],\r\n      cout_f: [null],\r\n      programme_f: [null],\r\n      descriptif_f: [null],\r\n    });\r\n\r\n    this.formation$ = this.route.params.pipe(\r\n      switchMap(params => this.adminService.getFormationById(+params['id'])),\r\n      //take(1),\r\n      tap(val => {\r\n        this.modifFormation.patchValue({\r\n          id_form : val.id_form,\r\n          nom_f : val.nom_f,\r\n          date_debut_f: val.date_debut_f,\r\n          duree_f: val.duree_f,\r\n          cout_f: val.cout_f,\r\n          programme_f: val.programme_f,\r\n          descriptif_f: val.descriptif_f,\r\n          admission_diplome: val.admission_diplome,\r\n          condition_diplome: val.condition_diplome,\r\n          diplome_id: val.diplome_id,\r\n          ecole_f_id : val.ecole_f_id,\r\n        })\r\n      })\r\n    );\r\n\r\n\r\n    this.adminService.getDiplomeFromServer();\r\n    this.adminService.getEcoleFromServer();\r\n    this.diplomes$ = this.adminService.diplomes$\r\n    this.ecole$ = this.adminService.ecoles$.pipe(\r\n      map(data => data.map(data => ({\r\n        ...data,\r\n        displayName : data.sigle_e+' || '+data.nom_e\r\n      })))\r\n    );\r\n    \r\n\r\n  }\r\n\r\n  onSubmitForm(){\r\n    if (this.modifFormation.invalid) {\r\n       return;\r\n     }\r\n    this.adminService.editFormation(this.modifFormation.value).subscribe();\r\n    console.log(this.modifFormation.value);\r\n    this.appRout.navigateByUrl('admin/adminStart');\r\n\r\n  }\r\n\r\n  onReturn(){\r\n    this.appRout.navigateByUrl('admin/adminStart');\r\n  }\r\n\r\n}\r\n","<div class=\"form-card\">\n    <form [formGroup]=\"modifUniv\">   \n        <ng-container *ngIf=\"universite$ | async as universite\">   \n            <div class=\"form-group\">\n                <label for=\"nom_univ\">Nom</label>\n                <input id=\"nom_univ\" type=\"text\" formControlName=\"nom_univ\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"sigle_univ\">Sigle</label>\n                <input id=\"sigle_univ\" type=\"text\" formControlName=\"sigle_univ\" rows=\"4\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"type_univ\">Type</label>\n                <input id=\"type_univ\" type=\"text\" formControlName=\"type_univ\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"ville_univ\">Ville</label>\n                <input id=\"ville_univ\" type=\"text\" formControlName=\"ville_univ\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"tel_univ\">Tel</label>\n                <input id=\"tel_univ\" type=\"text\" formControlName=\"tel_univ\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"email_univ\">Email</label>\n                <input id=\"email_univ\" type=\"text\" formControlName=\"email_univ\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"siteweb_univ\">Site Web</label>\n                <input id=\"siteweb_univ\" type=\"text\" formControlName=\"siteweb_univ\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"recteur_univ\">Recteur</label>\n                <input id=\"recteur_univ\" type=\"text\" formControlName=\"recteur_univ\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"mot_du_recteur\">Mot du Recteur</label>\n                <p-editor formControlName=\"mot_du_recteur\" [style]=\"{'height':'320px'}\"></p-editor>\n                \n            </div>\n            <div class=\"form-group\">\n                <label for=\"descriptif_univ\">Descriptif</label>\n                <p-editor formControlName=\"descriptif_univ\" [style]=\"{'height':'320px'}\"></p-editor>\n                <!-- <p>Value: {{universite.descriptif_univ||'empty'}}</p> -->\n                <!-- <textarea id=\"descriptif_univ\" type=\"text\" [placeholder]=\"universite.descriptif_univ\" formControlName=\"descriptif_univ\"></textarea> -->\n            </div>\n            <div class=\"action-buttons\">\n                <p-button  type=\"submit\" styleClass=\"p-button-success\" (click)=\"onSubmitForm()\">Enregistrer</p-button>\n                <p-button  styleClass=\"p-button-danger\" (click)=\"onReturn()\">Annuler</p-button>\n            </div>\n        </ng-container>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { concatMap, map, Observable, switchMap, take, tap } from 'rxjs';\r\nimport { Universite } from '../../models/univ.model';\r\nimport { AdminService } from '../../services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-modif-univ',\r\n  templateUrl: './modif-univ.component.html',\r\n  styleUrls: ['./modif-univ.component.scss' ]\r\n})\r\nexport class ModifUnivComponent implements OnInit{\r\n  \r\n  modifUniv!: FormGroup;\r\n  universite$!: Observable<Universite>;\r\n  univPrev!: Universite;\r\n  text1: string = '<div>Hello World!</div><div>PrimeNG <b>Editor</b> Rocks</div><div><br></div>';\r\n\r\n  constructor ( private adminService : AdminService,\r\n                private route: ActivatedRoute,\r\n                private formBuilder: FormBuilder,\r\n                private appRout : Router) {}\r\n  \r\n  ngOnInit(): void {\r\n    this.universite$ = this.route.params.pipe(\r\n      switchMap(params => this.adminService.getUniversiteById(+params['id'])),\r\n      take(1),\r\n      tap(val => {\r\n        this.modifUniv.patchValue({\r\n            id_univ: val.id_univ,\r\n            nom_univ: val.nom_univ,\r\n            sigle_univ: val.sigle_univ,\r\n            type_univ: val.type_univ,\r\n            ville_univ: val.ville_univ,\r\n            tel_univ: val.tel_univ,\r\n            email_univ: val.email_univ,\r\n            siteweb_univ: val.siteweb_univ,\r\n            recteur_univ: val.recteur_univ,\r\n            mot_du_recteur: val.mot_du_recteur,\r\n            descriptif_univ: val.descriptif_univ,\r\n          });\r\n        console.log(val.nom_univ)\r\n      })\r\n    );\r\n\r\n    this.modifUniv = this.formBuilder.group({\r\n      id_univ: [null],\r\n      nom_univ: [null],\r\n      sigle_univ: [null],\r\n      type_univ: [null],\r\n      ville_univ: [null],\r\n      tel_univ: [null],\r\n      email_univ: [null],\r\n      siteweb_univ: [null],\r\n      recteur_univ: [null],\r\n      mot_du_recteur: [null],\r\n      descriptif_univ: [null],\r\n    });\r\n  }\r\n\r\n  onSubmitForm(){\r\n    this.adminService.editUniv(this.modifUniv.value).subscribe();\r\n    console.log(this.modifUniv.value);\r\n    this.appRout.navigateByUrl('admin/adminStart');\r\n  }\r\n\r\n  onReturn(){\r\n    this.appRout.navigateByUrl('admin/adminStart');\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Observable, tap } from 'rxjs';\nimport { Ecole } from '../../models/ecole.model';\nimport { AdminService } from '../../services/admin.service';\n\n@Component({\n  selector: 'app-new-campus',\n  templateUrl: './new-campus.component.html',\n  styleUrls: ['./new-campus.component.scss']\n})\nexport class NewCampusComponent implements OnInit {\n\n  newCampus!: FormGroup;\n  \n  constructor(private formBuilder: FormBuilder,\n              private adminService: AdminService,\n              private appRout : Router){}\n\n  ngOnInit(): void {\n    this.newCampus = this.formBuilder.group({\n      nom_camp : [null],\n      ville_cam : [null],\n      quartier_camp : [null],\n      principal_camp : [null],\n      descriptif_camp : [null],\n      lon_camp : [null],\n      lat_camp : [null],\n    });\n  }\n\n  onSubmitForm(){\n    console.log(this.newCampus.value);\n    this.adminService.addNewCampus(this.newCampus.value).subscribe();\n    this.appRout.navigateByUrl('admin/adminStart');\n  }\n\n}\n","<mat-card class=\"main-form\">\n    <form [formGroup]=\"newEcole\">\n        <div class=\"form-group\">\n            <label for=\"\">Nom de l'Ecole</label>\n            <input id=\"nom_e\" type=\"text\"  formControlName=\"nom_e\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"\">Sigle</label>\n            <input id=\"sigle_e\" type=\"text\" formControlName=\"sigle_e\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"\">Logo</label>\n            <input id=\"logo_e\" type=\"text\" formControlName=\"logo_e\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"\">Niveau</label>\n            <input id=\"niveau_e\" type=\"text\" formControlName=\"niveau_e\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"\">Langue</label>\n            <input id=\"langue_e\" type=\"text\" formControlName=\"langue_e\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"\">Date d'ouverture</label>\n            <input id=\"date_creation\" type=\"text\" formControlName=\"date_creation\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"\">Arrêté de création</label>\n            <input id=\"arrete_creation\" type=\"text\" formControlName=\"arrete_creation\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"\">Arrêté d'ouverture</label>\n            <input id=\"arrete_ouverture\" type=\"text\" formControlName=\"arrete_ouverture\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"\">Tel</label>\n            <input id=\"tel_1_e\" type=\"text\" formControlName=\"tel_1_e\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"\">email</label>\n            <input id=\"email_e\" type=\"text\" formControlName=\"email_e\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"\">Site web</label>\n            <input id=\"siteweb_e\" type=\"text\" formControlName=\"siteweb_e\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"\">BP</label>\n            <input id=\"bp_e\" type=\"text\" formControlName=\"bp_e\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"\">Directeur</label>\n            <input id=\"directeur_e\" type=\"text\" formControlName=\"directeur_e\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"\">Photo du Directeur</label>\n            <input id=\"photo_directeur\" type=\"text\" formControlName=\"photo_directeur\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"\">mot du directeur</label>\n            <p-editor formControlName=\"mot_directeur\" [style]=\"{'height':'320px'}\"></p-editor>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"\">Statistiques</label>\n            <input id=\"stat_e\" type=\"text\" formControlName=\"stat_e\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"\">Présentation de l'Ecole</label>\n            <p-editor formControlName=\"descriptif_e\" [style]=\"{'height':'320px'}\"></p-editor>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"\">Images</label>\n            <input id=\"image_e\" type=\"text\" formControlName=\"image_e\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"\">Université</label>\n            <p-dropdown id=\"universites_id\" *ngIf=\"universites$ | async as universitess\" [options]=\"universitess\" optionLabel=\"nom_univ\" optionValue=\"id_univ\" formControlName=\"universites_id\"></p-dropdown>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"\">Campus</label>\n            <p-dropdown id=\"campus_id\" *ngIf=\"campus$ | async as campuss\" [options]=\"campuss\" optionLabel=\"nom_camp\" optionValue=\"id_camp\" formControlName=\"campus_id\"></p-dropdown>\n        </div>\n\n        <div class=\"action-buttons\">\n            <button type=\"submit\" (click)=\"onSubmitForm()\">Enregistrer</button>\n        </div>\n    </form>\n</mat-card>\n","<div class=\"form-card\">\n    <form [formGroup]=\"newCampus\">   \n        <div class=\"form-group\">\n            <label for=\"nom_camp\">Nom du Campus</label>\n            <input id=\"nom_camp\" type=\"text\"  formControlName=\"nom_camp\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"ville_cam\">ville</label>\n            <input id=\"ville_cam\" type=\"text\" formControlName=\"ville_cam\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"quartier_camp\">quartier</label>\n            <input id=\"quartier_camp\" type=\"text\" formControlName=\"quartier_camp\">\n        </div>\n        <div class=\"form-group\">\n            <label >Principal</label>\n            <p-radioButton name=\"principal_camp\" inputId=\"oui\" value=\"1\" formControlName=\"principal_camp\"></p-radioButton><label for=\"oui\">Oui</label>\n            <p-radioButton name=\"principal_camp\" inputId=\"non\" value=\"0\" formControlName=\"principal_camp\"></p-radioButton><label for=\"non\">Non</label>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"descriptif_camp\">Descriptif</label>\n            <p-editor formControlName=\"descriptif_camp\" [style]=\"{'height':'320px'}\"></p-editor>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"lon_camp\">Longitude</label>\n            <input id=\"lon_camp\" type=\"text\" formControlName=\"lon_camp\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"lat_camp\">Latitude</label>\n            <input id=\"lat_camp\" type=\"text\" formControlName=\"lat_camp\">\n        </div>\n        <div class=\"action-buttons\">\n            <button type=\"submit\" (click)=\"onSubmitForm()\">Enregistrer</button>\n        </div>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Observable, tap } from 'rxjs';\nimport { Campus } from '../../models/campus.mode';\nimport { Universite } from '../../models/univ.model';\nimport { AdminService } from '../../services/admin.service';\n\n@Component({\n  selector: 'app-new-ecole',\n  templateUrl: './new-ecole.component.html',\n  styleUrls: ['./new-ecole.component.scss']\n})\nexport class NewEcoleComponent implements OnInit {\n\n  newEcole!: FormGroup;\n  universites!: Universite[];\n  selectedUniv!: Universite;\n  universites$!: Observable <Universite[]>;\n  campus$!: Observable<Campus[]>\n\n  constructor(private formBuilder: FormBuilder,\n              private adminService: AdminService,\n              private appRout : Router){}\n\n  ngOnInit(): void {\n    this.newEcole = this.formBuilder.group({\n      nom_e : [null],\n      sigle_e : [null],\n      logo_e : [null],\n      niveau_e : [null],\n      langue_e : [null],\n      date_creation : [null],\n      arrete_creation: [null],\n      arrete_ouverture: [null],\n      tel_1_e : [null],\n      email_e : [null],\n      siteweb_e : [null],\n      bp_e : [null],\n      directeur_e : [null],\n      photo_directeur : [null],\n      mot_directeur : [null],\n      stat_e : [null],\n      descriptif_e : [null],\n      image_e : [null],\n      universites_id : [null],\n      campus_id : [null]\n    });\n\n    this.adminService.getUniversiteFromServer();\n    this.universites$ = this.adminService.universite$;\n    this.adminService.getCampusFromServer();\n    this.campus$ = this.adminService.campus$;\n  };\n\n  onSubmitForm(){\n    this.adminService.addNewEcole(this.newEcole.value).subscribe();\n    this.appRout.navigateByUrl('admin/adminStart');\n  }\n\n}\n","<mat-card class=\"main-form\">\n    <form [formGroup]=\"newFormation\">\n        <div class=\"form-group\">\n            <label for=\"\">Nom de la formation</label>\n            <input id=\"nom_f\" type=\"text\"  formControlName=\"nom_f\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"\">Début de formation</label>\n            <input id=\"date_debut_f\" type=\"text\" formControlName=\"date_debut_f\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"\">Durée de formation </label>\n            <input id=\"duree_f\" type=\"text\" formControlName=\"duree_f\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"\">Coût de la formation (FCFA)</label>\n            <input id=\"cout_f\" type=\"text\" formControlName=\"cout_f\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"\">Programme de la formation</label>\n            <p-editor formControlName=\"programme_f\" [style]=\"{'height':'320px'}\"></p-editor>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"\">Descriptif de la formation</label>\n            <p-editor formControlName=\"descriptif_f\" [style]=\"{'height':'320px'}\"></p-editor>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"\">Admission</label>\n            <input id=\"admission_diplome\" type=\"text\" formControlName=\"admission_diplome\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"\">Conditions</label>\n            <input id=\"condition_diplome\" type=\"text\" formControlName=\"condition_diplome\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"\"> Diplome</label>\n            <p-dropdown id=\"diplom_id\" \n                        *ngIf=\"diplomes$ | async as diplome\" \n                        placeholder=\"Quel Diplome ?\" \n                        [options]=\"diplome\" \n                        optionLabel=\"nom_dip\" \n                        optionValue=\"id_dip\" \n                        [filter]=\"true\" filterBy=\"nom_dip\" [showClear]=\"true\"\n                        formControlName=\"diplom_id\">\n            </p-dropdown>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"\">Ecole</label>\n            <p-dropdown id=\"ecole_id\" *ngIf=\"ecole$ | async as ecoles\" placeholder=\"Quelle Ecole ?\" [options]=\"ecoles\" optionLabel=\"displayName\" optionValue=\"id_ecol\" formControlName=\"ecole_id\"></p-dropdown>\n        </div>\n\n        <div class=\"action-buttons\">\n            <p-button type=\"submit\" styleClass=\"p-button-success\" [disabled]=\"newFormation.invalid\" (click)=\"onSubmitForm()\">Enregistrer</p-button>\n            <p-button styleClass=\"p-button-danger\" (click)=\"onGoBack()\" >Annuler</p-button>\n        </div>\n    </form>\n</mat-card>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Observable, map, take } from 'rxjs';\nimport { Ecole } from '../../models/ecole.model';\nimport { AdminService } from '../../services/admin.service';\nimport { Diplome } from '../../models/diplome.model';\nimport { Formation } from '../../models/formation.model';\n\n@Component({\n  selector: 'app-new-formation',\n  templateUrl: './new-formation.component.html',\n  styleUrls: ['./new-formation.component.scss']\n})\nexport class NewFormationComponent implements OnInit, OnDestroy{\n\n  newFormation!:FormGroup;\n  ecole$!: Observable<Ecole[]>;\n  diplomes$!: Observable<Diplome[]>;\n\n  constructor(private formBuilder: FormBuilder,\n              private adminService: AdminService,\n              private appRout : Router){}\n\n\n  ngOnInit(): void {\n    this.newFormation = this.formBuilder.group({\n      id_form: [null],\n      nom_f: [null],\n      admission_diplome: [null],\n      condition_diplome: [null],\n      diplom_id: [null, [Validators.required]],\n      ecole_id: [null, [Validators.required]],\n      date_debut_f: [null],\n      duree_f: [null],\n      cout_f: [null],\n      programme_f: [null],\n      descriptif_f: [null],\n    })\n\n    this.adminService.getDiplomeFromServer();\n    this.adminService.getEcoleFromServer();\n    this.diplomes$ = this.adminService.diplomes$;\n    this.ecole$ = this.adminService.ecoles$.pipe(\n      map(data => data.map(data => ({\n        ...data,\n        displayName : data.sigle_e+' || '+data.nom_e\n      })))\n    ) ;\n  }\n\n\n  \n\n  onSubmitForm(){\n    if (this.newFormation.invalid) {\n      return;\n    }\n    this.adminService.addNewFormation(this.newFormation.value).pipe(take(1)).subscribe();\n    this.appRout.navigateByUrl('admin/adminStart');\n  }\n\n  ngOnDestroy() {\n   // this.adminService.addNewFormation(this.newFormation.value).unsubscribe(); // Unsubscribe Observable 1\n}\n  onGoBack(){\n    this.appRout.navigateByUrl('/admin/adminStart')\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { tap } from 'rxjs';\nimport { AdminService } from '../../services/admin.service';\n\n@Component({\n  selector: 'app-new-univ',\n  templateUrl: './new-univ.component.html',\n  styleUrls: ['./new-univ.component.scss']\n})\nexport class NewUnivComponent implements OnInit{\n  \n  newUniv!: FormGroup;\n\n  constructor(private formBuilder: FormBuilder,\n              private adminService: AdminService,\n              private appRout : Router){}\n  \n  ngOnInit(): void {\n    this.newUniv = this.formBuilder.group({\n      nom_univ: [null],\n      sigle_univ: [null],\n      type_univ: [null],\n      ville_univ: [null],\n      tel_univ: [null],\n      email_univ: [null],\n      siteweb_univ: [null],\n      recteur_univ: [null],\n      mot_du_recteur: [null],\n      descriptif_univ: [null],\n    })\n  }\n\n  onSubmitForm() {\n   // console.log(this.newUniv.value);\n    this.adminService.addNewUniv(this.newUniv.value).subscribe();\n    this.appRout.navigateByUrl('admin/adminStart');\n}\n\n}\n","<div class=\"form-card\">\n    <form [formGroup]=\"newUniv\">   \n        <div class=\"form-group\">\n            <label for=\"nom_univ\">Nom</label>\n            <input id=\"nom_univ\" type=\"text\"  formControlName=\"nom_univ\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"sigle_univ\">Sigle</label>\n            <input id=\"sigle_univ\" type=\"text\" formControlName=\"sigle_univ\" rows=\"4\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"type_univ\">Type</label>\n            <input id=\"type_univ\" type=\"text\" formControlName=\"type_univ\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"ville_univ\">Ville</label>\n            <input id=\"ville_univ\" type=\"text\" formControlName=\"ville_univ\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"tel_univ\">Tel</label>\n            <input id=\"tel_univ\" type=\"text\" formControlName=\"tel_univ\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"email_univ\">Email</label>\n            <input id=\"email_univ\" type=\"text\" formControlName=\"email_univ\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"siteweb_univ\">Site Web</label>\n            <input id=\"siteweb_univ\" type=\"text\" formControlName=\"siteweb_univ\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"recteur_univ\">Recteur</label>\n            <input id=\"recteur_univ\" type=\"text\" formControlName=\"recteur_univ\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"mot_du_recteur\">Mot du Recteur</label>\n            <p-editor formControlName=\"mot_du_recteur\" [style]=\"{'height':'320px'}\"></p-editor>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"descriptif_univ\">Descriptif</label>\n            <p-editor formControlName=\"descriptif_univ\" [style]=\"{'height':'320px'}\"></p-editor>\n        </div>\n        <div class=\"action-buttons\">\n            <button type=\"submit\" (click)=\"onSubmitForm()\">Enregistrer</button>\n        </div>\n    </form>\n</div>","<mat-card>\n    <ng-container *ngIf=\"campus$ | async as campuss\">\n      <div class=\"employee-info\">\n        <h1>{{ campus.id_camp }} </h1>\n        <h2 [innerHTML]=\"campus.nom_camp\"></h2>\n        <h3> <strong>Ville :</strong>  {{ campus.ville_cam }}</h3>\n        <h3><strong>Principal : </strong>{{ campus.principal_camp }}</h3>\n        <h3><strong>Descriptif :</strong> </h3> <span [innerHTML]=\"campus.descriptif_camp\"></span>\n        <h3><strong>Longitude :</strong> {{ campus.lon_camp }}</h3>\n        <h3><strong>Latitude :</strong> {{ campus.lat_camp }}</h3>\n      </div>\n    </ng-container>\n    <mat-card-actions>\n      <mat-spinner *ngIf=\"loading$ | async; else buttons\"></mat-spinner>\n      <ng-template #buttons>\n        <div class=\"action-buttons\">\n          <button mat-flat-button color=\"accent\" (click)=\"onModif()\">MODIFIER</button>\n          <button mat-flat-button color=\"warn\" (click)=\"onDelet()\">SUPRIMER</button>\n          <button mat-flat-button color=\"primary\" (click)=\"onGoBack()\">RETOUR</button>\n        </div>\n      </ng-template>\n    </mat-card-actions>\n  </mat-card>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable, switchMap, tap } from 'rxjs';\r\nimport { Campus } from '../../models/campus.mode';\r\nimport { AdminService } from '../../services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-single-campus',\r\n  templateUrl: './single-campus.component.html',\r\n  styleUrls: ['./single-campus.component.scss' ]\r\n})\r\nexport class SingleCampusComponent implements OnInit {\r\n\r\n  loading$!: Observable<boolean>;\r\n  campus$!: Observable<Campus>;\r\n  campus!: Campus;\r\n\r\n  constructor(private adminService : AdminService,\r\n              private route: ActivatedRoute,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initObservables ()\r\n  }\r\n\r\n  initObservables(){\r\n    this.loading$ = this.adminService.loading$;\r\n    this.campus$ = this.route.params.pipe(\r\n      switchMap(params => this.adminService.getCampusById(+params['id'])),\r\n      tap(campus=>this.campus = campus)\r\n    );\r\n    console.log(this.campus)\r\n  }\r\n\r\n  onModif(){\r\n    this.router.navigateByUrl('admin/modif-campus/'+ this.campus.id_camp.toString())    \r\n  }\r\n\r\n  onDelet(){\r\n    this.adminService.deletCampusById(this.campus.id_camp).subscribe();\r\n    this.router.navigateByUrl('/admin/adminStart')\r\n  }\r\n\r\n  onGoBack(){\r\n    this.router.navigateByUrl('/admin/adminStart')\r\n  }\r\n}\r\n","<mat-card>\n    <ng-container *ngIf=\"ecole$ | async as ecole\">\n      <div class=\"employee-info\">\n        <h1>{{ ecole.id_ecol }} //  {{ ecole.sigle_e }}</h1>\n        <h2 [innerHTML]=\"ecole.nom_e\"></h2>\n        <h3><strong>Sigle :</strong>  {{ ecole.sigle_e }}</h3>\n        <h3> <strong>Logo :</strong>  {{ ecole.logo_e }}</h3>\n        <h3><strong>Niveau : </strong>{{ ecole.niveau_e }}</h3>\n        <h3><strong>Langue :</strong> {{ ecole.langue_e }}</h3>\n        <h3><strong>Date de création :</strong> {{ ecole.date_creation }}</h3>\n        <h3><strong>Téléphone :</strong> {{ ecole.tel_1_e }}</h3>\n        <h3><strong>Email :</strong> {{ ecole.email_e }}</h3>\n        <h3><strong>BP :</strong> {{ ecole.bp_e }}</h3>\n        <h3><strong>Directeur :</strong> {{ ecole.directeur_e }}</h3>\n        <h3><strong>Photo Directeur :</strong> {{ ecole.photo_directeur }}</h3>\n        <h3><strong>Mot du Directeur :</strong></h3> <span [innerHTML]=\"ecole.mot_directeur\"></span>\n        <h3><strong>Statistiques :</strong> {{ ecole.stat_e }}</h3>\n        <h3><strong>Présentation de {{ecole.sigle_e}} :</strong></h3><span [innerHTML]=\"ecole.descriptif_e\"></span> <br>\n        <h3><strong>{{ecole.sigle_e}} en Image :</strong> {{ ecole.image_e }}</h3>\n        <h3><strong>Université :</strong> {{ universite }}</h3> \n      </div>\n    </ng-container>\n    <mat-card-actions>\n      <mat-spinner *ngIf=\"loading$ | async; else buttons\"></mat-spinner>\n      <ng-template #buttons>\n        <div class=\"action-buttons\">\n          <button mat-flat-button color=\"accent\" (click)=\"onModif()\">MODIFIER</button>\n          <button mat-flat-button color=\"warn\" (click)=\"onDelet()\">SUPRIMER</button>\n          <button mat-flat-button color=\"primary\" (click)=\"onGoBack()\">RETOUR</button>\n        </div>\n      </ng-template>\n    </mat-card-actions>\n  </mat-card>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { concatMap, delay, map, Observable, switchMap, tap } from 'rxjs';\r\nimport { Ecole } from '../../models/ecole.model';\r\nimport { AdminService } from '../../services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-single-ecole',\r\n  templateUrl: './single-ecole.component.html',\r\n  styleUrls: ['./single-ecole.component.scss' ]\r\n})\r\nexport class SingleEcoleComponent implements OnInit {\r\n\r\n  loading$!: Observable<boolean>;\r\n  ecole$!: Observable<Ecole>;\r\n  ecole!: Ecole;\r\n  universite!:string;\r\n\r\n  constructor(private adminService : AdminService,\r\n              private route: ActivatedRoute,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initObservables ()\r\n    \r\n  }\r\n\r\n  initObservables(){\r\n    this.loading$ = this.adminService.loading$;\r\n    this.ecole$ = this.route.params.pipe(\r\n      switchMap(params => this.adminService.getEcoleById(+params['id'])),\r\n      tap(ecol=>this.ecole = ecol)\r\n    );\r\n    this.adminService.universite$.pipe(\r\n      delay(1000),\r\n      map(univs => univs.filter(univ => univ.id_univ === this.ecole.universites_id)[0]),\r\n      tap(univ =>{ \r\n        this.universite = univ.nom_univ;\r\n        console.log(this.universite)\r\n      })\r\n    ).subscribe()\r\n  }\r\n\r\n  onModif(){\r\n    this.router.navigateByUrl('admin/modif-ecole/'+ this.ecole.id_ecol.toString())    \r\n  }\r\n\r\n  onDelet(){\r\n    this.adminService.deletEcoleById(this.ecole.id_ecol).subscribe();\r\n    this.router.navigateByUrl('/admin/adminStart')\r\n  }\r\n\r\n  onGoBack(){\r\n    this.router.navigateByUrl('/admin/adminStart')\r\n  }\r\n}\r\n","<mat-card>\n    <ng-container *ngIf=\"formation$ | async as data\">\n      <div class=\"employee-info\">\n        <h1>{{ formation.id_form }} </h1>\n        <h2 [innerHTML]=\"formation.nom_f\"></h2>\n        <h3><strong>Catégorie :</strong>  {{ data.nom_cat }}</h3>\n        <h3><strong>Dipmome :</strong>  {{ data.nom_dip }}</h3>\n        <h3> <strong>Ville :</strong>  {{ formation.ville_cam }}</h3>\n        <h3> <strong>Cout :</strong>  {{ formation.cout_f }} FCFA</h3>\n        <h3> <strong>Début de Formation :</strong>  {{ formation.date_debut_f }}</h3>\n        <h3> <strong>Durée :</strong>  {{ formation.duree_f }} Mois</h3>\n        <h3><strong>Programme :</strong></h3> <span [innerHTML]=\"formation.programme_f\"></span>\n        <h3><strong>Descriptif :</strong> </h3> <span [innerHTML]=\"formation.descriptif_f\"></span>\n        <h3><strong>Université :</strong> {{ formation.nom_univ }}</h3> \n        <h3><strong>Ecole : </strong>{{ formation.nom_e }}</h3>\n        <h3><strong>Campus : </strong>{{ formation.nom_camp }}</h3>\n      </div>\n    </ng-container>\n    <mat-card-actions>\n      <mat-spinner *ngIf=\"loading$ | async; else buttons\"></mat-spinner>\n      <ng-template #buttons>\n        <div class=\"action-buttons\">\n          <button mat-flat-button color=\"accent\" (click)=\"onModif()\">MODIFIER</button>\n          <button mat-flat-button color=\"warn\" (click)=\"onDelet()\">SUPRIMER</button>\n          <button mat-flat-button color=\"primary\" (click)=\"onGoBack()\">RETOUR</button>\n        </div>\n      </ng-template>\n    </mat-card-actions>\n  </mat-card>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable, switchMap, tap } from 'rxjs';\r\nimport { Formation } from '../../models/formation.model';\r\nimport { AdminService } from '../../services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-single-formation',\r\n  templateUrl: './single-formation.component.html',\r\n  styleUrls: ['./single-formation.component.scss' ]\r\n})\r\nexport class SingleFormationComponent implements OnInit{\r\n\r\n  loading$!: Observable<boolean>;\r\n  formation$!: Observable<Formation>;\r\n  formation!: Formation;\r\n  universite!: string;\r\n  campus!: string;\r\n\r\n  constructor(private adminService : AdminService,\r\n              private route: ActivatedRoute,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initObservables ()\r\n  }\r\n\r\n  initObservables(){\r\n    this.loading$ = this.adminService.loading$;\r\n    this.formation$ = this.route.params.pipe(\r\n      switchMap(params => this.adminService.getFormationById(+params['id'])),\r\n      tap(formation => this.formation = formation)\r\n    );\r\n    console.log(this.formation);\r\n  }\r\n\r\n  onModif(){\r\n    this.router.navigateByUrl('admin/modif-formation/'+ this.formation.id_form.toString())    \r\n  }\r\n\r\n  onDelet(){\r\n    this.adminService.deletFormationById(this.formation.id_form).subscribe();\r\n    this.router.navigateByUrl('/admin/adminStart')\r\n  }\r\n\r\n  onGoBack(){\r\n    this.router.navigateByUrl('/admin/adminStart')\r\n  }\r\n\r\n}\r\n\r\n\r\n","<mat-card>\n    <ng-container *ngIf=\"universite$ | async as universite\">\n      <div class=\"employee-info\">\n        <h1>{{ universite.id_univ }} //  {{ universite.sigle_univ }}</h1>\n        <h2 [innerHTML]=\"universite.nom_univ\"></h2>\n        <h3><strong>Type :</strong>  {{ universite.type_univ }}</h3>\n        <h3> <strong>Ville :</strong>  {{ universite.ville_univ }}</h3>\n        <h3><strong>Tel : </strong>{{ universite.tel_univ }}</h3>\n        <h3><strong>Email :</strong> {{ universite.email_univ }}</h3>\n        <h3><strong>Site Web :</strong> {{ universite.siteweb_univ }}</h3>\n        <h3><strong>Recteur :</strong> {{ universite.recteur_univ }}</h3>\n        <h3><strong>Mot du Recteur :</strong> </h3> <span [innerHTML]=\"universite.mot_du_recteur\"></span> <br>\n        <h3><strong>Descriptif :</strong> </h3> <span [innerHTML]=\"universite.descriptif_univ\"></span>\n      </div>\n    </ng-container>\n    <mat-card-actions>\n      <mat-spinner *ngIf=\"loading$ | async; else buttons\"></mat-spinner>\n      <ng-template #buttons>\n        <div class=\"action-buttons\">\n          <button mat-flat-button color=\"accent\" (click)=\"onModif()\">MODIFIER</button>\n          <button mat-flat-button color=\"warn\" (click)=\"onDelet()\">SUPRIMER</button>\n          <button mat-flat-button color=\"primary\" (click)=\"onGoBack()\">RETOUR</button>\n        </div>\n      </ng-template>\n    </mat-card-actions>\n  </mat-card>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable, switchMap, tap } from 'rxjs';\r\nimport { Universite } from '../../models/univ.model';\r\nimport { AdminService } from '../../services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-single-univ',\r\n  templateUrl: './single-univ.component.html',\r\n  styleUrls: ['./single-univ.component.scss']\r\n})\r\nexport class SingleUnivComponent implements OnInit {\r\n\r\n  loading$!: Observable<boolean>;\r\n  universite$!: Observable<Universite>;\r\n  universite!: Universite;\r\n\r\n  constructor(private adminService : AdminService,\r\n              private route: ActivatedRoute,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initObservables ()\r\n  }\r\n\r\n  initObservables(){\r\n    this.loading$ = this.adminService.loading$;\r\n    this.universite$ = this.route.params.pipe(\r\n      switchMap(params => this.adminService.getUniversiteById(+params['id'])),\r\n      tap(univ=>this.universite =univ)\r\n    );\r\n  }\r\n\r\n  onModif(){\r\n    this.router.navigateByUrl('admin/modif-univ/'+ this.universite.id_univ.toString())    \r\n  }\r\n\r\n  onDelet(){\r\n    this.adminService.deletUnivById(this.universite.id_univ).subscribe();\r\n    this.router.navigateByUrl('/admin/adminStart')\r\n  }\r\n\r\n  onGoBack(){\r\n    this.router.navigateByUrl('/admin/adminStart')\r\n  }\r\n\r\n}\r\n","<mat-card>\n    <ng-container *ngIf=\"diplome$ | async as diplome\">\n      <div class=\"employee-info\">\n        <h1>{{ diplome.id_dip }} </h1>\n        <h2 [innerHTML]=\"diplome.nom_dip\"></h2>\n        <h3><strong>Categorie :</strong>  {{ diplome.nom_cat }}</h3>\n        <h3> <strong>Groupe :</strong>  {{ diplome.groupe }}</h3>\n        <h3><strong>Descriptif : </strong></h3><span [innerHTML]=\"diplome.descriptif_dip\"></span>\n        <h3><strong>Niveau :</strong> {{ diplome.niveau }}</h3>\n      </div>\n    </ng-container>\n    <mat-card-actions>\n      <!-- <mat-spinner *ngIf=\"loading$ | async; else buttons\"></mat-spinner> -->\n      <div class=\"action-buttons\">\n        <button mat-flat-button color=\"accent\" (click)=\"onModif()\">MODIFIER</button>\n        <button mat-flat-button color=\"warn\" (click)=\"onDelet()\">SUPRIMER</button>\n        <button mat-flat-button color=\"primary\" (click)=\"onGoBack()\">RETOUR</button>\n      </div>\n      <ng-template #buttons>\n      </ng-template>\n    </mat-card-actions>\n  </mat-card>","import { Component, OnInit } from '@angular/core';\r\nimport { AdminService } from '../../services/admin.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable, map, switchMap, tap } from 'rxjs';\r\nimport { Diplome } from '../../models/diplome.model';\r\n\r\n@Component({\r\n  selector: 'app-single-diplome',\r\n  templateUrl: './single-diplome.component.html',\r\n  styleUrls: ['./single-diplome.component.scss' ]\r\n})\r\nexport class SingleDiplomeComponent implements OnInit {\r\n\r\n  diplome$!: Observable<Diplome>;\r\n  diplome !: Diplome;\r\n\r\n  constructor(private adminService : AdminService,\r\n    private route: ActivatedRoute,\r\n    private router: Router) { }\r\n\r\n    ngOnInit(): void {\r\n      this.initObservables ()\r\n      \r\n    }\r\n  \r\n    initObservables(){\r\n      //this.loading$ = this.adminService.loading$;\r\n      this.diplome$ = this.route.params.pipe(\r\n        switchMap(params => this.adminService.getDiplomeById(+params['id'])),\r\n        tap(diplome=>this.diplome = diplome)\r\n      );\r\n     // this.adminService.universite$.pipe(\r\n     //   //delay(1000),\r\n     //   map(univs => univs.filter(univ => univ.id_univ === this.ecole.universites_id)[0]),\r\n     //   tap(univ =>{ \r\n     //     this.universite = univ.nom_univ;\r\n     //     console.log(this.universite)\r\n     //   })\r\n     // ).subscribe()\r\n    }\r\n  \r\n    onModif(){\r\n      this.router.navigateByUrl('admin/modif-diplome/'+ this.diplome.id_dip.toString())    \r\n    }\r\n  \r\n    onDelet(){\r\n      this.adminService.deletDiplomeById(this.diplome.id_dip).subscribe();\r\n      this.router.navigateByUrl('/admin/adminStart')\r\n    }\r\n  \r\n    onGoBack(){\r\n      this.router.navigateByUrl('/admin/adminStart')\r\n    }\r\n\r\n}\r\n","<div class=\"form-card\">\n    <form [formGroup]=\"modifDiplome\">   \n        <ng-container *ngIf=\"diplome$ | async as diplome\">   \n            <div class=\"form-group\">\n                <label for=\"nom_dip\">Nom du diplome</label>\n                <input id=\"nom_dip\" type=\"text\" formControlName=\"nom_dip\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"\">Catégorie</label>\n                <p-dropdown id=\"categorie_id\" *ngIf=\"categorie$ | async as categories\" [options]=\"categories\" placeholder=\"select Catégorie\" optionLabel=\"nom_cat\" optionValue=\"id_cat\" formControlName=\"categorie_id\"></p-dropdown>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"niveau\">Niveau</label>\n                <input id=\"niveau\" type=\"text\" formControlName=\"niveau\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"\">Domaine de formation</label>\n                <p-dropdown id=\"domaine_id\" *ngIf=\"domaine$ | async as domaine\" [options]=\"domaine\" optionLabel=\"nom_dom\" placeholder=\"Quel Domaine ?\" optionValue=\"id_dom\"  formControlName=\"domaine_id\">\n    \n                </p-dropdown>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"\">Autre Domaine</label>\n                <p-dropdown id=\"domaine_id2\" *ngIf=\"domaine$ | async as domaine\" [options]=\"domaine\" optionLabel=\"nom_dom\" placeholder=\"Quel Domaine ?\" optionValue=\"id_dom\"  formControlName=\"domaine_id2\">\n    \n                </p-dropdown>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"\">Autre Domaine</label>\n                <p-dropdown id=\"domaine_id3\" *ngIf=\"domaine$ | async as domaine\" [options]=\"domaine\" optionLabel=\"nom_dom\" placeholder=\"Quel Domaine ?\" optionValue=\"id_dom\"  formControlName=\"domaine_id3\">\n    \n                </p-dropdown>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"descriptif_dip\">Descriptif</label>\n                <p-editor formControlName=\"descriptif_dip\" [style]=\"{'height':'320px'}\"></p-editor>\n                <!-- <p>Value: {{campersite.descriptif_camp||'empty'}}</p> -->\n                <!-- <textarea id=\"descriptif_camp\" type=\"text\" [placeholder]=\"campersite.descriptif_camp\" formControlName=\"descriptif_camp\"></textarea> -->\n            </div>\n            <div class=\"action-buttons\">\n                <p-button type=\"submit\" styleClass=\"p-button-success\" (click)=\"onSubmitForm()\">Enregistrer</p-button>\n                <p-button styleClass=\"p-button-danger\" (click)=\"onReturn()\">Annuler</p-button>\n            </div>\n        </ng-container>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Observable, switchMap, take, tap } from 'rxjs';\r\nimport { Diplome } from '../../models/diplome.model';\r\nimport { AdminService } from '../../services/admin.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Categ } from '../../models/categ.model';\r\nimport { Domaine } from '../../models/domaine.model';\r\n\r\n@Component({\r\n  selector: 'app-modif-diplome',\r\n  templateUrl: './modif-diplome.component.html',\r\n  styleUrls: ['./modif-diplome.component.scss' ]\r\n})\r\nexport class ModifDiplomeComponent implements OnInit{\r\n\r\n  modifDiplome!: FormGroup;\r\n  diplome$!: Observable<Diplome>;\r\n  dipPrev!: Diplome;\r\n  categorie$!: Observable<Categ[]>;\r\n  domaine$!: Observable<Domaine[]>;\r\n\r\n  constructor ( private adminService : AdminService,\r\n                private route: ActivatedRoute,\r\n                private formBuilder: FormBuilder,\r\n                private appRout: Router) {}\r\n\r\n  ngOnInit(): void {\r\n    this.diplome$ = this.route.params.pipe(\r\n      switchMap(params => this.adminService.getDiplomeById(+params['id'])),\r\n      take(1),\r\n      tap(val => {\r\n        this.modifDiplome.patchValue({\r\n            id_dip: val.id_dip,\r\n            nom_dip: val.nom_dip,\r\n            descriptif_dip: val.descriptif_dip,\r\n            niveau: val.niveau,\r\n            categorie_id: val.categorie_id\r\n          });\r\n        console.log(val.nom_dip)\r\n      })\r\n    );\r\n\r\n    this.modifDiplome = this.formBuilder.group({\r\n      id_dip: [null],\r\n      nom_dip: [null],\r\n      descriptif_dip: [null],\r\n      niveau: [null],\r\n      domaine_id: [null, [Validators.required]],\r\n      domaine_id2: [null],\r\n      domaine_id3: [null],\r\n      categorie_id: [null]\r\n    });\r\n\r\n    this.adminService.getDomaineFromServer();\r\n    this.domaine$ = this.adminService.domaine$;\r\n    this.adminService.getCategFromServer();\r\n    this.categorie$ = this.adminService.categ$;\r\n  };\r\n\r\n  onSubmitForm(){\r\n    this.adminService.editDiplome(this.modifDiplome.value).subscribe();\r\n    console.log(this.modifDiplome.value)\r\n    this.appRout.navigateByUrl('admin/adminStart');\r\n  }\r\n\r\n  onReturn(){\r\n    this.appRout.navigateByUrl('admin/adminStart');\r\n  }\r\n}\r\n","<div class=\"form-card\">\n    <form [formGroup]=\"newDiplome\">   \n        <div class=\"form-group\">\n            <label for=\"nom_dip\">Nom du diplome</label>\n            <input id=\"nom_dip\" type=\"text\" formControlName=\"nom_dip\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"\">Catégorie</label>\n            <p-dropdown id=\"categorie_id\" *ngIf=\"categorie$ | async as categories\" [options]=\"categories\" placeholder=\"select Catégorie\" optionLabel=\"nom_cat\" optionValue=\"id_cat\" formControlName=\"categorie_id\"></p-dropdown>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"niveau\">Niveau</label>\n            <input id=\"niveau\" type=\"text\" formControlName=\"niveau\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"\">Domaine de formation</label>\n            <p-dropdown id=\"domaine_id\" *ngIf=\"domaine$ | async as domaine\" [options]=\"domaine\" optionLabel=\"nom_dom\" placeholder=\"Quel Domaine ?\" optionValue=\"id_dom\"  formControlName=\"domaine_id\">\n\n            </p-dropdown>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"\">Autre Domaine</label>\n            <p-dropdown id=\"domaine_id2\" *ngIf=\"domaine$ | async as domaine\" [options]=\"domaine\" optionLabel=\"nom_dom\" placeholder=\"Quel Domaine ?\" optionValue=\"id_dom\"  formControlName=\"domaine_id2\">\n\n            </p-dropdown>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"\">Autre Domaine</label>\n            <p-dropdown id=\"domaine_id3\" *ngIf=\"domaine$ | async as domaine\" [options]=\"domaine\" optionLabel=\"nom_dom\" placeholder=\"Quel Domaine ?\" optionValue=\"id_dom\"  formControlName=\"domaine_id3\">\n\n            </p-dropdown>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"descriptif_dip\">Descriptif</label>\n            <p-editor formControlName=\"descriptif_dip\" [style]=\"{'height':'320px'}\"></p-editor>\n            <!-- <p>Value: {{campersite.descriptif_camp||'empty'}}</p> -->\n            <!-- <textarea id=\"descriptif_camp\" type=\"text\" [placeholder]=\"campersite.descriptif_camp\" formControlName=\"descriptif_camp\"></textarea> -->\n        </div>\n        <div class=\"action-buttons\">\n            <p-button type=\"submit\" styleClass=\"p-button-success\" (click)=\"onSubmitForm()\">Enregistrer</p-button>\n            <p-button styleClass=\"p-button-danger\" (click)=\"onReturn()\">Annuler</p-button>\n        </div>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Categ } from '../../models/categ.model';\r\nimport { Observable } from 'rxjs';\r\nimport { AdminService } from '../../services/admin.service';\r\nimport { Router } from '@angular/router';\r\nimport { Domaine } from '../../models/domaine.model';\r\n\r\n@Component({\r\n  selector: 'app-new-diplome',\r\n  templateUrl: './new-diplome.component.html',\r\n  styleUrls: ['./new-diplome.component.scss' ]\r\n})\r\nexport class NewDiplomeComponent implements OnInit {\r\n\r\n  newDiplome!: FormGroup;\r\n  categories!: Categ[];\r\n  selectedCateg!: Categ;\r\n  categorie$!: Observable <Categ[]>;\r\n  domaine$!: Observable<Domaine[]>;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private adminService: AdminService,\r\n              private appRout : Router){}\r\n\r\n  ngOnInit(): void {\r\n    this.newDiplome = this.formBuilder.group({\r\n      id_dip: [null],\r\n      nom_dip: [null],\r\n      descriptif_dip: [null],\r\n      niveau: [null],\r\n      domaine_id: [null, [Validators.required]],\r\n      domaine_id2: [null],\r\n      domaine_id3: [null],\r\n      categorie_id: [null]\r\n    });\r\n\r\n    this.adminService.getDomaineFromServer();\r\n    this.domaine$ = this.adminService.domaine$;\r\n    this.adminService.getCategFromServer();\r\n    this.categorie$ = this.adminService.categ$;\r\n  };\r\n\r\n  onSubmitForm(){\r\n    if (this.newDiplome.invalid) {\r\n      return;\r\n    }\r\n    this.adminService.addNewDiplome(this.newDiplome.value).subscribe();\r\n    this.appRout.navigateByUrl('admin/adminStart');\r\n  }\r\n\r\n  onReturn(){\r\n    this.appRout.navigateByUrl('admin/adminStart');\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AdminStartComponent } from './components/admin-start/admin-start.component';\nimport { FormationListComponent } from './components/formation-list/formation-list.component';\nimport { LoginComponent } from '../login/login.component';\nimport { ModifCampusComponent } from './components/modif-campus/modif-campus.component';\nimport { ModifEcoleComponent } from './components/modif-ecole/modif-ecole.component';\nimport { ModifFormationComponent } from './components/modif-formation/modif-formation.component';\nimport { ModifUnivComponent } from './components/modif-univ/modif-univ.component';\nimport { NewCampusComponent } from './components/new-campus/new-campus.component';\nimport { NewEcoleComponent } from './components/new-ecole/new-ecole.component';\nimport { NewFormationComponent } from './components/new-formation/new-formation.component';\nimport { NewUnivComponent } from './components/new-univ/new-univ.component';\nimport { SingleCampusComponent } from './components/single-campus/single-campus.component';\nimport { SingleEcoleComponent } from './components/single-ecole/single-ecole.component';\nimport { SingleFormationComponent } from './components/single-formation/single-formation.component';\nimport { SingleUnivComponent } from './components/single-univ/single-univ.component';\nimport { SingleDiplomeComponent } from './components/single-diplome/single-diplome.component';\nimport { ModifDiplomeComponent } from './components/modif-diplome/modif-diplome.component';\nimport { NewDiplomeComponent } from './components/new-diplome/new-diplome.component';\n\nconst routes: Routes = [\n // { path: '', component: LoginComponent},\n  { path: '', component: AdminStartComponent},\n // { path: 'formations', component: FormationListComponent},\n  { path: 'adminStart', component: AdminStartComponent},\n  { path: 'new-campus', component: NewCampusComponent},\n  { path: 'new-ecole', component: NewEcoleComponent},\n  { path: 'new-diplome', component: NewDiplomeComponent},\n  { path: 'new-formation', component: NewFormationComponent},\n  { path: 'new-universite', component: NewUnivComponent},\n  { path: 'campus/:id', component: SingleCampusComponent },\n  { path: 'diplome/:id', component: SingleDiplomeComponent },\n  { path: 'ecole/:id', component: SingleEcoleComponent },\n  { path: 'universite/:id', component: SingleUnivComponent },\n  { path: 'modif-univ/:id', component: ModifUnivComponent },\n  { path: 'modif-diplome/:id', component: ModifDiplomeComponent },\n  { path: 'modif-ecole/:id', component: ModifEcoleComponent },\n  { path: 'modif-campus/:id', component: ModifCampusComponent },\n  { path: 'modif-formation/:id', component: ModifFormationComponent },\n  { path: 'formation/:id', component: SingleFormationComponent },\n  { path:'**', redirectTo:'adminStart'}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdminRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { LoginComponent } from '../login/login.component';\nimport { FormationListComponent } from './components/formation-list/formation-list.component';\nimport { SingleFormationComponent } from './components/single-formation/single-formation.component';\nimport { ModifFormationComponent } from './components/modif-formation/modif-formation.component';\nimport { NewFormationComponent } from './components/new-formation/new-formation.component';\n//import { AuthenService } from './services/auth.service';\nimport { SharedModule } from '../shared/shared.module';\nimport { AdminService } from './services/admin.service';\nimport { AdminStartComponent } from './components/admin-start/admin-start.component';\nimport { UnivListComponent } from './components/univ-list/univ-list.component';\nimport { CampusListComponent } from './components/campus-list/campus-list.component';\nimport { EcoleListComponent } from './components/ecole-list/ecole-list.component';\nimport { SingleUnivComponent } from './components/single-univ/single-univ.component';\nimport { SingleEcoleComponent } from './components/single-ecole/single-ecole.component';\nimport { SingleCampusComponent } from './components/single-campus/single-campus.component';\nimport { ModifUnivComponent } from './components/modif-univ/modif-univ.component';\nimport { NewUnivComponent } from './components/new-univ/new-univ.component';\nimport { NewEcoleComponent } from './components/new-ecole/new-ecole.component';\nimport { NewCampusComponent } from './components/new-campus/new-campus.component';\nimport { ModifCampusComponent } from './components/modif-campus/modif-campus.component';\nimport { ModifEcoleComponent } from './components/modif-ecole/modif-ecole.component';\nimport { DiplomeListComponent } from './components/diplome-list/diplome-list.component';\nimport { SingleDiplomeComponent } from './components/single-diplome/single-diplome.component';\nimport { ModifDiplomeComponent } from './components/modif-diplome/modif-diplome.component';\nimport { NewDiplomeComponent } from './components/new-diplome/new-diplome.component';\n\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    FormationListComponent,\n    SingleFormationComponent,\n    ModifFormationComponent,\n    NewFormationComponent,\n    AdminStartComponent,\n    UnivListComponent,\n    CampusListComponent,\n    EcoleListComponent,\n    SingleUnivComponent,\n    SingleEcoleComponent,\n    SingleCampusComponent,\n    ModifUnivComponent,\n    NewUnivComponent,\n    NewEcoleComponent,\n    NewCampusComponent,\n    ModifCampusComponent,\n    ModifEcoleComponent,\n    DiplomeListComponent,\n    SingleDiplomeComponent,\n    ModifDiplomeComponent,\n    NewDiplomeComponent\n  ],\n  imports: [\n    CommonModule,\n    AdminRoutingModule,\n    SharedModule,\n  ],\n  providers:[\n //   AuthenService,\n    AdminService,\n   // httpInterceptorProviders\n  ]\n})\nexport class AdminModule { }\n"],"x_google_ignoreList":[]}