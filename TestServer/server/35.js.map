{"version":3,"file":"35.js","mappings":"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","sources":["./node_modules/xhr2/lib/xhr2.js"],"sourcesContent":["// Generated by CoffeeScript 2.5.1\n(function() {\n  // This file's name is set up in such a way that it will always show up first in\n  // the list of files given to coffee --join, so that the other files can assume\n  // that XMLHttpRequestEventTarget was already defined.\n\n  // The DOM EventTarget subclass used by XMLHttpRequest.\n\n  // @see http://xhr.spec.whatwg.org/#interface-xmlhttprequest\n  var InvalidStateError, NetworkError, ProgressEvent, SecurityError, SyntaxError, XMLHttpRequest, XMLHttpRequestEventTarget, XMLHttpRequestUpload, http, https, os, url;\n\n  XMLHttpRequestEventTarget = (function() {\n    class XMLHttpRequestEventTarget {\n      // @private\n      // This is an abstract class and should not be instantiated directly.\n      constructor() {\n        this.onloadstart = null;\n        this.onprogress = null;\n        this.onabort = null;\n        this.onerror = null;\n        this.onload = null;\n        this.ontimeout = null;\n        this.onloadend = null;\n        this._listeners = {};\n      }\n\n      // Adds a new-style listener for one of the XHR events.\n\n      // @see http://www.w3.org/TR/XMLHttpRequest/#events\n\n      // @param {String} eventType an XHR event type, such as 'readystatechange'\n      // @param {function(ProgressEvent)} listener function that will be called when\n      //   the event fires\n      // @return {undefined} undefined\n      addEventListener(eventType, listener) {\n        var base;\n        eventType = eventType.toLowerCase();\n        (base = this._listeners)[eventType] || (base[eventType] = []);\n        this._listeners[eventType].push(listener);\n        return void 0;\n      }\n\n      // Removes an event listener added by calling addEventListener.\n\n      // @param {String} eventType an XHR event type, such as 'readystatechange'\n      // @param {function(ProgressEvent)} listener the value passed in a previous\n      //   call to addEventListener.\n      // @return {undefined} undefined\n      removeEventListener(eventType, listener) {\n        var index;\n        eventType = eventType.toLowerCase();\n        if (this._listeners[eventType]) {\n          index = this._listeners[eventType].indexOf(listener);\n          if (index !== -1) {\n            this._listeners[eventType].splice(index, 1);\n          }\n        }\n        return void 0;\n      }\n\n      // Calls all the listeners for an event.\n\n      // @param {ProgressEvent} event the event to be dispatched\n      // @return {undefined} undefined\n      dispatchEvent(event) {\n        var eventType, j, len, listener, listeners;\n        event.currentTarget = event.target = this;\n        eventType = event.type;\n        if (listeners = this._listeners[eventType]) {\n          for (j = 0, len = listeners.length; j < len; j++) {\n            listener = listeners[j];\n            listener.call(this, event);\n          }\n        }\n        if (listener = this[`on${eventType}`]) {\n          listener.call(this, event);\n        }\n        return void 0;\n      }\n\n    };\n\n    // @property {function(ProgressEvent)} DOM level 0-style handler\n    //   for the 'loadstart' event\n    XMLHttpRequestEventTarget.prototype.onloadstart = null;\n\n    // @property {function(ProgressEvent)} DOM level 0-style handler\n    //   for the 'progress' event\n    XMLHttpRequestEventTarget.prototype.onprogress = null;\n\n    // @property {function(ProgressEvent)} DOM level 0-style handler\n    //   for the 'abort' event\n    XMLHttpRequestEventTarget.prototype.onabort = null;\n\n    // @property {function(ProgressEvent)} DOM level 0-style handler\n    //   for the 'error' event\n    XMLHttpRequestEventTarget.prototype.onerror = null;\n\n    // @property {function(ProgressEvent)} DOM level 0-style handler\n    //   for the 'load' event\n    XMLHttpRequestEventTarget.prototype.onload = null;\n\n    // @property {function(ProgressEvent)} DOM level 0-style handler\n    //   for the 'timeout' event\n    XMLHttpRequestEventTarget.prototype.ontimeout = null;\n\n    // @property {function(ProgressEvent)} DOM level 0-style handler\n    //   for the 'loadend' event\n    XMLHttpRequestEventTarget.prototype.onloadend = null;\n\n    return XMLHttpRequestEventTarget;\n\n  }).call(this);\n\n  // This file's name is set up in such a way that it will always show up second\n  // in the list of files given to coffee --join, so it can use the\n  // XMLHttpRequestEventTarget definition and so that the other files can assume\n  // that XMLHttpRequest was already defined.\n  http = require('http');\n\n  https = require('https');\n\n  os = require('os');\n\n  url = require('url');\n\n  XMLHttpRequest = (function() {\n    // The ECMAScript HTTP API.\n\n    // @see http://www.w3.org/TR/XMLHttpRequest/#introduction\n    class XMLHttpRequest extends XMLHttpRequestEventTarget {\n      // Creates a new request.\n\n      // @param {Object} options one or more of the options below\n      // @option options {Boolean} anon if true, the request's anonymous flag\n      //   will be set\n      // @see http://www.w3.org/TR/XMLHttpRequest/#constructors\n      // @see http://www.w3.org/TR/XMLHttpRequest/#anonymous-flag\n      constructor(options) {\n        super();\n        this.onreadystatechange = null;\n        this._anonymous = options && options.anon;\n        this.readyState = XMLHttpRequest.UNSENT;\n        this.response = null;\n        this.responseText = '';\n        this.responseType = '';\n        this.responseURL = '';\n        this.status = 0;\n        this.statusText = '';\n        this.timeout = 0;\n        this.upload = new XMLHttpRequestUpload(this);\n        this._method = null; // String\n        this._url = null; // Return value of url.parse()\n        this._sync = false;\n        this._headers = null; // Object<String, String>\n        this._loweredHeaders = null; // Object<lowercase String, String>\n        this._mimeOverride = null;\n        this._request = null; // http.ClientRequest\n        this._response = null; // http.ClientResponse\n        this._responseParts = null; // Array<Buffer, String>\n        this._responseHeaders = null; // Object<lowercase String, String>\n        this._aborting = null;\n        this._error = null;\n        this._loadedBytes = 0;\n        this._totalBytes = 0;\n        this._lengthComputable = false;\n      }\n\n      // Sets the XHR's method, URL, synchronous flag, and authentication params.\n\n      // @param {String} method the HTTP method to be used\n      // @param {String} url the URL that the request will be made to\n      // @param {?Boolean} async if false, the XHR should be processed\n      //   synchronously; true by default\n      // @param {?String} user the user credential to be used in HTTP basic\n      //   authentication\n      // @param {?String} password the password credential to be used in HTTP basic\n      //   authentication\n      // @return {undefined} undefined\n      // @throw {SecurityError} method is not one of the allowed methods\n      // @throw {SyntaxError} urlString is not a valid URL\n      // @throw {Error} the URL contains an unsupported protocol; the supported\n      //   protocols are file, http and https\n      // @see http://www.w3.org/TR/XMLHttpRequest/#the-open()-method\n      open(method, url, async, user, password) {\n        var xhrUrl;\n        method = method.toUpperCase();\n        if (method in this._restrictedMethods) {\n          throw new SecurityError(`HTTP method ${method} is not allowed in XHR`);\n        }\n        xhrUrl = this._parseUrl(url);\n        if (async === void 0) {\n          async = true;\n        }\n        switch (this.readyState) {\n          case XMLHttpRequest.UNSENT:\n          case XMLHttpRequest.OPENED:\n          case XMLHttpRequest.DONE:\n            // Nothing to do here.\n            null;\n            break;\n          case XMLHttpRequest.HEADERS_RECEIVED:\n          case XMLHttpRequest.LOADING:\n            // TODO(pwnall): terminate abort(), terminate send()\n            null;\n        }\n        this._method = method;\n        this._url = xhrUrl;\n        this._sync = !async;\n        this._headers = {};\n        this._loweredHeaders = {};\n        this._mimeOverride = null;\n        this._setReadyState(XMLHttpRequest.OPENED);\n        this._request = null;\n        this._response = null;\n        this.status = 0;\n        this.statusText = '';\n        this._responseParts = [];\n        this._responseHeaders = null;\n        this._loadedBytes = 0;\n        this._totalBytes = 0;\n        this._lengthComputable = false;\n        return void 0;\n      }\n\n      // Appends a header to the list of author request headers.\n\n      // @param {String} name the HTTP header name\n      // @param {String} value the HTTP header value\n      // @return {undefined} undefined\n      // @throw {InvalidStateError} readyState is not OPENED\n      // @throw {SyntaxError} name is not a valid HTTP header name or value is not\n      //   a valid HTTP header value\n      // @see http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader()-method\n      setRequestHeader(name, value) {\n        var loweredName;\n        if (this.readyState !== XMLHttpRequest.OPENED) {\n          throw new InvalidStateError(\"XHR readyState must be OPENED\");\n        }\n        loweredName = name.toLowerCase();\n        if (this._restrictedHeaders[loweredName] || /^sec\\-/.test(loweredName) || /^proxy-/.test(loweredName)) {\n          console.warn(`Refused to set unsafe header \\\"${name}\\\"`);\n          return void 0;\n        }\n        value = value.toString();\n        if (loweredName in this._loweredHeaders) {\n          // Combine value with the existing header value.\n          name = this._loweredHeaders[loweredName];\n          this._headers[name] = this._headers[name] + ', ' + value;\n        } else {\n          // New header.\n          this._loweredHeaders[loweredName] = name;\n          this._headers[name] = value;\n        }\n        return void 0;\n      }\n\n      // Initiates the request.\n\n      // @param {?String, ?ArrayBufferView} data the data to be sent; ignored for\n      //   GET and HEAD requests\n      // @return {undefined} undefined\n      // @throw {InvalidStateError} readyState is not OPENED\n      // @see http://www.w3.org/TR/XMLHttpRequest/#the-send()-method\n      send(data) {\n        if (this.readyState !== XMLHttpRequest.OPENED) {\n          throw new InvalidStateError(\"XHR readyState must be OPENED\");\n        }\n        if (this._request) {\n          throw new InvalidStateError(\"send() already called\");\n        }\n        switch (this._url.protocol) {\n          case 'file:':\n            this._sendFile(data);\n            break;\n          case 'http:':\n          case 'https:':\n            this._sendHttp(data);\n            break;\n          default:\n            throw new NetworkError(`Unsupported protocol ${this._url.protocol}`);\n        }\n        return void 0;\n      }\n\n      // Cancels the network activity performed by this request.\n\n      // @return {undefined} undefined\n      // @see http://www.w3.org/TR/XMLHttpRequest/#the-abort()-method\n      abort() {\n        if (!this._request) {\n          return;\n        }\n        this._request.abort();\n        this._setError();\n        this._dispatchProgress('abort');\n        this._dispatchProgress('loadend');\n        return void 0;\n      }\n\n      // Returns a header value in the HTTP response for this XHR.\n\n      // @param {String} name case-insensitive HTTP header name\n      // @return {?String} value the value of the header whose name matches the\n      //   given name, or null if there is no such header\n      // @see http://www.w3.org/TR/XMLHttpRequest/#the-getresponseheader()-method\n      getResponseHeader(name) {\n        var loweredName;\n        if (!this._responseHeaders) {\n          return null;\n        }\n        loweredName = name.toLowerCase();\n        if (loweredName in this._responseHeaders) {\n          return this._responseHeaders[loweredName];\n        } else {\n          return null;\n        }\n      }\n\n      // Returns all the HTTP headers in this XHR's response.\n\n      // @return {String} header lines separated by CR LF, where each header line\n      //   has the name and value separated by a \": \" (colon, space); the empty\n      //   string is returned if the headers are not available\n      // @see http://www.w3.org/TR/XMLHttpRequest/#the-getallresponseheaders()-method\n      getAllResponseHeaders() {\n        var lines, name, value;\n        if (!this._responseHeaders) {\n          return '';\n        }\n        lines = (function() {\n          var ref, results;\n          ref = this._responseHeaders;\n          results = [];\n          for (name in ref) {\n            value = ref[name];\n            results.push(`${name}: ${value}`);\n          }\n          return results;\n        }).call(this);\n        return lines.join(\"\\r\\n\");\n      }\n\n      // Overrides the Content-Type\n\n      // @return {undefined} undefined\n      // @see http://www.w3.org/TR/XMLHttpRequest/#the-overridemimetype()-method\n      overrideMimeType(newMimeType) {\n        if (this.readyState === XMLHttpRequest.LOADING || this.readyState === XMLHttpRequest.DONE) {\n          throw new InvalidStateError(\"overrideMimeType() not allowed in LOADING or DONE\");\n        }\n        this._mimeOverride = newMimeType.toLowerCase();\n        return void 0;\n      }\n\n      // Network configuration not exposed in the XHR API.\n\n      // Although the XMLHttpRequest specification calls itself \"ECMAScript HTTP\",\n      // it assumes that requests are always performed in the context of a browser\n      // application, where some network parameters are set by the browser user and\n      // should not be modified by Web applications. This API provides access to\n      // these network parameters.\n\n      // NOTE: this is not in the XMLHttpRequest API, and will not work in\n      // browsers.  It is a stable node-xhr2 API.\n\n      // @param {Object} options one or more of the options below\n      // @option options {?http.Agent} httpAgent the value for the nodejsHttpAgent\n      //   property (the agent used for HTTP requests)\n      // @option options {?https.Agent} httpsAgent the value for the\n      //   nodejsHttpsAgent property (the agent used for HTTPS requests)\n      // @return {undefined} undefined\n      nodejsSet(options) {\n        var baseUrl, parsedUrl;\n        if ('httpAgent' in options) {\n          this.nodejsHttpAgent = options.httpAgent;\n        }\n        if ('httpsAgent' in options) {\n          this.nodejsHttpsAgent = options.httpsAgent;\n        }\n        if ('baseUrl' in options) {\n          baseUrl = options.baseUrl;\n          if (baseUrl !== null) {\n            parsedUrl = url.parse(baseUrl, false, true);\n            if (!parsedUrl.protocol) {\n              throw new SyntaxError(\"baseUrl must be an absolute URL\");\n            }\n          }\n          this.nodejsBaseUrl = baseUrl;\n        }\n        return void 0;\n      }\n\n      // Default settings for the network configuration not exposed in the XHR API.\n\n      // NOTE: this is not in the XMLHttpRequest API, and will not work in\n      // browsers.  It is a stable node-xhr2 API.\n\n      // @param {Object} options one or more of the options below\n      // @option options {?http.Agent} httpAgent the default value for the\n      //   nodejsHttpAgent property (the agent used for HTTP requests)\n      // @option options {https.Agent} httpsAgent the default value for the\n      //   nodejsHttpsAgent property (the agent used for HTTPS requests)\n      // @return {undefined} undefined\n      // @see XMLHttpRequest.nodejsSet\n      static nodejsSet(options) {\n        // \"this\" will be set to XMLHttpRequest.prototype, so the instance nodejsSet\n        // operates on default property values.\n        XMLHttpRequest.prototype.nodejsSet(options);\n        return void 0;\n      }\n\n      // Sets the readyState property and fires the readystatechange event.\n\n      // @private\n      // @param {Number} newReadyState the new value of readyState\n      // @return {undefined} undefined\n      _setReadyState(newReadyState) {\n        var event;\n        this.readyState = newReadyState;\n        event = new ProgressEvent('readystatechange');\n        this.dispatchEvent(event);\n        return void 0;\n      }\n\n      // XMLHttpRequest#send() implementation for the file: protocol.\n\n      // @private\n      _sendFile() {\n        if (this._url.method !== 'GET') {\n          throw new NetworkError('The file protocol only supports GET');\n        }\n        throw new Error(\"Protocol file: not implemented\");\n      }\n\n      // XMLHttpRequest#send() implementation for the http: and https: protocols.\n\n      // @private\n      // This method sets the instance variables and calls _sendHxxpRequest(), which\n      // is responsible for building a node.js request and firing it off. The code\n      // in _sendHxxpRequest() is separated off so it can be reused when handling\n      // redirects.\n\n      // @see http://www.w3.org/TR/XMLHttpRequest/#infrastructure-for-the-send()-method\n      _sendHttp(data) {\n        if (this._sync) {\n          throw new Error(\"Synchronous XHR processing not implemented\");\n        }\n        if ((data != null) && (this._method === 'GET' || this._method === 'HEAD')) {\n          console.warn(`Discarding entity body for ${this._method} requests`);\n          data = null;\n        } else {\n          // Send Content-Length: 0\n          data || (data = '');\n        }\n        // NOTE: this is called before finalizeHeaders so that the uploader can\n        //       figure out Content-Length and Content-Type.\n        this.upload._setData(data);\n        this._finalizeHeaders();\n        this._sendHxxpRequest();\n        return void 0;\n      }\n\n      // Sets up and fires off a HTTP/HTTPS request using the node.js API.\n\n      // @private\n      // This method contains the bulk of the XMLHttpRequest#send() implementation,\n      // and is also used to issue new HTTP requests when handling HTTP redirects.\n\n      // @see http://www.w3.org/TR/XMLHttpRequest/#infrastructure-for-the-send()-method\n      _sendHxxpRequest() {\n        var agent, hxxp, request;\n        if (this._url.protocol === 'http:') {\n          hxxp = http;\n          agent = this.nodejsHttpAgent;\n        } else {\n          hxxp = https;\n          agent = this.nodejsHttpsAgent;\n        }\n        request = hxxp.request({\n          hostname: this._url.hostname,\n          port: this._url.port,\n          path: this._url.path,\n          auth: this._url.auth,\n          method: this._method,\n          headers: this._headers,\n          agent: agent\n        });\n        this._request = request;\n        if (this.timeout) {\n          request.setTimeout(this.timeout, () => {\n            return this._onHttpTimeout(request);\n          });\n        }\n        request.on('response', (response) => {\n          return this._onHttpResponse(request, response);\n        });\n        request.on('error', (error) => {\n          return this._onHttpRequestError(request, error);\n        });\n        this.upload._startUpload(request);\n        if (this._request === request) { // An http error might have already fired.\n          this._dispatchProgress('loadstart');\n        }\n        return void 0;\n      }\n\n      // Fills in the restricted HTTP headers with default values.\n\n      // This is called right before the HTTP request is sent off.\n\n      // @private\n      // @return {undefined} undefined\n      _finalizeHeaders() {\n        var base;\n        this._headers['Connection'] = 'keep-alive';\n        this._headers['Host'] = this._url.host;\n        if (this._anonymous) {\n          this._headers['Referer'] = 'about:blank';\n        }\n        (base = this._headers)['User-Agent'] || (base['User-Agent'] = this._userAgent);\n        this.upload._finalizeHeaders(this._headers, this._loweredHeaders);\n        return void 0;\n      }\n\n      // Called when the headers of an HTTP response have been received.\n\n      // @private\n      // @param {http.ClientRequest} request the node.js ClientRequest instance that\n      //   produced this response\n      // @param {http.ClientResponse} response the node.js ClientResponse instance\n      //   passed to\n      _onHttpResponse(request, response) {\n        var lengthString;\n        if (this._request !== request) {\n          return;\n        }\n        // Transparent redirection handling.\n        switch (response.statusCode) {\n          case 301:\n          case 302:\n          case 303:\n          case 307:\n          case 308:\n            this._url = this._parseUrl(response.headers['location']);\n            this._method = 'GET';\n            if ('content-type' in this._loweredHeaders) {\n              delete this._headers[this._loweredHeaders['content-type']];\n              delete this._loweredHeaders['content-type'];\n            }\n            // XMLHttpRequestUpload#_finalizeHeaders() sets Content-Type directly.\n            if ('Content-Type' in this._headers) {\n              delete this._headers['Content-Type'];\n            }\n            // Restricted headers can't be set by the user, no need to check\n            // loweredHeaders.\n            delete this._headers['Content-Length'];\n            this.upload._reset();\n            this._finalizeHeaders();\n            this._sendHxxpRequest();\n            return;\n        }\n        this._response = response;\n        this._response.on('data', (data) => {\n          return this._onHttpResponseData(response, data);\n        });\n        this._response.on('end', () => {\n          return this._onHttpResponseEnd(response);\n        });\n        this._response.on('close', () => {\n          return this._onHttpResponseClose(response);\n        });\n        this.responseURL = this._url.href.split('#')[0];\n        this.status = this._response.statusCode;\n        this.statusText = http.STATUS_CODES[this.status];\n        this._parseResponseHeaders(response);\n        if (lengthString = this._responseHeaders['content-length']) {\n          this._totalBytes = parseInt(lengthString);\n          this._lengthComputable = true;\n        } else {\n          this._lengthComputable = false;\n        }\n        return this._setReadyState(XMLHttpRequest.HEADERS_RECEIVED);\n      }\n\n      // Called when some data has been received on a HTTP connection.\n\n      // @private\n      // @param {http.ClientResponse} response the node.js ClientResponse instance\n      //   that fired this event\n      // @param {String, Buffer} data the data that has been received\n      _onHttpResponseData(response, data) {\n        if (this._response !== response) {\n          return;\n        }\n        this._responseParts.push(data);\n        this._loadedBytes += data.length;\n        if (this.readyState !== XMLHttpRequest.LOADING) {\n          this._setReadyState(XMLHttpRequest.LOADING);\n        }\n        return this._dispatchProgress('progress');\n      }\n\n      // Called when the HTTP request finished processing.\n\n      // @private\n      // @param {http.ClientResponse} response the node.js ClientResponse instance\n      //   that fired this event\n      _onHttpResponseEnd(response) {\n        if (this._response !== response) {\n          return;\n        }\n        this._parseResponse();\n        this._request = null;\n        this._response = null;\n        this._setReadyState(XMLHttpRequest.DONE);\n        this._dispatchProgress('load');\n        return this._dispatchProgress('loadend');\n      }\n\n      // Called when the underlying HTTP connection was closed prematurely.\n\n      // If this method is called, it will be called after or instead of\n      // onHttpResponseEnd.\n\n      // @private\n      // @param {http.ClientResponse} response the node.js ClientResponse instance\n      //   that fired this event\n      _onHttpResponseClose(response) {\n        var request;\n        if (this._response !== response) {\n          return;\n        }\n        request = this._request;\n        this._setError();\n        request.abort();\n        this._setReadyState(XMLHttpRequest.DONE);\n        this._dispatchProgress('error');\n        return this._dispatchProgress('loadend');\n      }\n\n      // Called when the timeout set on the HTTP socket expires.\n\n      // @private\n      // @param {http.ClientRequest} request the node.js ClientRequest instance that\n      //   fired this event\n      _onHttpTimeout(request) {\n        if (this._request !== request) {\n          return;\n        }\n        this._setError();\n        request.abort();\n        this._setReadyState(XMLHttpRequest.DONE);\n        this._dispatchProgress('timeout');\n        return this._dispatchProgress('loadend');\n      }\n\n      // Called when something wrong happens on the HTTP socket\n\n      // @private\n      // @param {http.ClientRequest} request the node.js ClientRequest instance that\n      //   fired this event\n      // @param {Error} error emitted exception\n      _onHttpRequestError(request, error) {\n        if (this._request !== request) {\n          return;\n        }\n        this._setError();\n        request.abort();\n        this._setReadyState(XMLHttpRequest.DONE);\n        this._dispatchProgress('error');\n        return this._dispatchProgress('loadend');\n      }\n\n      // Fires an XHR progress event.\n\n      // @private\n      // @param {String} eventType one of the XHR progress event types, such as\n      //   'load' and 'progress'\n      _dispatchProgress(eventType) {\n        var event;\n        event = new ProgressEvent(eventType);\n        event.lengthComputable = this._lengthComputable;\n        event.loaded = this._loadedBytes;\n        event.total = this._totalBytes;\n        this.dispatchEvent(event);\n        return void 0;\n      }\n\n      // Sets up the XHR to reflect the fact that an error has occurred.\n\n      // The possible errors are a network error, a timeout, or an abort.\n\n      // @private\n      _setError() {\n        this._request = null;\n        this._response = null;\n        this._responseHeaders = null;\n        this._responseParts = null;\n        return void 0;\n      }\n\n      // Parses a request URL string.\n\n      // @private\n      // This method is a thin wrapper around url.parse() that normalizes HTTP\n      // user/password credentials. It is used to parse the URL string passed to\n      // XMLHttpRequest#open() and the URLs in the Location headers of HTTP redirect\n      // responses.\n\n      // @param {String} urlString the URL to be parsed\n      // @return {Object} parsed URL\n      _parseUrl(urlString) {\n        var absoluteUrlString, index, password, user, xhrUrl;\n        if (this.nodejsBaseUrl === null) {\n          absoluteUrlString = urlString;\n        } else {\n          absoluteUrlString = url.resolve(this.nodejsBaseUrl, urlString);\n        }\n        xhrUrl = url.parse(absoluteUrlString, false, true);\n        xhrUrl.hash = null;\n        if (xhrUrl.auth && ((typeof user !== \"undefined\" && user !== null) || (typeof password !== \"undefined\" && password !== null))) {\n          index = xhrUrl.auth.indexOf(':');\n          if (index === -1) {\n            if (!user) {\n              user = xhrUrl.auth;\n            }\n          } else {\n            if (!user) {\n              user = xhrUrl.substring(0, index);\n            }\n            if (!password) {\n              password = xhrUrl.substring(index + 1);\n            }\n          }\n        }\n        if (user || password) {\n          xhrUrl.auth = `${user}:${password}`;\n        }\n        return xhrUrl;\n      }\n\n      // Reads the headers from a node.js ClientResponse instance.\n\n      // @private\n      // @param {http.ClientResponse} response the response whose headers will be\n      //   imported into this XMLHttpRequest's state\n      // @return {undefined} undefined\n      // @see http://www.w3.org/TR/XMLHttpRequest/#the-getresponseheader()-method\n      // @see http://www.w3.org/TR/XMLHttpRequest/#the-getallresponseheaders()-method\n      _parseResponseHeaders(response) {\n        var loweredName, name, ref, value;\n        this._responseHeaders = {};\n        ref = response.headers;\n        for (name in ref) {\n          value = ref[name];\n          loweredName = name.toLowerCase();\n          if (this._privateHeaders[loweredName]) {\n            continue;\n          }\n          if (this._mimeOverride !== null && loweredName === 'content-type') {\n            value = this._mimeOverride;\n          }\n          this._responseHeaders[loweredName] = value;\n        }\n        if (this._mimeOverride !== null && !('content-type' in this._responseHeaders)) {\n          this._responseHeaders['content-type'] = this._mimeOverride;\n        }\n        return void 0;\n      }\n\n      // Sets the response and responseText properties when an XHR completes.\n\n      // @private\n      // @return {undefined} undefined\n      _parseResponse() {\n        var arrayBuffer, buffer, i, j, jsonError, ref, view;\n        if (Buffer.concat) {\n          buffer = Buffer.concat(this._responseParts);\n        } else {\n          // node 0.6\n          buffer = this._concatBuffers(this._responseParts);\n        }\n        this._responseParts = null;\n        switch (this.responseType) {\n          case 'text':\n            this._parseTextResponse(buffer);\n            break;\n          case 'json':\n            this.responseText = null;\n            try {\n              this.response = JSON.parse(buffer.toString('utf-8'));\n            } catch (error1) {\n              jsonError = error1;\n              this.response = null;\n            }\n            break;\n          case 'buffer':\n            this.responseText = null;\n            this.response = buffer;\n            break;\n          case 'arraybuffer':\n            this.responseText = null;\n            arrayBuffer = new ArrayBuffer(buffer.length);\n            view = new Uint8Array(arrayBuffer);\n            for (i = j = 0, ref = buffer.length; (0 <= ref ? j < ref : j > ref); i = 0 <= ref ? ++j : --j) {\n              view[i] = buffer[i];\n            }\n            this.response = arrayBuffer;\n            break;\n          default:\n            // TODO(pwnall): content-base detection\n            this._parseTextResponse(buffer);\n        }\n        return void 0;\n      }\n\n      // Sets response and responseText for a 'text' response type.\n\n      // @private\n      // @param {Buffer} buffer the node.js Buffer containing the binary response\n      // @return {undefined} undefined\n      _parseTextResponse(buffer) {\n        var e;\n        try {\n          this.responseText = buffer.toString(this._parseResponseEncoding());\n        } catch (error1) {\n          e = error1;\n          // Unknown encoding.\n          this.responseText = buffer.toString('binary');\n        }\n        this.response = this.responseText;\n        return void 0;\n      }\n\n      // Figures out the string encoding of the XHR's response.\n\n      // This is called to determine the encoding when responseText is set.\n\n      // @private\n      // @return {String} a string encoding, e.g. 'utf-8'\n      _parseResponseEncoding() {\n        var contentType, encoding, match;\n        encoding = null;\n        if (contentType = this._responseHeaders['content-type']) {\n          if (match = /\\;\\s*charset\\=(.*)$/.exec(contentType)) {\n            return match[1];\n          }\n        }\n        return 'utf-8';\n      }\n\n      // Buffer.concat implementation for node 0.6.\n\n      // @private\n      // @param {Array<Buffer>} buffers the buffers whose contents will be merged\n      // @return {Buffer} same as Buffer.concat(buffers) in node 0.8 and above\n      _concatBuffers(buffers) {\n        var buffer, j, k, len, len1, length, target;\n        if (buffers.length === 0) {\n          return Buffer.alloc(0);\n        }\n        if (buffers.length === 1) {\n          return buffers[0];\n        }\n        length = 0;\n        for (j = 0, len = buffers.length; j < len; j++) {\n          buffer = buffers[j];\n          length += buffer.length;\n        }\n        target = Buffer.alloc(length);\n        length = 0;\n        for (k = 0, len1 = buffers.length; k < len1; k++) {\n          buffer = buffers[k];\n          buffer.copy(target, length);\n          length += buffer.length;\n        }\n        return target;\n      }\n\n    };\n\n    // @property {function(ProgressEvent)} DOM level 0-style handler for the\n    //   'readystatechange' event\n    XMLHttpRequest.prototype.onreadystatechange = null;\n\n    // @property {Number} the current state of the XHR object\n    // @see http://www.w3.org/TR/XMLHttpRequest/#states\n    XMLHttpRequest.prototype.readyState = null;\n\n    // @property {String, ArrayBuffer, Buffer, Object} processed XHR response\n    // @see http://www.w3.org/TR/XMLHttpRequest/#the-response-attribute\n    XMLHttpRequest.prototype.response = null;\n\n    // @property {String} response string, if responseType is '' or 'text'\n    // @see http://www.w3.org/TR/XMLHttpRequest/#the-responsetext-attribute\n    XMLHttpRequest.prototype.responseText = null;\n\n    // @property {String} sets the parsing method for the XHR response\n    // @see http://www.w3.org/TR/XMLHttpRequest/#the-responsetype-attribute\n    XMLHttpRequest.prototype.responseType = null;\n\n    // @property {Number} the HTTP\n    // @see http://www.w3.org/TR/XMLHttpRequest/#the-status-attribute\n    XMLHttpRequest.prototype.status = null;\n\n    // @property {Number} milliseconds to wait for the request to complete\n    // @see http://www.w3.org/TR/XMLHttpRequest/#the-timeout-attribute\n    XMLHttpRequest.prototype.timeout = null;\n\n    // @property {XMLHttpRequestUpload} the associated upload information\n    // @see http://www.w3.org/TR/XMLHttpRequest/#the-upload-attribute\n    XMLHttpRequest.prototype.upload = null;\n\n    // readyState value before XMLHttpRequest#open() is called\n    XMLHttpRequest.prototype.UNSENT = 0;\n\n    // readyState value before XMLHttpRequest#open() is called\n    XMLHttpRequest.UNSENT = 0;\n\n    // readyState value after XMLHttpRequest#open() is called, and before\n    //   XMLHttpRequest#send() is called; XMLHttpRequest#setRequestHeader() can be\n    //   called in this state\n    XMLHttpRequest.prototype.OPENED = 1;\n\n    // readyState value after XMLHttpRequest#open() is called, and before\n    //   XMLHttpRequest#send() is called; XMLHttpRequest#setRequestHeader() can be\n    //   called in this state\n    XMLHttpRequest.OPENED = 1;\n\n    // readyState value after redirects have been followed and the HTTP headers of\n    //   the final response have been received\n    XMLHttpRequest.prototype.HEADERS_RECEIVED = 2;\n\n    // readyState value after redirects have been followed and the HTTP headers of\n    //   the final response have been received\n    XMLHttpRequest.HEADERS_RECEIVED = 2;\n\n    // readyState value when the response entity body is being received\n    XMLHttpRequest.prototype.LOADING = 3;\n\n    // readyState value when the response entity body is being received\n    XMLHttpRequest.LOADING = 3;\n\n    // readyState value after the request has been completely processed\n    XMLHttpRequest.prototype.DONE = 4;\n\n    // readyState value after the request has been completely processed\n    XMLHttpRequest.DONE = 4;\n\n    // @property {http.Agent} the agent option passed to HTTP requests\n\n    // NOTE: this is not in the XMLHttpRequest API, and will not work in browsers.\n    // It is a stable node-xhr2 API that is useful for testing & going through\n    // web-proxies.\n    XMLHttpRequest.prototype.nodejsHttpAgent = http.globalAgent;\n\n    // @property {https.Agent} the agent option passed to HTTPS requests\n\n    // NOTE: this is not in the XMLHttpRequest API, and will not work in browsers.\n    // It is a stable node-xhr2 API that is useful for testing & going through\n    // web-proxies.\n    XMLHttpRequest.prototype.nodejsHttpsAgent = https.globalAgent;\n\n    // @property {String} the base URL that relative URLs get resolved to\n\n    // NOTE: this is not in the XMLHttpRequest API, and will not work in browsers.\n    // Its browser equivalent is the base URL of the document associated with the\n    // Window object. It is a stable node-xhr2 API provided for libraries such as\n    // Angular Universal.\n    XMLHttpRequest.prototype.nodejsBaseUrl = null;\n\n    // HTTP methods that are disallowed in the XHR spec.\n\n    // @private\n    // @see Step 6 in http://www.w3.org/TR/XMLHttpRequest/#the-open()-method\n    XMLHttpRequest.prototype._restrictedMethods = {\n      CONNECT: true,\n      TRACE: true,\n      TRACK: true\n    };\n\n    // HTTP request headers that are disallowed in the XHR spec.\n\n    // @private\n    // @see Step 5 in\n    //   http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader()-method\n    XMLHttpRequest.prototype._restrictedHeaders = {\n      'accept-charset': true,\n      'accept-encoding': true,\n      'access-control-request-headers': true,\n      'access-control-request-method': true,\n      connection: true,\n      'content-length': true,\n      cookie: true,\n      cookie2: true,\n      date: true,\n      dnt: true,\n      expect: true,\n      host: true,\n      'keep-alive': true,\n      origin: true,\n      referer: true,\n      te: true,\n      trailer: true,\n      'transfer-encoding': true,\n      upgrade: true,\n      via: true\n    };\n\n    // HTTP response headers that should not be exposed according to the XHR spec.\n\n    // @private\n    // @see Step 3 in\n    //     http://www.w3.org/TR/XMLHttpRequest/#the-getresponseheader()-method\n    XMLHttpRequest.prototype._privateHeaders = {\n      'set-cookie': true,\n      'set-cookie2': true\n    };\n\n    // The default value of the User-Agent header.\n    XMLHttpRequest.prototype._userAgent = `Mozilla/5.0 (${os.type()} ${os.arch()}) ` + `node.js/${process.versions.node} v8/${process.versions.v8}`;\n\n    return XMLHttpRequest;\n\n  }).call(this);\n\n  // XMLHttpRequest is the result of require('node-xhr2').\n  module.exports = XMLHttpRequest;\n\n  // Make node-xhr2 work as a drop-in replacement for libraries that promote the\n  // following usage pattern:\n  //     var XMLHttpRequest = require('xhr-library-name').XMLHttpRequest\n  XMLHttpRequest.XMLHttpRequest = XMLHttpRequest;\n\n  // This file defines the custom errors used in the XMLHttpRequest specification.\n\n    // Thrown if the XHR security policy is violated.\n  SecurityError = class SecurityError extends Error {\n    // @private\n    constructor() {\n      super();\n    }\n\n  };\n\n  // Thrown if the XHR security policy is violated.\n  XMLHttpRequest.SecurityError = SecurityError;\n\n  // Usually thrown if the XHR is in the wrong readyState for an operation.\n  InvalidStateError = class InvalidStateError extends Error {\n    // @private\n    constructor() {\n      super();\n    }\n\n  };\n\n  // Usually thrown if the XHR is in the wrong readyState for an operation.\n  InvalidStateError = class InvalidStateError extends Error {};\n\n  XMLHttpRequest.InvalidStateError = InvalidStateError;\n\n  // Thrown if there is a problem with the URL passed to the XHR.\n  NetworkError = class NetworkError extends Error {\n    // @private\n    constructor() {\n      super();\n    }\n\n  };\n\n  // Thrown if parsing URLs errors out.\n  XMLHttpRequest.SyntaxError = SyntaxError;\n\n  SyntaxError = class SyntaxError extends Error {\n    // @private:\n    constructor() {\n      super();\n    }\n\n  };\n\n  ProgressEvent = (function() {\n    // http://xhr.spec.whatwg.org/#interface-progressevent\n    class ProgressEvent {\n      // Creates a new event.\n\n      // @param {String} type the event type, e.g. 'readystatechange'; must be\n      //   lowercased\n      constructor(type) {\n        this.type = type;\n        this.target = null;\n        this.currentTarget = null;\n        this.lengthComputable = false;\n        this.loaded = 0;\n        this.total = 0;\n      }\n\n    };\n\n    // Getting the time from the OS is expensive, skip on that for now.\n    // @timeStamp = Date.now()\n\n    // @property {Boolean} for compatibility with DOM events\n    ProgressEvent.prototype.bubbles = false;\n\n    // @property {Boolean} for fompatibility with DOM events\n    ProgressEvent.prototype.cancelable = false;\n\n    // @property {XMLHttpRequest} the request that caused this event\n    ProgressEvent.prototype.target = null;\n\n    // @property {Number} number of bytes that have already been downloaded or\n    //   uploaded\n    ProgressEvent.prototype.loaded = null;\n\n    // @property {Boolean} true if the Content-Length response header is available\n    //   and the value of the event's total property is meaningful\n    ProgressEvent.prototype.lengthComputable = null;\n\n    // @property {Number} number of bytes that will be downloaded or uploaded by\n    //   the request that fired the event\n    ProgressEvent.prototype.total = null;\n\n    return ProgressEvent;\n\n  }).call(this);\n\n  // The XHR spec exports the ProgressEvent constructor.\n  XMLHttpRequest.ProgressEvent = ProgressEvent;\n\n  // @see http://xhr.spec.whatwg.org/#interface-xmlhttprequest\n  XMLHttpRequestUpload = class XMLHttpRequestUpload extends XMLHttpRequestEventTarget {\n    // @private\n    // @param {XMLHttpRequest} the XMLHttpRequest that this upload object is\n    //   associated with\n    constructor(request) {\n      super();\n      this._request = request;\n      this._reset();\n    }\n\n    // Sets up this Upload to handle a new request.\n\n    // @private\n    // @return {undefined} undefined\n    _reset() {\n      this._contentType = null;\n      this._body = null;\n      return void 0;\n    }\n\n    // Implements the upload-related part of the send() XHR specification.\n\n    // @private\n    // @param {?String, ?Buffer, ?ArrayBufferView} data the argument passed to\n    //   XMLHttpRequest#send()\n    // @return {undefined} undefined\n    // @see step 4 of http://www.w3.org/TR/XMLHttpRequest/#the-send()-method\n    _setData(data) {\n      var body, i, j, k, offset, ref, ref1, view;\n      if (typeof data === 'undefined' || data === null) {\n        return;\n      }\n      if (typeof data === 'string') {\n        // DOMString\n        if (data.length !== 0) {\n          this._contentType = 'text/plain;charset=UTF-8';\n        }\n        this._body = Buffer.from(data, 'utf8');\n      } else if (Buffer.isBuffer(data)) {\n        // node.js Buffer\n        this._body = data;\n      } else if (data instanceof ArrayBuffer) {\n        // ArrayBuffer arguments were supported in an old revision of the spec.\n        body = Buffer.alloc(data.byteLength);\n        view = new Uint8Array(data);\n        for (i = j = 0, ref = data.byteLength; (0 <= ref ? j < ref : j > ref); i = 0 <= ref ? ++j : --j) {\n          body[i] = view[i];\n        }\n        this._body = body;\n      } else if (data.buffer && data.buffer instanceof ArrayBuffer) {\n        // ArrayBufferView\n        body = Buffer.alloc(data.byteLength);\n        offset = data.byteOffset;\n        view = new Uint8Array(data.buffer);\n        for (i = k = 0, ref1 = data.byteLength; (0 <= ref1 ? k < ref1 : k > ref1); i = 0 <= ref1 ? ++k : --k) {\n          body[i] = view[i + offset];\n        }\n        this._body = body;\n      } else {\n        // NOTE: diverging from the XHR specification of coercing everything else\n        //       to Strings via toString() because that behavior masks bugs and is\n        //       rarely useful\n        throw new Error(`Unsupported send() data ${data}`);\n      }\n      return void 0;\n    }\n\n    // Updates the HTTP headers right before the request is sent.\n\n    // This is used to set data-dependent headers such as Content-Length and\n    // Content-Type.\n\n    // @private\n    // @param {Object<String, String>} headers the HTTP headers to be sent\n    // @param {Object<String, String>} loweredHeaders maps lowercased HTTP header\n    //   names (e.g., 'content-type') to the actual names used in the headers\n    //   parameter (e.g., 'Content-Type')\n    // @return {undefined} undefined\n    _finalizeHeaders(headers, loweredHeaders) {\n      if (this._contentType) {\n        if (!('content-type' in loweredHeaders)) {\n          headers['Content-Type'] = this._contentType;\n        }\n      }\n      if (this._body) {\n        // Restricted headers can't be set by the user, no need to check\n        // loweredHeaders.\n        headers['Content-Length'] = this._body.length.toString();\n      }\n      return void 0;\n    }\n\n    // Starts sending the HTTP request data.\n\n    // @private\n    // @param {http.ClientRequest} request the HTTP request\n    // @return {undefined} undefined\n    _startUpload(request) {\n      if (this._body) {\n        request.write(this._body);\n      }\n      request.end();\n      return void 0;\n    }\n\n  };\n\n  // Export the XMLHttpRequestUpload constructor.\n  XMLHttpRequest.XMLHttpRequestUpload = XMLHttpRequestUpload;\n\n}).call(this);\n"],"names":["InvalidStateError","NetworkError","ProgressEvent","SecurityError","SyntaxError","XMLHttpRequest","XMLHttpRequestEventTarget","XMLHttpRequestUpload","http","https","os","url","constructor","onloadstart","onprogress","onabort","onerror","onload","ontimeout","onloadend","_listeners","addEventListener","eventType","listener","base","toLowerCase","push","removeEventListener","index","indexOf","splice","dispatchEvent","event","j","len","listeners","currentTarget","target","type","length","call","prototype","require","options","onreadystatechange","_anonymous","anon","readyState","UNSENT","response","responseText","responseType","responseURL","status","statusText","timeout","upload","_method","_url","_sync","_headers","_loweredHeaders","_mimeOverride","_request","_response","_responseParts","_responseHeaders","_aborting","_error","_loadedBytes","_totalBytes","_lengthComputable","open","method","async","user","password","xhrUrl","toUpperCase","_restrictedMethods","_parseUrl","OPENED","DONE","HEADERS_RECEIVED","LOADING","_setReadyState","setRequestHeader","name","value","loweredName","_restrictedHeaders","test","console","warn","toString","send","data","protocol","_sendFile","_sendHttp","abort","_setError","_dispatchProgress","getResponseHeader","getAllResponseHeaders","lines","ref","results","join","overrideMimeType","newMimeType","nodejsSet","baseUrl","parsedUrl","nodejsHttpAgent","httpAgent","nodejsHttpsAgent","httpsAgent","parse","nodejsBaseUrl","newReadyState","Error","_setData","_finalizeHeaders","_sendHxxpRequest","agent","hxxp","request","hostname","port","path","auth","headers","setTimeout","_onHttpTimeout","on","_onHttpResponse","error","_onHttpRequestError","_startUpload","host","_userAgent","lengthString","statusCode","_reset","_onHttpResponseData","_onHttpResponseEnd","_onHttpResponseClose","href","split","STATUS_CODES","_parseResponseHeaders","parseInt","_parseResponse","lengthComputable","loaded","total","urlString","absoluteUrlString","resolve","hash","substring","_privateHeaders","arrayBuffer","buffer","i","jsonError","view","Buffer","concat","_concatBuffers","_parseTextResponse","JSON","error1","ArrayBuffer","Uint8Array","e","_parseResponseEncoding","contentType","encoding","match","exec","buffers","k","len1","alloc","copy","globalAgent","CONNECT","TRACE","TRACK","connection","cookie","cookie2","date","dnt","expect","origin","referer","te","trailer","upgrade","via","arch","process","versions","node","v8","module","exports","bubbles","cancelable","_contentType","_body","body","offset","ref1","from","isBuffer","byteLength","byteOffset","loweredHeaders","write","end"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}